<?php

/**
 * RpMemberDirectory form base class.
 *
 * @package    angelflight
 * @subpackage form
 * @author     Your name here
 * @version    SVN: $Id: sfPropelFormGeneratedTemplate.php 16976 2009-04-04 12:47:44Z fabien $
 */
class BaseRpMemberDirectoryForm extends BaseFormPropel
{
  public function setup()
  {
    $this->setWidgets(array(
      'external_id'            => new sfWidgetFormInput(),
      'personID'               => new sfWidgetFormInput(),
      'firstName'              => new sfWidgetFormInput(),
      'lastName'               => new sfWidgetFormInput(),
      'address_one'            => new sfWidgetFormInput(),
      'address_two'            => new sfWidgetFormInput(),
      'city'                   => new sfWidgetFormInput(),
      'state'                  => new sfWidgetFormInput(),
      'zipcode'                => new sfWidgetFormInput(),
      'deceased'               => new sfWidgetFormInput(),
      'emailBlocked'           => new sfWidgetFormInput(),
      'email'                  => new sfWidgetFormInput(),
      'secondaryEmail'         => new sfWidgetFormInput(),
      'pagerEmail'             => new sfWidgetFormInput(),
      'countyName'             => new sfWidgetFormInput(),
      'areaCode'               => new sfWidgetFormInput(),
      'dayPhone'               => new sfWidgetFormInput(),
      'day_comment'            => new sfWidgetFormInput(),
      'evePhone'               => new sfWidgetFormInput(),
      'evening_comment'        => new sfWidgetFormInput(),
      'mobilePhone'            => new sfWidgetFormInput(),
      'mobile_comment'         => new sfWidgetFormInput(),
      'pagerPhone'             => new sfWidgetFormInput(),
      'pager_comment'          => new sfWidgetFormInput(),
      'faxPhone1'              => new sfWidgetFormInput(),
      'fax_comment1'           => new sfWidgetFormInput(),
      'faxPhone2'              => new sfWidgetFormInput(),
      'fax_comment2'           => new sfWidgetFormInput(),
      'otherPhone'             => new sfWidgetFormInput(),
      'other_comment'          => new sfWidgetFormInput(),
      'license_type'           => new sfWidgetFormInput(),
      'ifr'                    => new sfWidgetFormInput(),
      'multiEngine'            => new sfWidgetFormInput(),
      'se_instructor'          => new sfWidgetFormInput(),
      'hseats'                 => new sfWidgetFormInput(),
      'transplant'             => new sfWidgetFormInput(),
      'me_instructor'          => new sfWidgetFormInput(),
      'mop_regions_served'     => new sfWidgetFormInput(),
      'mop'                    => new sfWidgetFormInput(),
      'insurance_received'     => new sfWidgetFormDateTime(),
      'cfi'                    => new sfWidgetFormInput(),
      'insuranceExpired'       => new sfWidgetFormInput(),
      'memberID'               => new sfWidgetFormInput(),
      'flight_status'          => new sfWidgetFormInput(),
      'renewal_date'           => new sfWidgetFormDate(),
      'date_of_birth'          => new sfWidgetFormDate(),
      'birthdayMonth'          => new sfWidgetFormInput(),
      'disasterResponseStatus' => new sfWidgetFormInput(),
      'coordinator_notes'      => new sfWidgetFormInput(),
      'wingName'               => new sfWidgetFormInput(),
      'wing_id'                => new sfWidgetFormInput(),
      'active'                 => new sfWidgetFormInput(),
      'member_class_id'        => new sfWidgetFormInput(),
      'homeBase'               => new sfWidgetFormInput(),
      'wingJobID'              => new sfWidgetFormInput(),
      'wingJob'                => new sfWidgetFormInput(),
      'coordinator'            => new sfWidgetFormInput(),
      'coordinatorID'          => new sfWidgetFormInput(),
      'boardMember'            => new sfWidgetFormInput(),
      'boardMemberID'          => new sfWidgetFormInput(),
      'notAvailable'           => new sfWidgetFormInput(),
      'noWeekday'              => new sfWidgetFormInput(),
      'noNight'                => new sfWidgetFormInput(),
      'noWeekend'              => new sfWidgetFormInput(),
      'lastMinute'             => new sfWidgetFormInput(),
      'firstDate'              => new sfWidgetFormDate(),
      'lastDate'               => new sfWidgetFormDate(),
      'availabilityComment'    => new sfWidgetFormInput(),
      'aircraftOwner'          => new sfWidgetFormInput(),
      'fastestAircraft'        => new sfWidgetFormInput(),
      'longestRangeAircraft'   => new sfWidgetFormInput(),
      'mostSeatsAircraft'      => new sfWidgetFormInput(),
      'maxLoadAircraft'        => new sfWidgetFormInput(),
      'missionCountThisYear'   => new sfWidgetFormInput(),
      'missionCountTotal'      => new sfWidgetFormInput(),
      'lastMissionFlown'       => new sfWidgetFormInput(),
      'nextPendingMission'     => new sfWidgetFormInput(),
      'id'                     => new sfWidgetFormInputHidden(),
    ));

    $this->setValidators(array(
      'external_id'            => new sfValidatorInteger(array('required' => false)),
      'personID'               => new sfValidatorInteger(),
      'firstName'              => new sfValidatorString(array('max_length' => 40)),
      'lastName'               => new sfValidatorString(array('max_length' => 40)),
      'address_one'            => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'address_two'            => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'city'                   => new sfValidatorString(array('max_length' => 30, 'required' => false)),
      'state'                  => new sfValidatorString(array('max_length' => 2, 'required' => false)),
      'zipcode'                => new sfValidatorString(array('max_length' => 30, 'required' => false)),
      'deceased'               => new sfValidatorInteger(array('required' => false)),
      'emailBlocked'           => new sfValidatorInteger(array('required' => false)),
      'email'                  => new sfValidatorString(array('max_length' => 80, 'required' => false)),
      'secondaryEmail'         => new sfValidatorString(array('max_length' => 80, 'required' => false)),
      'pagerEmail'             => new sfValidatorString(array('max_length' => 80, 'required' => false)),
      'countyName'             => new sfValidatorString(array('max_length' => 30, 'required' => false)),
      'areaCode'               => new sfValidatorString(array('max_length' => 3, 'required' => false)),
      'dayPhone'               => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'day_comment'            => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'evePhone'               => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'evening_comment'        => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'mobilePhone'            => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'mobile_comment'         => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'pagerPhone'             => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'pager_comment'          => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'faxPhone1'              => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'fax_comment1'           => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'faxPhone2'              => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'fax_comment2'           => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'otherPhone'             => new sfValidatorString(array('max_length' => 16, 'required' => false)),
      'other_comment'          => new sfValidatorString(array('max_length' => 40, 'required' => false)),
      'license_type'           => new sfValidatorString(array('max_length' => 10, 'required' => false)),
      'ifr'                    => new sfValidatorInteger(array('required' => false)),
      'multiEngine'            => new sfValidatorInteger(array('required' => false)),
      'se_instructor'          => new sfValidatorString(array('max_length' => 5, 'required' => false)),
      'hseats'                 => new sfValidatorString(array('max_length' => 30, 'required' => false)),
      'transplant'             => new sfValidatorInteger(array('required' => false)),
      'me_instructor'          => new sfValidatorString(array('max_length' => 5, 'required' => false)),
      'mop_regions_served'     => new sfValidatorString(array('max_length' => 125, 'required' => false)),
      'mop'                    => new sfValidatorInteger(),
      'insurance_received'     => new sfValidatorDateTime(array('required' => false)),
      'cfi'                    => new sfValidatorInteger(array('required' => false)),
      'insuranceExpired'       => new sfValidatorInteger(array('required' => false)),
      'memberID'               => new sfValidatorInteger(),
      'flight_status'          => new sfValidatorString(array('max_length' => 20)),
      'renewal_date'           => new sfValidatorDate(array('required' => false)),
      'date_of_birth'          => new sfValidatorDate(array('required' => false)),
      'birthdayMonth'          => new sfValidatorInteger(array('required' => false)),
      'disasterResponseStatus' => new sfValidatorString(array('max_length' => 30, 'required' => false)),
      'coordinator_notes'      => new sfValidatorString(array('max_length' => 255, 'required' => false)),
      'wingName'               => new sfValidatorString(array('max_length' => 30)),
      'wing_id'                => new sfValidatorInteger(array('required' => false)),
      'active'                 => new sfValidatorInteger(),
      'member_class_id'        => new sfValidatorInteger(),
      'homeBase'               => new sfValidatorString(array('max_length' => 4, 'required' => false)),
      'wingJobID'              => new sfValidatorInteger(array('required' => false)),
      'wingJob'                => new sfValidatorString(array('max_length' => 30, 'required' => false)),
      'coordinator'            => new sfValidatorInteger(),
      'coordinatorID'          => new sfValidatorInteger(array('required' => false)),
      'boardMember'            => new sfValidatorInteger(),
      'boardMemberID'          => new sfValidatorInteger(array('required' => false)),
      'notAvailable'           => new sfValidatorInteger(array('required' => false)),
      'noWeekday'              => new sfValidatorInteger(array('required' => false)),
      'noNight'                => new sfValidatorInteger(array('required' => false)),
      'noWeekend'              => new sfValidatorInteger(array('required' => false)),
      'lastMinute'             => new sfValidatorInteger(array('required' => false)),
      'firstDate'              => new sfValidatorDate(array('required' => false)),
      'lastDate'               => new sfValidatorDate(array('required' => false)),
      'availabilityComment'    => new sfValidatorString(array('max_length' => 50, 'required' => false)),
      'aircraftOwner'          => new sfValidatorInteger(array('required' => false)),
      'fastestAircraft'        => new sfValidatorInteger(array('required' => false)),
      'longestRangeAircraft'   => new sfValidatorInteger(array('required' => false)),
      'mostSeatsAircraft'      => new sfValidatorInteger(array('required' => false)),
      'maxLoadAircraft'        => new sfValidatorInteger(array('required' => false)),
      'missionCountThisYear'   => new sfValidatorInteger(array('required' => false)),
      'missionCountTotal'      => new sfValidatorInteger(array('required' => false)),
      'lastMissionFlown'       => new sfValidatorString(array('max_length' => 10, 'required' => false)),
      'nextPendingMission'     => new sfValidatorString(array('max_length' => 10, 'required' => false)),
      'id'                     => new sfValidatorPropelChoice(array('model' => 'RpMemberDirectory', 'column' => 'id', 'required' => false)),
    ));

    $this->widgetSchema->setNameFormat('rp_member_directory[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    parent::setup();
  }

  public function getModelName()
  {
    return 'RpMemberDirectory';
  }


}
