<?php


/**
 * This class adds structure of 'mission_photo' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:28 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class MissionPhotoMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.MissionPhotoMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(MissionPhotoPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(MissionPhotoPeer::TABLE_NAME);
		$tMap->setPhpName('MissionPhoto');
		$tMap->setClassname('MissionPhoto');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 4);

		$tMap->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', false, 50);

		$tMap->addColumn('LAST_NAME', 'LastName', 'VARCHAR', false, 50);

		$tMap->addColumn('SUBMISSION_DATE', 'SubmissionDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('MISSION_DATE', 'MissionDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('PASSENGER_NAME', 'PassengerName', 'VARCHAR', false, 50);

		$tMap->addColumn('PILOT_NAME', 'PilotName', 'VARCHAR', false, 50);

		$tMap->addColumn('ORIGIN', 'Origin', 'VARCHAR', false, 25);

		$tMap->addColumn('DESTINATION', 'Destination', 'VARCHAR', false, 25);

		$tMap->addColumn('CAPTION', 'Caption', 'VARCHAR', false, 255);

		$tMap->addColumn('COMMENT', 'Comment', 'VARCHAR', false, 255);

		$tMap->addColumn('PHOTO_FILENAME', 'PhotoFilename', 'VARCHAR', false, 75);

		$tMap->addForeignKey('MISSION_ID', 'MissionId', 'INTEGER', 'mission', 'ID', false, 4);

		$tMap->addColumn('REVIEW_DATE', 'ReviewDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('REVIEW_BY', 'ReviewBy', 'INTEGER', false, 4);

		$tMap->addColumn('APPROVED', 'Approved', 'TINYINT', false, 1);

		$tMap->addColumn('FILESIZE', 'Filesize', 'INTEGER', false, 4);

		$tMap->addColumn('HEIGHT', 'Height', 'INTEGER', false, 4);

		$tMap->addColumn('WIDTH', 'Width', 'INTEGER', false, 4);

		$tMap->addColumn('FILE_FORMAT', 'FileFormat', 'INTEGER', false, 4);

		$tMap->addColumn('PHOTO_QUALITY', 'PhotoQuality', 'INTEGER', false, 4);

		$tMap->addColumn('EVENT_ID', 'EventId', 'INTEGER', false, 11);

		$tMap->addForeignKey('LEG_ID', 'LegId', 'INTEGER', 'mission_leg', 'ID', false, 4);

		$tMap->addColumn('CATEGORY', 'Category', 'VARCHAR', false, 25);

		$tMap->addColumn('PHOTO_USE', 'PhotoUse', 'VARCHAR', false, 25);

	} // doBuild()

} // MissionPhotoMapBuilder
