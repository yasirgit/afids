<?php


/**
 * This class adds structure of 'rp_application_search' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:31 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class RpApplicationSearchMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.RpApplicationSearchMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(RpApplicationSearchPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(RpApplicationSearchPeer::TABLE_NAME);
		$tMap->setPhpName('RpApplicationSearch');
		$tMap->setClassname('RpApplicationSearch');

		$tMap->setUseIdGenerator(true);

		$tMap->addColumn('APPLICATIONID', 'Applicationid', 'INTEGER', true, 11);

		$tMap->addColumn('APPLICATIONDATE', 'Applicationdate', 'TIMESTAMP', true, null);

		$tMap->addColumn('PERSONID', 'Personid', 'INTEGER', true, 11);

		$tMap->addColumn('FIRSTNAME', 'Firstname', 'VARCHAR', true, 40);

		$tMap->addColumn('LASTNAME', 'Lastname', 'VARCHAR', true, 40);

		$tMap->addColumn('ADDRESS1', 'Address1', 'VARCHAR', false, 40);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 30);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 2);

		$tMap->addColumn('ZIPCODE', 'Zipcode', 'VARCHAR', false, 30);

		$tMap->addColumn('COUNTY', 'County', 'VARCHAR', false, 30);

		$tMap->addColumn('AREACODE', 'Areacode', 'VARCHAR', false, 3);

		$tMap->addColumn('DAYPHONE', 'Dayphone', 'VARCHAR', false, 16);

		$tMap->addColumn('DAYCOMMENT', 'Daycomment', 'VARCHAR', false, 40);

		$tMap->addColumn('EVENINGPHONE', 'Eveningphone', 'VARCHAR', false, 16);

		$tMap->addColumn('EVECOMMENT', 'Evecomment', 'VARCHAR', false, 40);

		$tMap->addColumn('MOBILEPHONE', 'Mobilephone', 'VARCHAR', false, 16);

		$tMap->addColumn('MOBILECOMMENT', 'Mobilecomment', 'VARCHAR', false, 40);

		$tMap->addColumn('OTHERPHONE', 'Otherphone', 'VARCHAR', false, 16);

		$tMap->addColumn('OTHERCOMMENT', 'Othercomment', 'VARCHAR', false, 40);

		$tMap->addColumn('PAGERPHONE', 'Pagerphone', 'VARCHAR', false, 16);

		$tMap->addColumn('PAGERCOMMENT', 'Pagercomment', 'VARCHAR', false, 40);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 80);

		$tMap->addColumn('SPOUSEPILOT', 'Spousepilot', 'TINYINT', false, 1);

		$tMap->addColumn('WINGID', 'Wingid', 'INTEGER', true, 4);

		$tMap->addColumn('WINGNAME', 'Wingname', 'VARCHAR', true, 30);

		$tMap->addColumn('RENEWALDATE', 'Renewaldate', 'DATE', false, null);

		$tMap->addColumn('JOINDATE', 'Joindate', 'DATE', true, null);

		$tMap->addColumn('JOINYEAR', 'Joinyear', 'INTEGER', false, 4);

		$tMap->addColumn('REFSOURCEID', 'Refsourceid', 'INTEGER', false, 4);

		$tMap->addColumn('REFSOURCENAME', 'Refsourcename', 'VARCHAR', false, 60);

		$tMap->addColumn('COMPANYMATCHFUNDS', 'Companymatchfunds', 'TINYINT', false, 1);

		$tMap->addColumn('COMPANYNAME', 'Companyname', 'VARCHAR', false, 40);

		$tMap->addColumn('COMPANYPOSITION', 'Companyposition', 'VARCHAR', false, 40);

		$tMap->addColumn('VOCATIONCLASSID', 'Vocationclassid', 'INTEGER', false, 4);

		$tMap->addColumn('VOCATIONCLASSNAME', 'Vocationclassname', 'VARCHAR', false, 30);

		$tMap->addColumn('MEMBERAOPA', 'Memberaopa', 'TINYINT', false, 1);

		$tMap->addColumn('MEMBERKIWANIS', 'Memberkiwanis', 'TINYINT', false, 1);

		$tMap->addColumn('MEMBERROTARY', 'Memberrotary', 'TINYINT', false, 1);

		$tMap->addColumn('MEMBERLIONS', 'Memberlions', 'TINYINT', false, 1);

		$tMap->addColumn('MEMBER99S', 'Member99s', 'TINYINT', false, 1);

		$tMap->addColumn('MEMBERWIA', 'Memberwia', 'TINYINT', false, 1);

		$tMap->addColumn('MISSIONORIENTATION', 'Missionorientation', 'TINYINT', false, 1);

		$tMap->addColumn('MISSIONCOORDINATION', 'Missioncoordination', 'TINYINT', false, 1);

		$tMap->addColumn('PILOTRECRUITMENT', 'Pilotrecruitment', 'TINYINT', false, 1);

		$tMap->addColumn('FUNDRAISING', 'Fundraising', 'TINYINT', false, 1);

		$tMap->addColumn('CELEBRITYCONTACTS', 'Celebritycontacts', 'TINYINT', false, 1);

		$tMap->addColumn('GRAPHICARTS', 'Graphicarts', 'TINYINT', false, 1);

		$tMap->addColumn('HOSPITALOUTREACH', 'Hospitaloutreach', 'TINYINT', false, 1);

		$tMap->addColumn('EVENTPLANNING', 'Eventplanning', 'TINYINT', false, 1);

		$tMap->addColumn('MEDIARELATIONS', 'Mediarelations', 'TINYINT', false, 1);

		$tMap->addColumn('TELEPHONEWORK', 'Telephonework', 'TINYINT', false, 1);

		$tMap->addColumn('COMPUTERS', 'Computers', 'TINYINT', false, 1);

		$tMap->addColumn('PRINTING', 'Printing', 'TINYINT', false, 1);

		$tMap->addColumn('WRITING', 'Writing', 'TINYINT', false, 1);

		$tMap->addColumn('SPEAKERSBUREAU', 'Speakersbureau', 'TINYINT', false, 1);

		$tMap->addColumn('WINGTEAM', 'Wingteam', 'TINYINT', false, 1);

		$tMap->addColumn('WEBINTERNET', 'Webinternet', 'TINYINT', false, 1);

		$tMap->addColumn('FOUNDATIONCONTACTS', 'Foundationcontacts', 'TINYINT', false, 1);

		$tMap->addColumn('AVIATIONCONTACTS', 'Aviationcontacts', 'TINYINT', false, 1);

		$tMap->addColumn('DISASTERRESPONSEINTEREST', 'Disasterresponseinterest', 'TINYINT', false, 1);

		$tMap->addColumn('ACTIVE', 'Active', 'TINYINT', true, 1);

		$tMap->addColumn('PRIMARY_AIRPORT_ID', 'PrimaryAirportId', 'INTEGER', false, 4);

		$tMap->addColumn('HOMEBASE', 'Homebase', 'VARCHAR', false, 4);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

	} // doBuild()

} // RpApplicationSearchMapBuilder
