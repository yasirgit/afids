<?php


/**
 * This class adds structure of 'person' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 01/05/11 08:19:49
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class PersonMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.PersonMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(PersonPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(PersonPeer::TABLE_NAME);
		$tMap->setPhpName('Person');
		$tMap->setClassname('Person');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11);

		$tMap->addColumn('TITLE', 'Title', 'VARCHAR', false, 12);

		$tMap->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', true, 40);

		$tMap->addColumn('LAST_NAME', 'LastName', 'VARCHAR', true, 40);

		$tMap->addColumn('ADDRESS1', 'Address1', 'VARCHAR', false, 40);

		$tMap->addColumn('ADDRESS2', 'Address2', 'VARCHAR', false, 40);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 30);

		$tMap->addColumn('COUNTY', 'County', 'VARCHAR', false, 30);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 2);

		$tMap->addColumn('COUNTRY', 'Country', 'VARCHAR', false, 30);

		$tMap->addColumn('ZIPCODE', 'Zipcode', 'VARCHAR', false, 30);

		$tMap->addColumn('DAY_PHONE', 'DayPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('DAY_COMMENT', 'DayComment', 'VARCHAR', false, 40);

		$tMap->addColumn('EVENING_PHONE', 'EveningPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('EVENING_COMMENT', 'EveningComment', 'VARCHAR', false, 40);

		$tMap->addColumn('MOBILE_PHONE', 'MobilePhone', 'VARCHAR', false, 16);

		$tMap->addColumn('MOBILE_COMMENT', 'MobileComment', 'VARCHAR', false, 40);

		$tMap->addColumn('PAGER_PHONE', 'PagerPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('PAGER_COMMENT', 'PagerComment', 'VARCHAR', false, 40);

		$tMap->addColumn('OTHER_PHONE', 'OtherPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('OTHER_COMMENT', 'OtherComment', 'VARCHAR', false, 40);

		$tMap->addColumn('FAX_PHONE1', 'FaxPhone1', 'VARCHAR', false, 16);

		$tMap->addColumn('FAX_COMMENT1', 'FaxComment1', 'VARCHAR', false, 40);

		$tMap->addColumn('AUTO_FAX', 'AutoFax', 'TINYINT', true, 1);

		$tMap->addColumn('FAX_PHONE2', 'FaxPhone2', 'VARCHAR', false, 16);

		$tMap->addColumn('FAX_COMMENT2', 'FaxComment2', 'VARCHAR', false, 40);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 80);

		$tMap->addColumn('EMAIL_TEXT_ONLY', 'EmailTextOnly', 'TINYINT', false, 1);

		$tMap->addColumn('EMAIL_BLOCKED', 'EmailBlocked', 'TINYINT', false, 1);

		$tMap->addColumn('USERNAME', 'Username', 'VARCHAR', false, 20);

		$tMap->addColumn('PASSWORD', 'Password', 'VARCHAR', false, 50);

		$tMap->addColumn('COMMENT', 'Comment', 'VARCHAR', false, 255);

		$tMap->addColumn('WF_POLICY_AGREED', 'WfPolicyAgreed', 'INTEGER', false, 4);

		$tMap->addColumn('WF_POLICY_AGREED_DATE', 'WfPolicyAgreedDate', 'DATE', false, null);

		$tMap->addColumn('PAGER_EMAIL', 'PagerEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('BLOCK_MAILINGS', 'BlockMailings', 'TINYINT', false, 1);

		$tMap->addColumn('NEWSLETTER', 'Newsletter', 'TINYINT', false, 1);

		$tMap->addColumn('GENDER', 'Gender', 'VARCHAR', false, 7);

		$tMap->addColumn('DECEASED', 'Deceased', 'TINYINT', false, 1);

		$tMap->addColumn('DECEASED_COMMENT', 'DeceasedComment', 'VARCHAR', false, 255);

		$tMap->addColumn('SECONDARY_EMAIL', 'SecondaryEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('DECEASED_DATE', 'DeceasedDate', 'DATE', false, null);

		$tMap->addColumn('MIDDLE_NAME', 'MiddleName', 'VARCHAR', false, 25);

		$tMap->addColumn('SUFFIX', 'Suffix', 'VARCHAR', false, 25);

		$tMap->addColumn('NICKNAME', 'Nickname', 'VARCHAR', false, 25);

		$tMap->addColumn('VETERAN', 'Veteran', 'TINYINT', false, 1);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // PersonMapBuilder
