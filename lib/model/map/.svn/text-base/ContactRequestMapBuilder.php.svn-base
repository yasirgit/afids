<?php


/**
 * This class adds structure of 'contact_request' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 01/05/11 08:19:41
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ContactRequestMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ContactRequestMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(ContactRequestPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(ContactRequestPeer::TABLE_NAME);
		$tMap->setPhpName('ContactRequest');
		$tMap->setClassname('ContactRequest');

		$tMap->setUseIdGenerator(false);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11);

		$tMap->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', false, 40);

		$tMap->addColumn('LAST_NAME', 'LastName', 'VARCHAR', false, 40);

		$tMap->addColumn('TITLE', 'Title', 'VARCHAR', false, 12);

		$tMap->addColumn('ADDRESS1', 'Address1', 'VARCHAR', false, 40);

		$tMap->addColumn('ADDRESS2', 'Address2', 'VARCHAR', false, 40);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 30);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 2);

		$tMap->addColumn('ZIPCODE', 'Zipcode', 'VARCHAR', false, 10);

		$tMap->addColumn('COUNTRY', 'Country', 'VARCHAR', false, 30);

		$tMap->addColumn('DAY_PHONE', 'DayPhone', 'VARCHAR', false, 40);

		$tMap->addColumn('DAY_COMMENT', 'DayComment', 'VARCHAR', false, 40);

		$tMap->addColumn('EVE_PHONE', 'EvePhone', 'VARCHAR', false, 40);

		$tMap->addColumn('EVE_COMMENT', 'EveComment', 'VARCHAR', false, 40);

		$tMap->addColumn('FAX_PHONE', 'FaxPhone', 'VARCHAR', false, 40);

		$tMap->addColumn('FAX_COMMENT', 'FaxComment', 'VARCHAR', false, 40);

		$tMap->addColumn('MOBILE_PHONE', 'MobilePhone', 'VARCHAR', false, 40);

		$tMap->addColumn('MOBILE_COMMENT', 'MobileComment', 'VARCHAR', false, 40);

		$tMap->addColumn('PAGER_PHONE', 'PagerPhone', 'VARCHAR', false, 40);

		$tMap->addColumn('PAGER_COMMENT', 'PagerComment', 'VARCHAR', false, 40);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 80);

		$tMap->addColumn('REF_SOURCE_ID', 'RefSourceId', 'INTEGER', false, 11);

		$tMap->addColumn('SEND_APP_FORMAT', 'SendAppFormat', 'VARCHAR', false, 10);

		$tMap->addColumn('COMMENT', 'Comment', 'VARCHAR', false, 100);

		$tMap->addColumn('CONTACT_TYPE_ID', 'ContactTypeId', 'INTEGER', false, 11);

		$tMap->addColumn('PERSON_ID', 'PersonId', 'INTEGER', false, 11);

		$tMap->addColumn('PROCESSED', 'Processed', 'TINYINT', false, 4);

		$tMap->addColumn('LETTER_TO_SEND', 'LetterToSend', 'INTEGER', false, 11);

		$tMap->addColumn('LETTER_SENT_DATE', 'LetterSentDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('REQUEST_DATE', 'RequestDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('SESSION_ID', 'SessionId', 'INTEGER', false, 11);

		$tMap->addColumn('IP_ADDRESS', 'IpAddress', 'VARCHAR', false, 20);

	} // doBuild()

} // ContactRequestMapBuilder
