<?php


/**
 * This class adds structure of 'vpo_request_passenger' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 01/05/11 08:19:53
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class VpoRequestPassengerMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.VpoRequestPassengerMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(VpoRequestPassengerPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(VpoRequestPassengerPeer::TABLE_NAME);
		$tMap->setPhpName('VpoRequestPassenger');
		$tMap->setClassname('VpoRequestPassenger');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 4);

		$tMap->addForeignKey('REQUEST_ID', 'RequestId', 'INTEGER', 'vpo_request', 'ID', false, 4);

		$tMap->addColumn('FEMA_NO', 'FemaNo', 'VARCHAR', false, 25);

		$tMap->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', false, 40);

		$tMap->addColumn('LAST_LAME', 'LastLame', 'VARCHAR', false, 40);

		$tMap->addColumn('ADDRESS1', 'Address1', 'VARCHAR', false, 40);

		$tMap->addColumn('ADDRESS2', 'Address2', 'VARCHAR', false, 40);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 30);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 2);

		$tMap->addColumn('COUNTRY', 'Country', 'VARCHAR', false, 30);

		$tMap->addColumn('ZIPCODE', 'Zipcode', 'VARCHAR', false, 10);

		$tMap->addColumn('DAY_PHONE', 'DayPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('DAY_COMMENT', 'DayComment', 'VARCHAR', false, 40);

		$tMap->addColumn('EVE_PHONE', 'EvePhone', 'TINYINT', false, 16);

		$tMap->addColumn('EVE_COMMENT', 'EveComment', 'VARCHAR', false, 40);

		$tMap->addColumn('MOBILE_PHONE', 'MobilePhone', 'VARCHAR', false, 16);

		$tMap->addColumn('MOBILE_COMMENT', 'MobileComment', 'VARCHAR', false, 40);

		$tMap->addColumn('FAX_PHONE', 'FaxPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('FAX_COMMENT', 'FaxComment', 'VARCHAR', false, 40);

		$tMap->addColumn('PAGER_PHONE', 'PagerPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('PAGER_COMMENT', 'PagerComment', 'VARCHAR', false, 40);

		$tMap->addColumn('OTHER_PHONE1', 'OtherPhone1', 'VARCHAR', false, 16);

		$tMap->addColumn('OTHER_COMMENT1', 'OtherComment1', 'VARCHAR', false, 40);

		$tMap->addColumn('OTHER_PHONE2', 'OtherPhone2', 'VARCHAR', false, 16);

		$tMap->addColumn('OTHER_COMMENT2', 'OtherComment2', 'VARCHAR', false, 40);

		$tMap->addColumn('OTHER_PHONE3', 'OtherPhone3', 'VARCHAR', false, 16);

		$tMap->addColumn('OTHER_COMMENT3', 'OtherComment3', 'VARCHAR', false, 40);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 80);

		$tMap->addColumn('ALT_EMAIL', 'AltEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('AGE', 'Age', 'INTEGER', false, 4);

		$tMap->addColumn('DATE_OF_BIRTH', 'DateOfBirth', 'DATE', false, null);

		$tMap->addColumn('PRIMARY_LANGUAGE', 'PrimaryLanguage', 'VARCHAR', false, 30);

		$tMap->addColumn('ENGLISH_SPOKEN', 'EnglishSpoken', 'VARCHAR', false, 25);

		$tMap->addColumn('PREGNANT', 'Pregnant', 'VARCHAR', false, 25);

		$tMap->addColumn('OXYGEN_REQUIRED', 'OxygenRequired', 'VARCHAR', false, 25);

		$tMap->addColumn('WEIGHT', 'Weight', 'INTEGER', false, 4);

		$tMap->addColumn('AMBULATORY', 'Ambulatory', 'VARCHAR', false, 25);

		$tMap->addColumn('NOTES', 'Notes', 'VARCHAR', false, 125);

		$tMap->addColumn('KNOWN_MEDICALCONDITION', 'KnownMedicalcondition', 'VARCHAR', false, 125);

		$tMap->addColumn('BAGGAGE_WEIGHT', 'BaggageWeight', 'INTEGER', false, 4);

		$tMap->addColumn('BAGGAGE_DESC', 'BaggageDesc', 'VARCHAR', false, 125);

	} // doBuild()

} // VpoRequestPassengerMapBuilder
