<?php


/**
 * This class adds structure of 'pilot_request' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:31 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class PilotRequestMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.PilotRequestMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(PilotRequestPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(PilotRequestPeer::TABLE_NAME);
		$tMap->setPhpName('PilotRequest');
		$tMap->setClassname('PilotRequest');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 4);

		$tMap->addForeignKey('MEMBER_ID', 'MemberId', 'INTEGER', 'member', 'ID', true, 4);

		$tMap->addForeignKey('GROUP_CAMP_ID', 'GroupCampId', 'INTEGER', 'camp', 'ID', false, 11);

		$tMap->addColumn('HOME_BASE', 'HomeBase', 'VARCHAR', false, 4);

		$tMap->addColumn('NUMBER_SEATS', 'NumberSeats', 'INTEGER', false, 11);

		$tMap->addColumn('TOTAL_WEIGHT', 'TotalWeight', 'INTEGER', false, 11);

		$tMap->addColumn('MULTIPLE_PICK', 'MultiplePick', 'TINYINT', false, 4);

		$tMap->addForeignKey('LEG_ID', 'LegId', 'INTEGER', 'mission_leg', 'ID', false, 4);

		$tMap->addColumn('DATE', 'Date', 'VARCHAR', false, 100);

		$tMap->addColumn('PILOT_TYPE', 'PilotType', 'VARCHAR', false, 17);

		$tMap->addColumn('COMMENT', 'Comment', 'VARCHAR', false, 200);

		$tMap->addColumn('ACCEPTED', 'Accepted', 'TINYINT', true, 1);

		$tMap->addColumn('PROCESSED', 'Processed', 'TINYINT', true, 1);

		$tMap->addColumn('PILOT_STATUS', 'PilotStatus', 'TINYINT', false, 1);

		$tMap->addColumn('ON_HOLD', 'OnHold', 'TINYINT', true, 4);

		$tMap->addColumn('MISSION_ASSISTANT_WANTED', 'MissionAssistantWanted', 'TINYINT', false, 1);

		$tMap->addColumn('MISS_ASSIS_ID', 'MissAssisId', 'INTEGER', true, 4);

		$tMap->addColumn('MISSION_ASSISTANT_NAME', 'MissionAssistantName', 'VARCHAR', false, 50);

		$tMap->addColumn('IFR_BACKUP_WANTED', 'IfrBackupWanted', 'TINYINT', false, 4);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('NUMBER_DATE_ASSIGN', 'NumberDateAssign', 'INTEGER', false, 11);

		$tMap->addColumn('AIRCRAFT_ID', 'AircraftId', 'INTEGER', false, 11);

		$tMap->addColumn('TAIL', 'Tail', 'VARCHAR', false, 100);

	} // doBuild()

} // PilotRequestMapBuilder
