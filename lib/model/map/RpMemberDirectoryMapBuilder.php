<?php


/**
 * This class adds structure of 'rp_member_directory' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:32 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class RpMemberDirectoryMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.RpMemberDirectoryMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(RpMemberDirectoryPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(RpMemberDirectoryPeer::TABLE_NAME);
		$tMap->setPhpName('RpMemberDirectory');
		$tMap->setClassname('RpMemberDirectory');

		$tMap->setUseIdGenerator(true);

		$tMap->addColumn('EXTERNAL_ID', 'ExternalId', 'INTEGER', false, 4);

		$tMap->addColumn('PERSONID', 'Personid', 'INTEGER', true, 11);

		$tMap->addColumn('FIRSTNAME', 'Firstname', 'VARCHAR', true, 40);

		$tMap->addColumn('LASTNAME', 'Lastname', 'VARCHAR', true, 40);

		$tMap->addColumn('ADDRESS_ONE', 'AddressOne', 'VARCHAR', false, 40);

		$tMap->addColumn('ADDRESS_TWO', 'AddressTwo', 'VARCHAR', false, 40);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 30);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 2);

		$tMap->addColumn('ZIPCODE', 'Zipcode', 'VARCHAR', false, 30);

		$tMap->addColumn('DECEASED', 'Deceased', 'TINYINT', false, 1);

		$tMap->addColumn('EMAILBLOCKED', 'Emailblocked', 'TINYINT', false, 1);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 80);

		$tMap->addColumn('SECONDARYEMAIL', 'Secondaryemail', 'VARCHAR', false, 80);

		$tMap->addColumn('PAGEREMAIL', 'Pageremail', 'VARCHAR', false, 80);

		$tMap->addColumn('COUNTYNAME', 'Countyname', 'VARCHAR', false, 30);

		$tMap->addColumn('AREACODE', 'Areacode', 'VARCHAR', false, 3);

		$tMap->addColumn('DAYPHONE', 'Dayphone', 'VARCHAR', false, 16);

		$tMap->addColumn('DAY_COMMENT', 'DayComment', 'VARCHAR', false, 40);

		$tMap->addColumn('EVEPHONE', 'Evephone', 'VARCHAR', false, 16);

		$tMap->addColumn('EVENING_COMMENT', 'EveningComment', 'VARCHAR', false, 40);

		$tMap->addColumn('MOBILEPHONE', 'Mobilephone', 'VARCHAR', false, 16);

		$tMap->addColumn('MOBILE_COMMENT', 'MobileComment', 'VARCHAR', false, 40);

		$tMap->addColumn('PAGERPHONE', 'Pagerphone', 'VARCHAR', false, 16);

		$tMap->addColumn('PAGER_COMMENT', 'PagerComment', 'VARCHAR', false, 40);

		$tMap->addColumn('FAXPHONE1', 'Faxphone1', 'VARCHAR', false, 16);

		$tMap->addColumn('FAX_COMMENT1', 'FaxComment1', 'VARCHAR', false, 40);

		$tMap->addColumn('FAXPHONE2', 'Faxphone2', 'VARCHAR', false, 16);

		$tMap->addColumn('FAX_COMMENT2', 'FaxComment2', 'VARCHAR', false, 40);

		$tMap->addColumn('OTHERPHONE', 'Otherphone', 'VARCHAR', false, 16);

		$tMap->addColumn('OTHER_COMMENT', 'OtherComment', 'VARCHAR', false, 40);

		$tMap->addColumn('LICENSE_TYPE', 'LicenseType', 'VARCHAR', false, 10);

		$tMap->addColumn('IFR', 'Ifr', 'TINYINT', false, 1);

		$tMap->addColumn('MULTIENGINE', 'Multiengine', 'INTEGER', false, 1);

		$tMap->addColumn('SE_INSTRUCTOR', 'SeInstructor', 'VARCHAR', false, 5);

		$tMap->addColumn('HSEATS', 'Hseats', 'VARCHAR', false, 30);

		$tMap->addColumn('TRANSPLANT', 'Transplant', 'TINYINT', false, 1);

		$tMap->addColumn('ME_INSTRUCTOR', 'MeInstructor', 'VARCHAR', false, 5);

		$tMap->addColumn('MOP_REGIONS_SERVED', 'MopRegionsServed', 'VARCHAR', false, 125);

		$tMap->addColumn('MOP', 'Mop', 'INTEGER', true, null);

		$tMap->addColumn('INSURANCE_RECEIVED', 'InsuranceReceived', 'TIMESTAMP', false, null);

		$tMap->addColumn('CFI', 'Cfi', 'INTEGER', false, null);

		$tMap->addColumn('INSURANCEEXPIRED', 'Insuranceexpired', 'INTEGER', false, null);

		$tMap->addColumn('MEMBERID', 'Memberid', 'INTEGER', true, 4);

		$tMap->addColumn('FLIGHT_STATUS', 'FlightStatus', 'VARCHAR', true, 20);

		$tMap->addColumn('RENEWAL_DATE', 'RenewalDate', 'DATE', false, null);

		$tMap->addColumn('DATE_OF_BIRTH', 'DateOfBirth', 'DATE', false, null);

		$tMap->addColumn('BIRTHDAYMONTH', 'Birthdaymonth', 'INTEGER', false, 2);

		$tMap->addColumn('DISASTERRESPONSESTATUS', 'Disasterresponsestatus', 'VARCHAR', false, 30);

		$tMap->addColumn('COORDINATOR_NOTES', 'CoordinatorNotes', 'VARCHAR', false, 255);

		$tMap->addColumn('WINGNAME', 'Wingname', 'VARCHAR', true, 30);

		$tMap->addColumn('WING_ID', 'WingId', 'INTEGER', false, 4);

		$tMap->addColumn('ACTIVE', 'Active', 'TINYINT', true, 1);

		$tMap->addColumn('MEMBER_CLASS_ID', 'MemberClassId', 'INTEGER', true, 4);

		$tMap->addColumn('HOMEBASE', 'Homebase', 'VARCHAR', false, 4);

		$tMap->addColumn('WINGJOBID', 'Wingjobid', 'INTEGER', false, 4);

		$tMap->addColumn('WINGJOB', 'Wingjob', 'VARCHAR', false, 30);

		$tMap->addColumn('COORDINATOR', 'Coordinator', 'INTEGER', true, null);

		$tMap->addColumn('COORDINATORID', 'Coordinatorid', 'INTEGER', false, 4);

		$tMap->addColumn('BOARDMEMBER', 'Boardmember', 'INTEGER', true, null);

		$tMap->addColumn('BOARDMEMBERID', 'Boardmemberid', 'INTEGER', false, 11);

		$tMap->addColumn('NOTAVAILABLE', 'Notavailable', 'TINYINT', false, 1);

		$tMap->addColumn('NOWEEKDAY', 'Noweekday', 'TINYINT', false, 1);

		$tMap->addColumn('NONIGHT', 'Nonight', 'TINYINT', false, 1);

		$tMap->addColumn('NOWEEKEND', 'Noweekend', 'TINYINT', false, 1);

		$tMap->addColumn('LASTMINUTE', 'Lastminute', 'TINYINT', false, 1);

		$tMap->addColumn('FIRSTDATE', 'Firstdate', 'DATE', false, null);

		$tMap->addColumn('LASTDATE', 'Lastdate', 'DATE', false, null);

		$tMap->addColumn('AVAILABILITYCOMMENT', 'Availabilitycomment', 'VARCHAR', false, 50);

		$tMap->addColumn('AIRCRAFTOWNER', 'Aircraftowner', 'INTEGER', false, 4);

		$tMap->addColumn('FASTESTAIRCRAFT', 'Fastestaircraft', 'BIGINT', false, 11);

		$tMap->addColumn('LONGESTRANGEAIRCRAFT', 'Longestrangeaircraft', 'BIGINT', false, 11);

		$tMap->addColumn('MOSTSEATSAIRCRAFT', 'Mostseatsaircraft', 'INTEGER', false, 4);

		$tMap->addColumn('MAXLOADAIRCRAFT', 'Maxloadaircraft', 'BIGINT', false, 11);

		$tMap->addColumn('MISSIONCOUNTTHISYEAR', 'Missioncountthisyear', 'BIGINT', false, 21);

		$tMap->addColumn('MISSIONCOUNTTOTAL', 'Missioncounttotal', 'BIGINT', false, 21);

		$tMap->addColumn('LASTMISSIONFLOWN', 'Lastmissionflown', 'VARCHAR', false, 10);

		$tMap->addColumn('NEXTPENDINGMISSION', 'Nextpendingmission', 'VARCHAR', false, 10);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

	} // doBuild()

} // RpMemberDirectoryMapBuilder
