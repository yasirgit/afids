<?php


/**
 * This class adds structure of 'vpo_request_cargo' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:33 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class VpoRequestCargoMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.VpoRequestCargoMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(VpoRequestCargoPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(VpoRequestCargoPeer::TABLE_NAME);
		$tMap->setPhpName('VpoRequestCargo');
		$tMap->setClassname('VpoRequestCargo');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 4);

		$tMap->addForeignKey('REQUEST_ID', 'RequestId', 'INTEGER', 'vpo_request', 'ID', false, 4);

		$tMap->addColumn('HAZARDOUS', 'Hazardous', 'TINYINT', false, 1);

		$tMap->addColumn('CARGO_TYPE', 'CargoType', 'VARCHAR', false, 40);

		$tMap->addColumn('WEIGHT', 'Weight', 'INTEGER', false, 4);

		$tMap->addColumn('HEIGHT', 'Height', 'INTEGER', false, 4);

		$tMap->addColumn('LENGTH', 'Length', 'INTEGER', false, 4);

		$tMap->addColumn('WIDTH', 'Width', 'INTEGER', false, 4);

		$tMap->addColumn('SPECIAL_HANDLING', 'SpecialHandling', 'VARCHAR', false, 125);

		$tMap->addColumn('OC_FIRST_NAME', 'OcFirstName', 'VARCHAR', false, 40);

		$tMap->addColumn('OC_LAST_NAME', 'OcLastName', 'VARCHAR', false, 40);

		$tMap->addColumn('OC_DAY_PHONE', 'OcDayPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('OC_DAY_COMMENT', 'OcDayComment', 'VARCHAR', false, 40);

		$tMap->addColumn('OC_MOBILE_PHONE', 'OcMobilePhone', 'VARCHAR', false, 16);

		$tMap->addColumn('OC_MOBILE_COMMENT', 'OcMobileComment', 'VARCHAR', false, 40);

		$tMap->addColumn('OC_OTHER_PHONE1', 'OcOtherPhone1', 'VARCHAR', false, 16);

		$tMap->addColumn('OC_OTHER_COMMENT1', 'OcOtherComment1', 'VARCHAR', false, 40);

		$tMap->addColumn('OC_OTHER_PHONE2', 'OcOtherPhone2', 'VARCHAR', false, 16);

		$tMap->addColumn('OC_OTHER_COMMENT2', 'OcOtherComment2', 'VARCHAR', false, 40);

		$tMap->addColumn('OC_EMAIL', 'OcEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('OC_ALT_EMAIL', 'OcAltEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('DC_FIRST_NAME', 'DcFirstName', 'VARCHAR', false, 40);

		$tMap->addColumn('DC_LAST_NAME', 'DcLastName', 'VARCHAR', false, 40);

		$tMap->addColumn('DC_DAY_PHONE', 'DcDayPhone', 'VARCHAR', false, 16);

		$tMap->addColumn('DC_DAY_COMMENT', 'DcDayComment', 'VARCHAR', false, 40);

		$tMap->addColumn('DC_MOBILE_HONE', 'DcMobileHone', 'INTEGER', false, 16);

		$tMap->addColumn('DC_MOBILE_COMMENT', 'DcMobileComment', 'VARCHAR', false, 40);

		$tMap->addColumn('DC_OTHER_PHONE1', 'DcOtherPhone1', 'VARCHAR', false, 16);

		$tMap->addColumn('DC_OTHER_COMMENT1', 'DcOtherComment1', 'VARCHAR', false, 40);

		$tMap->addColumn('DC_OTHER_PHONE2', 'DcOtherPhone2', 'VARCHAR', false, 16);

		$tMap->addColumn('DC_OTHER_COMMENT2', 'DcOtherComment2', 'VARCHAR', false, 40);

		$tMap->addColumn('DC_EMAIL', 'DcEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('DC_ALT_EMAIL', 'DcAltEmail', 'VARCHAR', false, 80);

		$tMap->addColumn('ITEM_DESCRIPTION', 'ItemDescription', 'VARCHAR', false, 255);

	} // doBuild()

} // VpoRequestCargoMapBuilder
