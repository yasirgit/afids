<?php

/**
 * Base class that represents a row from the 'rp_member_application' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:32 2011
 *
 * @package    lib.model.om
 */
abstract class BaseRpMemberApplication extends BaseObject  implements Persistent {


  const PEER = 'RpMemberApplicationPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        RpMemberApplicationPeer
	 */
	protected static $peer;

	/**
	 * The value for the applicationid field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $applicationid;

	/**
	 * The value for the applicationdate field.
	 * @var        string
	 */
	protected $applicationdate;

	/**
	 * The value for the title field.
	 * @var        string
	 */
	protected $title;

	/**
	 * The value for the firstname field.
	 * @var        string
	 */
	protected $firstname;

	/**
	 * The value for the lastname field.
	 * @var        string
	 */
	protected $lastname;

	/**
	 * The value for the addressone field.
	 * @var        string
	 */
	protected $addressone;

	/**
	 * The value for the addresstwo field.
	 * @var        string
	 */
	protected $addresstwo;

	/**
	 * The value for the city field.
	 * @var        string
	 */
	protected $city;

	/**
	 * The value for the state field.
	 * @var        string
	 */
	protected $state;

	/**
	 * The value for the zipcode field.
	 * @var        string
	 */
	protected $zipcode;

	/**
	 * The value for the dayphone field.
	 * @var        string
	 */
	protected $dayphone;

	/**
	 * The value for the pilotdaycomment field.
	 * @var        string
	 */
	protected $pilotdaycomment;

	/**
	 * The value for the evephone field.
	 * @var        string
	 */
	protected $evephone;

	/**
	 * The value for the pilotevecomment field.
	 * @var        string
	 */
	protected $pilotevecomment;

	/**
	 * The value for the faxphone1 field.
	 * @var        string
	 */
	protected $faxphone1;

	/**
	 * The value for the pilotfaxcomment field.
	 * @var        string
	 */
	protected $pilotfaxcomment;

	/**
	 * The value for the faxphone2 field.
	 * @var        string
	 */
	protected $faxphone2;

	/**
	 * The value for the pilotfaxcomment2 field.
	 * @var        string
	 */
	protected $pilotfaxcomment2;

	/**
	 * The value for the mobilephone field.
	 * @var        string
	 */
	protected $mobilephone;

	/**
	 * The value for the pilotmobilecomment field.
	 * @var        string
	 */
	protected $pilotmobilecomment;

	/**
	 * The value for the pagerphone field.
	 * @var        string
	 */
	protected $pagerphone;

	/**
	 * The value for the pilotpagercomment field.
	 * @var        string
	 */
	protected $pilotpagercomment;

	/**
	 * The value for the otherphone field.
	 * @var        string
	 */
	protected $otherphone;

	/**
	 * The value for the pilotothercomment field.
	 * @var        string
	 */
	protected $pilotothercomment;

	/**
	 * The value for the email field.
	 * @var        string
	 */
	protected $email;

	/**
	 * The value for the pageemail field.
	 * @var        string
	 */
	protected $pageemail;

	/**
	 * The value for the secondaryemail field.
	 * @var        string
	 */
	protected $secondaryemail;

	/**
	 * The value for the spousefirstname field.
	 * @var        string
	 */
	protected $spousefirstname;

	/**
	 * The value for the spouselastname field.
	 * @var        string
	 */
	protected $spouselastname;

	/**
	 * The value for the applicantpilot field.
	 * @var        string
	 */
	protected $applicantpilot;

	/**
	 * The value for the spousepilot field.
	 * @var        string
	 */
	protected $spousepilot;

	/**
	 * The value for the applicantcopilot field.
	 * @var        string
	 */
	protected $applicantcopilot;

	/**
	 * The value for the languagesspoken field.
	 * @var        string
	 */
	protected $languagesspoken;

	/**
	 * The value for the homebase field.
	 * @var        string
	 */
	protected $homebase;

	/**
	 * The value for the fboname field.
	 * @var        string
	 */
	protected $fboname;

	/**
	 * The value for the apmake field.
	 * @var        string
	 */
	protected $apmake;

	/**
	 * The value for the apmodel field.
	 * @var        string
	 */
	protected $apmodel;

	/**
	 * The value for the aircraftprimaryown field.
	 * @var        string
	 */
	protected $aircraftprimaryown;

	/**
	 * The value for the aircraftprimaryice field.
	 * @var        string
	 */
	protected $aircraftprimaryice;

	/**
	 * The value for the aircraftprimaryseats field.
	 * @var        int
	 */
	protected $aircraftprimaryseats;

	/**
	 * The value for the aircraftprimarynnumber field.
	 * @var        string
	 */
	protected $aircraftprimarynnumber;

	/**
	 * The value for the asmake field.
	 * @var        string
	 */
	protected $asmake;

	/**
	 * The value for the asmodel field.
	 * @var        string
	 */
	protected $asmodel;

	/**
	 * The value for the aircraftsecondaryown field.
	 * @var        string
	 */
	protected $aircraftsecondaryown;

	/**
	 * The value for the aircraftsecondaryice field.
	 * @var        string
	 */
	protected $aircraftsecondaryice;

	/**
	 * The value for the aircraftsecondaryseats field.
	 * @var        int
	 */
	protected $aircraftsecondaryseats;

	/**
	 * The value for the aircraftsecondarynnumber field.
	 * @var        string
	 */
	protected $aircraftsecondarynnumber;

	/**
	 * The value for the pilotcertificate field.
	 * @var        string
	 */
	protected $pilotcertificate;

	/**
	 * The value for the ratings field.
	 * @var        string
	 */
	protected $ratings;

	/**
	 * The value for the medicalclass field.
	 * @var        int
	 */
	protected $medicalclass;

	/**
	 * The value for the licensetype field.
	 * @var        string
	 */
	protected $licensetype;

	/**
	 * The value for the totalhours field.
	 * @var        int
	 */
	protected $totalhours;

	/**
	 * The value for the ifrhours field.
	 * @var        int
	 */
	protected $ifrhours;

	/**
	 * The value for the multihours field.
	 * @var        int
	 */
	protected $multihours;

	/**
	 * The value for the otherhours field.
	 * @var        int
	 */
	protected $otherhours;

	/**
	 * The value for the dateofbirth field.
	 * @var        string
	 */
	protected $dateofbirth;

	/**
	 * The value for the height field.
	 * @var        int
	 */
	protected $height;

	/**
	 * The value for the weight field.
	 * @var        int
	 */
	protected $weight;

	/**
	 * The value for the availabilityweekdays field.
	 * @var        string
	 */
	protected $availabilityweekdays;

	/**
	 * The value for the availabilityweeknights field.
	 * @var        string
	 */
	protected $availabilityweeknights;

	/**
	 * The value for the availabilityweekends field.
	 * @var        string
	 */
	protected $availabilityweekends;

	/**
	 * The value for the availabilitynotice field.
	 * @var        string
	 */
	protected $availabilitynotice;

	/**
	 * The value for the availabilitylastminute field.
	 * @var        string
	 */
	protected $availabilitylastminute;

	/**
	 * The value for the availabilitycopilot field.
	 * @var        string
	 */
	protected $availabilitycopilot;

	/**
	 * The value for the affirmationagreed field.
	 * @var        string
	 */
	protected $affirmationagreed;

	/**
	 * The value for the insuranceagreed field.
	 * @var        string
	 */
	protected $insuranceagreed;

	/**
	 * The value for the hseatsinterest field.
	 * @var        string
	 */
	protected $hseatsinterest;

	/**
	 * The value for the volunteerinterest field.
	 * @var        string
	 */
	protected $volunteerinterest;

	/**
	 * The value for the companyposition field.
	 * @var        string
	 */
	protected $companyposition;

	/**
	 * The value for the companymatchfunds field.
	 * @var        string
	 */
	protected $companymatchfunds;

	/**
	 * The value for the companybusinesscategoryid field.
	 * @var        int
	 */
	protected $companybusinesscategoryid;

	/**
	 * The value for the referralsource field.
	 * @var        string
	 */
	protected $referralsource;

	/**
	 * The value for the referralsourceother field.
	 * @var        string
	 */
	protected $referralsourceother;

	/**
	 * The value for the premiumchoice field.
	 * @var        string
	 */
	protected $premiumchoice;

	/**
	 * The value for the premiumsize field.
	 * @var        string
	 */
	protected $premiumsize;

	/**
	 * The value for the duesamountpaid field.
	 * Note: this column has a database default value of: 0
	 * @var        double
	 */
	protected $duesamountpaid;

	/**
	 * The value for the donationamountpaid field.
	 * @var        double
	 */
	protected $donationamountpaid;

	/**
	 * The value for the methodofpaymentid field.
	 * @var        string
	 */
	protected $methodofpaymentid;

	/**
	 * The value for the ccardapprovalnumber field.
	 * @var        string
	 */
	protected $ccardapprovalnumber;

	/**
	 * The value for the processeddate field.
	 * @var        string
	 */
	protected $processeddate;

	/**
	 * The value for the missionorientation field.
	 * @var        string
	 */
	protected $missionorientation;

	/**
	 * The value for the missioncoordination field.
	 * @var        string
	 */
	protected $missioncoordination;

	/**
	 * The value for the pilotrecruitment field.
	 * @var        string
	 */
	protected $pilotrecruitment;

	/**
	 * The value for the fundraising field.
	 * @var        string
	 */
	protected $fundraising;

	/**
	 * The value for the celebritycontacts field.
	 * @var        string
	 */
	protected $celebritycontacts;

	/**
	 * The value for the hospitaloutreach field.
	 * @var        string
	 */
	protected $hospitaloutreach;

	/**
	 * The value for the mediarelations field.
	 * @var        string
	 */
	protected $mediarelations;

	/**
	 * The value for the telephonework field.
	 * @var        string
	 */
	protected $telephonework;

	/**
	 * The value for the computers field.
	 * @var        string
	 */
	protected $computers;

	/**
	 * The value for the clerical field.
	 * @var        string
	 */
	protected $clerical;

	/**
	 * The value for the publicity field.
	 * @var        string
	 */
	protected $publicity;

	/**
	 * The value for the writing field.
	 * @var        string
	 */
	protected $writing;

	/**
	 * The value for the speakersbureau field.
	 * @var        string
	 */
	protected $speakersbureau;

	/**
	 * The value for the wingteam field.
	 * @var        string
	 */
	protected $wingteam;

	/**
	 * The value for the graphicarts field.
	 * @var        string
	 */
	protected $graphicarts;

	/**
	 * The value for the eventplanning field.
	 * @var        string
	 */
	protected $eventplanning;

	/**
	 * The value for the webinternet field.
	 * @var        string
	 */
	protected $webinternet;

	/**
	 * The value for the foundationcontacts field.
	 * @var        string
	 */
	protected $foundationcontacts;

	/**
	 * The value for the aviationcontacts field.
	 * @var        string
	 */
	protected $aviationcontacts;

	/**
	 * The value for the printing field.
	 * @var        string
	 */
	protected $printing;

	/**
	 * The value for the memberaopa field.
	 * @var        string
	 */
	protected $memberaopa;

	/**
	 * The value for the memberkiwanis field.
	 * @var        string
	 */
	protected $memberkiwanis;

	/**
	 * The value for the memberrotary field.
	 * @var        string
	 */
	protected $memberrotary;

	/**
	 * The value for the memberlions field.
	 * @var        string
	 */
	protected $memberlions;

	/**
	 * The value for the memberninetynines field.
	 * @var        string
	 */
	protected $memberninetynines;

	/**
	 * The value for the memberwia field.
	 * @var        string
	 */
	protected $memberwia;

	/**
	 * The value for the ednewmembernotify field.
	 * @var        string
	 */
	protected $ednewmembernotify;

	/**
	 * The value for the wnewmembernotify field.
	 * @var        string
	 */
	protected $wnewmembernotify;

	/**
	 * The value for the badgemade field.
	 * @var        string
	 */
	protected $badgemade;

	/**
	 * The value for the notebooksent field.
	 * @var        string
	 */
	protected $notebooksent;

	/**
	 * The value for the externalid field.
	 * @var        int
	 */
	protected $externalid;

	/**
	 * The value for the novapointeid field.
	 * @var        int
	 */
	protected $novapointeid;

	/**
	 * The value for the premiumshipdate field.
	 * @var        string
	 */
	protected $premiumshipdate;

	/**
	 * The value for the premiumshipmethod field.
	 * @var        string
	 */
	protected $premiumshipmethod;

	/**
	 * The value for the premiumshiptrackingnumber field.
	 * @var        string
	 */
	protected $premiumshiptrackingnumber;

	/**
	 * The value for the id field.
	 * @var        int
	 */
	protected $id;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseRpMemberApplication object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
		$this->applicationid = 0;
		$this->duesamountpaid = 0;
	}

	/**
	 * Get the [applicationid] column value.
	 * 
	 * @return     int
	 */
	public function getApplicationid()
	{
		return $this->applicationid;
	}

	/**
	 * Get the [applicationdate] column value.
	 * 
	 * @return     string
	 */
	public function getApplicationdate()
	{
		return $this->applicationdate;
	}

	/**
	 * Get the [title] column value.
	 * 
	 * @return     string
	 */
	public function getTitle()
	{
		return $this->title;
	}

	/**
	 * Get the [firstname] column value.
	 * 
	 * @return     string
	 */
	public function getFirstname()
	{
		return $this->firstname;
	}

	/**
	 * Get the [lastname] column value.
	 * 
	 * @return     string
	 */
	public function getLastname()
	{
		return $this->lastname;
	}

	/**
	 * Get the [addressone] column value.
	 * 
	 * @return     string
	 */
	public function getAddressone()
	{
		return $this->addressone;
	}

	/**
	 * Get the [addresstwo] column value.
	 * 
	 * @return     string
	 */
	public function getAddresstwo()
	{
		return $this->addresstwo;
	}

	/**
	 * Get the [city] column value.
	 * 
	 * @return     string
	 */
	public function getCity()
	{
		return $this->city;
	}

	/**
	 * Get the [state] column value.
	 * 
	 * @return     string
	 */
	public function getState()
	{
		return $this->state;
	}

	/**
	 * Get the [zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getZipcode()
	{
		return $this->zipcode;
	}

	/**
	 * Get the [dayphone] column value.
	 * 
	 * @return     string
	 */
	public function getDayphone()
	{
		return $this->dayphone;
	}

	/**
	 * Get the [pilotdaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotdaycomment()
	{
		return $this->pilotdaycomment;
	}

	/**
	 * Get the [evephone] column value.
	 * 
	 * @return     string
	 */
	public function getEvephone()
	{
		return $this->evephone;
	}

	/**
	 * Get the [pilotevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotevecomment()
	{
		return $this->pilotevecomment;
	}

	/**
	 * Get the [faxphone1] column value.
	 * 
	 * @return     string
	 */
	public function getFaxphone1()
	{
		return $this->faxphone1;
	}

	/**
	 * Get the [pilotfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotfaxcomment()
	{
		return $this->pilotfaxcomment;
	}

	/**
	 * Get the [faxphone2] column value.
	 * 
	 * @return     string
	 */
	public function getFaxphone2()
	{
		return $this->faxphone2;
	}

	/**
	 * Get the [pilotfaxcomment2] column value.
	 * 
	 * @return     string
	 */
	public function getPilotfaxcomment2()
	{
		return $this->pilotfaxcomment2;
	}

	/**
	 * Get the [mobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getMobilephone()
	{
		return $this->mobilephone;
	}

	/**
	 * Get the [pilotmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotmobilecomment()
	{
		return $this->pilotmobilecomment;
	}

	/**
	 * Get the [pagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getPagerphone()
	{
		return $this->pagerphone;
	}

	/**
	 * Get the [pilotpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotpagercomment()
	{
		return $this->pilotpagercomment;
	}

	/**
	 * Get the [otherphone] column value.
	 * 
	 * @return     string
	 */
	public function getOtherphone()
	{
		return $this->otherphone;
	}

	/**
	 * Get the [pilotothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotothercomment()
	{
		return $this->pilotothercomment;
	}

	/**
	 * Get the [email] column value.
	 * 
	 * @return     string
	 */
	public function getEmail()
	{
		return $this->email;
	}

	/**
	 * Get the [pageemail] column value.
	 * 
	 * @return     string
	 */
	public function getPageemail()
	{
		return $this->pageemail;
	}

	/**
	 * Get the [secondaryemail] column value.
	 * 
	 * @return     string
	 */
	public function getSecondaryemail()
	{
		return $this->secondaryemail;
	}

	/**
	 * Get the [spousefirstname] column value.
	 * 
	 * @return     string
	 */
	public function getSpousefirstname()
	{
		return $this->spousefirstname;
	}

	/**
	 * Get the [spouselastname] column value.
	 * 
	 * @return     string
	 */
	public function getSpouselastname()
	{
		return $this->spouselastname;
	}

	/**
	 * Get the [applicantpilot] column value.
	 * 
	 * @return     string
	 */
	public function getApplicantpilot()
	{
		return $this->applicantpilot;
	}

	/**
	 * Get the [spousepilot] column value.
	 * 
	 * @return     string
	 */
	public function getSpousepilot()
	{
		return $this->spousepilot;
	}

	/**
	 * Get the [applicantcopilot] column value.
	 * 
	 * @return     string
	 */
	public function getApplicantcopilot()
	{
		return $this->applicantcopilot;
	}

	/**
	 * Get the [languagesspoken] column value.
	 * 
	 * @return     string
	 */
	public function getLanguagesspoken()
	{
		return $this->languagesspoken;
	}

	/**
	 * Get the [homebase] column value.
	 * 
	 * @return     string
	 */
	public function getHomebase()
	{
		return $this->homebase;
	}

	/**
	 * Get the [fboname] column value.
	 * 
	 * @return     string
	 */
	public function getFboname()
	{
		return $this->fboname;
	}

	/**
	 * Get the [apmake] column value.
	 * 
	 * @return     string
	 */
	public function getApmake()
	{
		return $this->apmake;
	}

	/**
	 * Get the [apmodel] column value.
	 * 
	 * @return     string
	 */
	public function getApmodel()
	{
		return $this->apmodel;
	}

	/**
	 * Get the [aircraftprimaryown] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftprimaryown()
	{
		return $this->aircraftprimaryown;
	}

	/**
	 * Get the [aircraftprimaryice] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftprimaryice()
	{
		return $this->aircraftprimaryice;
	}

	/**
	 * Get the [aircraftprimaryseats] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftprimaryseats()
	{
		return $this->aircraftprimaryseats;
	}

	/**
	 * Get the [aircraftprimarynnumber] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftprimarynnumber()
	{
		return $this->aircraftprimarynnumber;
	}

	/**
	 * Get the [asmake] column value.
	 * 
	 * @return     string
	 */
	public function getAsmake()
	{
		return $this->asmake;
	}

	/**
	 * Get the [asmodel] column value.
	 * 
	 * @return     string
	 */
	public function getAsmodel()
	{
		return $this->asmodel;
	}

	/**
	 * Get the [aircraftsecondaryown] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftsecondaryown()
	{
		return $this->aircraftsecondaryown;
	}

	/**
	 * Get the [aircraftsecondaryice] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftsecondaryice()
	{
		return $this->aircraftsecondaryice;
	}

	/**
	 * Get the [aircraftsecondaryseats] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftsecondaryseats()
	{
		return $this->aircraftsecondaryseats;
	}

	/**
	 * Get the [aircraftsecondarynnumber] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftsecondarynnumber()
	{
		return $this->aircraftsecondarynnumber;
	}

	/**
	 * Get the [pilotcertificate] column value.
	 * 
	 * @return     string
	 */
	public function getPilotcertificate()
	{
		return $this->pilotcertificate;
	}

	/**
	 * Get the [ratings] column value.
	 * 
	 * @return     string
	 */
	public function getRatings()
	{
		return $this->ratings;
	}

	/**
	 * Get the [medicalclass] column value.
	 * 
	 * @return     int
	 */
	public function getMedicalclass()
	{
		return $this->medicalclass;
	}

	/**
	 * Get the [licensetype] column value.
	 * 
	 * @return     string
	 */
	public function getLicensetype()
	{
		return $this->licensetype;
	}

	/**
	 * Get the [totalhours] column value.
	 * 
	 * @return     int
	 */
	public function getTotalhours()
	{
		return $this->totalhours;
	}

	/**
	 * Get the [ifrhours] column value.
	 * 
	 * @return     int
	 */
	public function getIfrhours()
	{
		return $this->ifrhours;
	}

	/**
	 * Get the [multihours] column value.
	 * 
	 * @return     int
	 */
	public function getMultihours()
	{
		return $this->multihours;
	}

	/**
	 * Get the [otherhours] column value.
	 * 
	 * @return     int
	 */
	public function getOtherhours()
	{
		return $this->otherhours;
	}

	/**
	 * Get the [dateofbirth] column value.
	 * 
	 * @return     string
	 */
	public function getDateofbirth()
	{
		return $this->dateofbirth;
	}

	/**
	 * Get the [height] column value.
	 * 
	 * @return     int
	 */
	public function getHeight()
	{
		return $this->height;
	}

	/**
	 * Get the [weight] column value.
	 * 
	 * @return     int
	 */
	public function getWeight()
	{
		return $this->weight;
	}

	/**
	 * Get the [availabilityweekdays] column value.
	 * 
	 * @return     string
	 */
	public function getAvailabilityweekdays()
	{
		return $this->availabilityweekdays;
	}

	/**
	 * Get the [availabilityweeknights] column value.
	 * 
	 * @return     string
	 */
	public function getAvailabilityweeknights()
	{
		return $this->availabilityweeknights;
	}

	/**
	 * Get the [availabilityweekends] column value.
	 * 
	 * @return     string
	 */
	public function getAvailabilityweekends()
	{
		return $this->availabilityweekends;
	}

	/**
	 * Get the [availabilitynotice] column value.
	 * 
	 * @return     string
	 */
	public function getAvailabilitynotice()
	{
		return $this->availabilitynotice;
	}

	/**
	 * Get the [availabilitylastminute] column value.
	 * 
	 * @return     string
	 */
	public function getAvailabilitylastminute()
	{
		return $this->availabilitylastminute;
	}

	/**
	 * Get the [availabilitycopilot] column value.
	 * 
	 * @return     string
	 */
	public function getAvailabilitycopilot()
	{
		return $this->availabilitycopilot;
	}

	/**
	 * Get the [affirmationagreed] column value.
	 * 
	 * @return     string
	 */
	public function getAffirmationagreed()
	{
		return $this->affirmationagreed;
	}

	/**
	 * Get the [insuranceagreed] column value.
	 * 
	 * @return     string
	 */
	public function getInsuranceagreed()
	{
		return $this->insuranceagreed;
	}

	/**
	 * Get the [hseatsinterest] column value.
	 * 
	 * @return     string
	 */
	public function getHseatsinterest()
	{
		return $this->hseatsinterest;
	}

	/**
	 * Get the [volunteerinterest] column value.
	 * 
	 * @return     string
	 */
	public function getVolunteerinterest()
	{
		return $this->volunteerinterest;
	}

	/**
	 * Get the [companyposition] column value.
	 * 
	 * @return     string
	 */
	public function getCompanyposition()
	{
		return $this->companyposition;
	}

	/**
	 * Get the [companymatchfunds] column value.
	 * 
	 * @return     string
	 */
	public function getCompanymatchfunds()
	{
		return $this->companymatchfunds;
	}

	/**
	 * Get the [companybusinesscategoryid] column value.
	 * 
	 * @return     int
	 */
	public function getCompanybusinesscategoryid()
	{
		return $this->companybusinesscategoryid;
	}

	/**
	 * Get the [referralsource] column value.
	 * 
	 * @return     string
	 */
	public function getReferralsource()
	{
		return $this->referralsource;
	}

	/**
	 * Get the [referralsourceother] column value.
	 * 
	 * @return     string
	 */
	public function getReferralsourceother()
	{
		return $this->referralsourceother;
	}

	/**
	 * Get the [premiumchoice] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumchoice()
	{
		return $this->premiumchoice;
	}

	/**
	 * Get the [premiumsize] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumsize()
	{
		return $this->premiumsize;
	}

	/**
	 * Get the [duesamountpaid] column value.
	 * 
	 * @return     double
	 */
	public function getDuesamountpaid()
	{
		return $this->duesamountpaid;
	}

	/**
	 * Get the [donationamountpaid] column value.
	 * 
	 * @return     double
	 */
	public function getDonationamountpaid()
	{
		return $this->donationamountpaid;
	}

	/**
	 * Get the [methodofpaymentid] column value.
	 * 
	 * @return     string
	 */
	public function getMethodofpaymentid()
	{
		return $this->methodofpaymentid;
	}

	/**
	 * Get the [ccardapprovalnumber] column value.
	 * 
	 * @return     string
	 */
	public function getCcardapprovalnumber()
	{
		return $this->ccardapprovalnumber;
	}

	/**
	 * Get the [processeddate] column value.
	 * 
	 * @return     string
	 */
	public function getProcesseddate()
	{
		return $this->processeddate;
	}

	/**
	 * Get the [missionorientation] column value.
	 * 
	 * @return     string
	 */
	public function getMissionorientation()
	{
		return $this->missionorientation;
	}

	/**
	 * Get the [missioncoordination] column value.
	 * 
	 * @return     string
	 */
	public function getMissioncoordination()
	{
		return $this->missioncoordination;
	}

	/**
	 * Get the [pilotrecruitment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotrecruitment()
	{
		return $this->pilotrecruitment;
	}

	/**
	 * Get the [fundraising] column value.
	 * 
	 * @return     string
	 */
	public function getFundraising()
	{
		return $this->fundraising;
	}

	/**
	 * Get the [celebritycontacts] column value.
	 * 
	 * @return     string
	 */
	public function getCelebritycontacts()
	{
		return $this->celebritycontacts;
	}

	/**
	 * Get the [hospitaloutreach] column value.
	 * 
	 * @return     string
	 */
	public function getHospitaloutreach()
	{
		return $this->hospitaloutreach;
	}

	/**
	 * Get the [mediarelations] column value.
	 * 
	 * @return     string
	 */
	public function getMediarelations()
	{
		return $this->mediarelations;
	}

	/**
	 * Get the [telephonework] column value.
	 * 
	 * @return     string
	 */
	public function getTelephonework()
	{
		return $this->telephonework;
	}

	/**
	 * Get the [computers] column value.
	 * 
	 * @return     string
	 */
	public function getComputers()
	{
		return $this->computers;
	}

	/**
	 * Get the [clerical] column value.
	 * 
	 * @return     string
	 */
	public function getClerical()
	{
		return $this->clerical;
	}

	/**
	 * Get the [publicity] column value.
	 * 
	 * @return     string
	 */
	public function getPublicity()
	{
		return $this->publicity;
	}

	/**
	 * Get the [writing] column value.
	 * 
	 * @return     string
	 */
	public function getWriting()
	{
		return $this->writing;
	}

	/**
	 * Get the [speakersbureau] column value.
	 * 
	 * @return     string
	 */
	public function getSpeakersbureau()
	{
		return $this->speakersbureau;
	}

	/**
	 * Get the [wingteam] column value.
	 * 
	 * @return     string
	 */
	public function getWingteam()
	{
		return $this->wingteam;
	}

	/**
	 * Get the [graphicarts] column value.
	 * 
	 * @return     string
	 */
	public function getGraphicarts()
	{
		return $this->graphicarts;
	}

	/**
	 * Get the [eventplanning] column value.
	 * 
	 * @return     string
	 */
	public function getEventplanning()
	{
		return $this->eventplanning;
	}

	/**
	 * Get the [webinternet] column value.
	 * 
	 * @return     string
	 */
	public function getWebinternet()
	{
		return $this->webinternet;
	}

	/**
	 * Get the [foundationcontacts] column value.
	 * 
	 * @return     string
	 */
	public function getFoundationcontacts()
	{
		return $this->foundationcontacts;
	}

	/**
	 * Get the [aviationcontacts] column value.
	 * 
	 * @return     string
	 */
	public function getAviationcontacts()
	{
		return $this->aviationcontacts;
	}

	/**
	 * Get the [printing] column value.
	 * 
	 * @return     string
	 */
	public function getPrinting()
	{
		return $this->printing;
	}

	/**
	 * Get the [memberaopa] column value.
	 * 
	 * @return     string
	 */
	public function getMemberaopa()
	{
		return $this->memberaopa;
	}

	/**
	 * Get the [memberkiwanis] column value.
	 * 
	 * @return     string
	 */
	public function getMemberkiwanis()
	{
		return $this->memberkiwanis;
	}

	/**
	 * Get the [memberrotary] column value.
	 * 
	 * @return     string
	 */
	public function getMemberrotary()
	{
		return $this->memberrotary;
	}

	/**
	 * Get the [memberlions] column value.
	 * 
	 * @return     string
	 */
	public function getMemberlions()
	{
		return $this->memberlions;
	}

	/**
	 * Get the [memberninetynines] column value.
	 * 
	 * @return     string
	 */
	public function getMemberninetynines()
	{
		return $this->memberninetynines;
	}

	/**
	 * Get the [memberwia] column value.
	 * 
	 * @return     string
	 */
	public function getMemberwia()
	{
		return $this->memberwia;
	}

	/**
	 * Get the [ednewmembernotify] column value.
	 * 
	 * @return     string
	 */
	public function getEdnewmembernotify()
	{
		return $this->ednewmembernotify;
	}

	/**
	 * Get the [wnewmembernotify] column value.
	 * 
	 * @return     string
	 */
	public function getWnewmembernotify()
	{
		return $this->wnewmembernotify;
	}

	/**
	 * Get the [badgemade] column value.
	 * 
	 * @return     string
	 */
	public function getBadgemade()
	{
		return $this->badgemade;
	}

	/**
	 * Get the [notebooksent] column value.
	 * 
	 * @return     string
	 */
	public function getNotebooksent()
	{
		return $this->notebooksent;
	}

	/**
	 * Get the [externalid] column value.
	 * 
	 * @return     int
	 */
	public function getExternalid()
	{
		return $this->externalid;
	}

	/**
	 * Get the [novapointeid] column value.
	 * 
	 * @return     int
	 */
	public function getNovapointeid()
	{
		return $this->novapointeid;
	}

	/**
	 * Get the [premiumshipdate] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumshipdate()
	{
		return $this->premiumshipdate;
	}

	/**
	 * Get the [premiumshipmethod] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumshipmethod()
	{
		return $this->premiumshipmethod;
	}

	/**
	 * Get the [premiumshiptrackingnumber] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumshiptrackingnumber()
	{
		return $this->premiumshiptrackingnumber;
	}

	/**
	 * Get the [id] column value.
	 * 
	 * @return     int
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Set the value of [applicationid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setApplicationid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->applicationid !== $v || $v === 0) {
			$this->applicationid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::APPLICATIONID;
		}

		return $this;
	} // setApplicationid()

	/**
	 * Set the value of [applicationdate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setApplicationdate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->applicationdate !== $v) {
			$this->applicationdate = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::APPLICATIONDATE;
		}

		return $this;
	} // setApplicationdate()

	/**
	 * Set the value of [title] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setTitle($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->title !== $v) {
			$this->title = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::TITLE;
		}

		return $this;
	} // setTitle()

	/**
	 * Set the value of [firstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setFirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->firstname !== $v) {
			$this->firstname = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::FIRSTNAME;
		}

		return $this;
	} // setFirstname()

	/**
	 * Set the value of [lastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setLastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lastname !== $v) {
			$this->lastname = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::LASTNAME;
		}

		return $this;
	} // setLastname()

	/**
	 * Set the value of [addressone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAddressone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->addressone !== $v) {
			$this->addressone = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::ADDRESSONE;
		}

		return $this;
	} // setAddressone()

	/**
	 * Set the value of [addresstwo] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAddresstwo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->addresstwo !== $v) {
			$this->addresstwo = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::ADDRESSTWO;
		}

		return $this;
	} // setAddresstwo()

	/**
	 * Set the value of [city] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->city !== $v) {
			$this->city = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::CITY;
		}

		return $this;
	} // setCity()

	/**
	 * Set the value of [state] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->state !== $v) {
			$this->state = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::STATE;
		}

		return $this;
	} // setState()

	/**
	 * Set the value of [zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->zipcode !== $v) {
			$this->zipcode = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::ZIPCODE;
		}

		return $this;
	} // setZipcode()

	/**
	 * Set the value of [dayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setDayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dayphone !== $v) {
			$this->dayphone = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::DAYPHONE;
		}

		return $this;
	} // setDayphone()

	/**
	 * Set the value of [pilotdaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotdaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotdaycomment !== $v) {
			$this->pilotdaycomment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTDAYCOMMENT;
		}

		return $this;
	} // setPilotdaycomment()

	/**
	 * Set the value of [evephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setEvephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->evephone !== $v) {
			$this->evephone = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::EVEPHONE;
		}

		return $this;
	} // setEvephone()

	/**
	 * Set the value of [pilotevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotevecomment !== $v) {
			$this->pilotevecomment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTEVECOMMENT;
		}

		return $this;
	} // setPilotevecomment()

	/**
	 * Set the value of [faxphone1] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setFaxphone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->faxphone1 !== $v) {
			$this->faxphone1 = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::FAXPHONE1;
		}

		return $this;
	} // setFaxphone1()

	/**
	 * Set the value of [pilotfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotfaxcomment !== $v) {
			$this->pilotfaxcomment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTFAXCOMMENT;
		}

		return $this;
	} // setPilotfaxcomment()

	/**
	 * Set the value of [faxphone2] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setFaxphone2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->faxphone2 !== $v) {
			$this->faxphone2 = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::FAXPHONE2;
		}

		return $this;
	} // setFaxphone2()

	/**
	 * Set the value of [pilotfaxcomment2] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotfaxcomment2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotfaxcomment2 !== $v) {
			$this->pilotfaxcomment2 = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTFAXCOMMENT2;
		}

		return $this;
	} // setPilotfaxcomment2()

	/**
	 * Set the value of [mobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mobilephone !== $v) {
			$this->mobilephone = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MOBILEPHONE;
		}

		return $this;
	} // setMobilephone()

	/**
	 * Set the value of [pilotmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotmobilecomment !== $v) {
			$this->pilotmobilecomment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTMOBILECOMMENT;
		}

		return $this;
	} // setPilotmobilecomment()

	/**
	 * Set the value of [pagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pagerphone !== $v) {
			$this->pagerphone = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PAGERPHONE;
		}

		return $this;
	} // setPagerphone()

	/**
	 * Set the value of [pilotpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotpagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotpagercomment !== $v) {
			$this->pilotpagercomment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTPAGERCOMMENT;
		}

		return $this;
	} // setPilotpagercomment()

	/**
	 * Set the value of [otherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setOtherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->otherphone !== $v) {
			$this->otherphone = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::OTHERPHONE;
		}

		return $this;
	} // setOtherphone()

	/**
	 * Set the value of [pilotothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotothercomment !== $v) {
			$this->pilotothercomment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTOTHERCOMMENT;
		}

		return $this;
	} // setPilotothercomment()

	/**
	 * Set the value of [email] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->email !== $v) {
			$this->email = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::EMAIL;
		}

		return $this;
	} // setEmail()

	/**
	 * Set the value of [pageemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPageemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pageemail !== $v) {
			$this->pageemail = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PAGEEMAIL;
		}

		return $this;
	} // setPageemail()

	/**
	 * Set the value of [secondaryemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setSecondaryemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->secondaryemail !== $v) {
			$this->secondaryemail = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::SECONDARYEMAIL;
		}

		return $this;
	} // setSecondaryemail()

	/**
	 * Set the value of [spousefirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setSpousefirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->spousefirstname !== $v) {
			$this->spousefirstname = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::SPOUSEFIRSTNAME;
		}

		return $this;
	} // setSpousefirstname()

	/**
	 * Set the value of [spouselastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setSpouselastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->spouselastname !== $v) {
			$this->spouselastname = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::SPOUSELASTNAME;
		}

		return $this;
	} // setSpouselastname()

	/**
	 * Set the value of [applicantpilot] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setApplicantpilot($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->applicantpilot !== $v) {
			$this->applicantpilot = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::APPLICANTPILOT;
		}

		return $this;
	} // setApplicantpilot()

	/**
	 * Set the value of [spousepilot] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setSpousepilot($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->spousepilot !== $v) {
			$this->spousepilot = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::SPOUSEPILOT;
		}

		return $this;
	} // setSpousepilot()

	/**
	 * Set the value of [applicantcopilot] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setApplicantcopilot($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->applicantcopilot !== $v) {
			$this->applicantcopilot = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::APPLICANTCOPILOT;
		}

		return $this;
	} // setApplicantcopilot()

	/**
	 * Set the value of [languagesspoken] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setLanguagesspoken($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->languagesspoken !== $v) {
			$this->languagesspoken = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::LANGUAGESSPOKEN;
		}

		return $this;
	} // setLanguagesspoken()

	/**
	 * Set the value of [homebase] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setHomebase($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->homebase !== $v) {
			$this->homebase = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::HOMEBASE;
		}

		return $this;
	} // setHomebase()

	/**
	 * Set the value of [fboname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setFboname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fboname !== $v) {
			$this->fboname = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::FBONAME;
		}

		return $this;
	} // setFboname()

	/**
	 * Set the value of [apmake] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setApmake($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->apmake !== $v) {
			$this->apmake = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::APMAKE;
		}

		return $this;
	} // setApmake()

	/**
	 * Set the value of [apmodel] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setApmodel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->apmodel !== $v) {
			$this->apmodel = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::APMODEL;
		}

		return $this;
	} // setApmodel()

	/**
	 * Set the value of [aircraftprimaryown] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftprimaryown($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftprimaryown !== $v) {
			$this->aircraftprimaryown = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTPRIMARYOWN;
		}

		return $this;
	} // setAircraftprimaryown()

	/**
	 * Set the value of [aircraftprimaryice] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftprimaryice($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftprimaryice !== $v) {
			$this->aircraftprimaryice = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTPRIMARYICE;
		}

		return $this;
	} // setAircraftprimaryice()

	/**
	 * Set the value of [aircraftprimaryseats] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftprimaryseats($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraftprimaryseats !== $v) {
			$this->aircraftprimaryseats = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTPRIMARYSEATS;
		}

		return $this;
	} // setAircraftprimaryseats()

	/**
	 * Set the value of [aircraftprimarynnumber] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftprimarynnumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftprimarynnumber !== $v) {
			$this->aircraftprimarynnumber = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTPRIMARYNNUMBER;
		}

		return $this;
	} // setAircraftprimarynnumber()

	/**
	 * Set the value of [asmake] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAsmake($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asmake !== $v) {
			$this->asmake = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::ASMAKE;
		}

		return $this;
	} // setAsmake()

	/**
	 * Set the value of [asmodel] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAsmodel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asmodel !== $v) {
			$this->asmodel = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::ASMODEL;
		}

		return $this;
	} // setAsmodel()

	/**
	 * Set the value of [aircraftsecondaryown] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftsecondaryown($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftsecondaryown !== $v) {
			$this->aircraftsecondaryown = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTSECONDARYOWN;
		}

		return $this;
	} // setAircraftsecondaryown()

	/**
	 * Set the value of [aircraftsecondaryice] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftsecondaryice($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftsecondaryice !== $v) {
			$this->aircraftsecondaryice = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTSECONDARYICE;
		}

		return $this;
	} // setAircraftsecondaryice()

	/**
	 * Set the value of [aircraftsecondaryseats] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftsecondaryseats($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraftsecondaryseats !== $v) {
			$this->aircraftsecondaryseats = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTSECONDARYSEATS;
		}

		return $this;
	} // setAircraftsecondaryseats()

	/**
	 * Set the value of [aircraftsecondarynnumber] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAircraftsecondarynnumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftsecondarynnumber !== $v) {
			$this->aircraftsecondarynnumber = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AIRCRAFTSECONDARYNNUMBER;
		}

		return $this;
	} // setAircraftsecondarynnumber()

	/**
	 * Set the value of [pilotcertificate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotcertificate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotcertificate !== $v) {
			$this->pilotcertificate = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTCERTIFICATE;
		}

		return $this;
	} // setPilotcertificate()

	/**
	 * Set the value of [ratings] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setRatings($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ratings !== $v) {
			$this->ratings = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::RATINGS;
		}

		return $this;
	} // setRatings()

	/**
	 * Set the value of [medicalclass] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMedicalclass($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->medicalclass !== $v) {
			$this->medicalclass = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEDICALCLASS;
		}

		return $this;
	} // setMedicalclass()

	/**
	 * Set the value of [licensetype] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setLicensetype($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->licensetype !== $v) {
			$this->licensetype = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::LICENSETYPE;
		}

		return $this;
	} // setLicensetype()

	/**
	 * Set the value of [totalhours] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setTotalhours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->totalhours !== $v) {
			$this->totalhours = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::TOTALHOURS;
		}

		return $this;
	} // setTotalhours()

	/**
	 * Set the value of [ifrhours] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setIfrhours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ifrhours !== $v) {
			$this->ifrhours = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::IFRHOURS;
		}

		return $this;
	} // setIfrhours()

	/**
	 * Set the value of [multihours] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMultihours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->multihours !== $v) {
			$this->multihours = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MULTIHOURS;
		}

		return $this;
	} // setMultihours()

	/**
	 * Set the value of [otherhours] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setOtherhours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->otherhours !== $v) {
			$this->otherhours = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::OTHERHOURS;
		}

		return $this;
	} // setOtherhours()

	/**
	 * Set the value of [dateofbirth] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setDateofbirth($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dateofbirth !== $v) {
			$this->dateofbirth = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::DATEOFBIRTH;
		}

		return $this;
	} // setDateofbirth()

	/**
	 * Set the value of [height] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setHeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->height !== $v) {
			$this->height = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::HEIGHT;
		}

		return $this;
	} // setHeight()

	/**
	 * Set the value of [weight] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setWeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->weight !== $v) {
			$this->weight = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::WEIGHT;
		}

		return $this;
	} // setWeight()

	/**
	 * Set the value of [availabilityweekdays] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAvailabilityweekdays($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->availabilityweekdays !== $v) {
			$this->availabilityweekdays = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVAILABILITYWEEKDAYS;
		}

		return $this;
	} // setAvailabilityweekdays()

	/**
	 * Set the value of [availabilityweeknights] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAvailabilityweeknights($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->availabilityweeknights !== $v) {
			$this->availabilityweeknights = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVAILABILITYWEEKNIGHTS;
		}

		return $this;
	} // setAvailabilityweeknights()

	/**
	 * Set the value of [availabilityweekends] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAvailabilityweekends($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->availabilityweekends !== $v) {
			$this->availabilityweekends = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVAILABILITYWEEKENDS;
		}

		return $this;
	} // setAvailabilityweekends()

	/**
	 * Set the value of [availabilitynotice] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAvailabilitynotice($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->availabilitynotice !== $v) {
			$this->availabilitynotice = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVAILABILITYNOTICE;
		}

		return $this;
	} // setAvailabilitynotice()

	/**
	 * Set the value of [availabilitylastminute] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAvailabilitylastminute($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->availabilitylastminute !== $v) {
			$this->availabilitylastminute = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVAILABILITYLASTMINUTE;
		}

		return $this;
	} // setAvailabilitylastminute()

	/**
	 * Set the value of [availabilitycopilot] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAvailabilitycopilot($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->availabilitycopilot !== $v) {
			$this->availabilitycopilot = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVAILABILITYCOPILOT;
		}

		return $this;
	} // setAvailabilitycopilot()

	/**
	 * Set the value of [affirmationagreed] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAffirmationagreed($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->affirmationagreed !== $v) {
			$this->affirmationagreed = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AFFIRMATIONAGREED;
		}

		return $this;
	} // setAffirmationagreed()

	/**
	 * Set the value of [insuranceagreed] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setInsuranceagreed($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->insuranceagreed !== $v) {
			$this->insuranceagreed = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::INSURANCEAGREED;
		}

		return $this;
	} // setInsuranceagreed()

	/**
	 * Set the value of [hseatsinterest] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setHseatsinterest($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->hseatsinterest !== $v) {
			$this->hseatsinterest = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::HSEATSINTEREST;
		}

		return $this;
	} // setHseatsinterest()

	/**
	 * Set the value of [volunteerinterest] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setVolunteerinterest($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->volunteerinterest !== $v) {
			$this->volunteerinterest = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::VOLUNTEERINTEREST;
		}

		return $this;
	} // setVolunteerinterest()

	/**
	 * Set the value of [companyposition] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setCompanyposition($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companyposition !== $v) {
			$this->companyposition = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::COMPANYPOSITION;
		}

		return $this;
	} // setCompanyposition()

	/**
	 * Set the value of [companymatchfunds] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setCompanymatchfunds($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companymatchfunds !== $v) {
			$this->companymatchfunds = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::COMPANYMATCHFUNDS;
		}

		return $this;
	} // setCompanymatchfunds()

	/**
	 * Set the value of [companybusinesscategoryid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setCompanybusinesscategoryid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->companybusinesscategoryid !== $v) {
			$this->companybusinesscategoryid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::COMPANYBUSINESSCATEGORYID;
		}

		return $this;
	} // setCompanybusinesscategoryid()

	/**
	 * Set the value of [referralsource] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setReferralsource($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->referralsource !== $v) {
			$this->referralsource = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::REFERRALSOURCE;
		}

		return $this;
	} // setReferralsource()

	/**
	 * Set the value of [referralsourceother] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setReferralsourceother($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->referralsourceother !== $v) {
			$this->referralsourceother = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::REFERRALSOURCEOTHER;
		}

		return $this;
	} // setReferralsourceother()

	/**
	 * Set the value of [premiumchoice] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPremiumchoice($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premiumchoice !== $v) {
			$this->premiumchoice = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PREMIUMCHOICE;
		}

		return $this;
	} // setPremiumchoice()

	/**
	 * Set the value of [premiumsize] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPremiumsize($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premiumsize !== $v) {
			$this->premiumsize = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PREMIUMSIZE;
		}

		return $this;
	} // setPremiumsize()

	/**
	 * Set the value of [duesamountpaid] column.
	 * 
	 * @param      double $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setDuesamountpaid($v)
	{
		if ($v !== null) {
			$v = (double) $v;
		}

		if ($this->duesamountpaid !== $v || $v === 0) {
			$this->duesamountpaid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::DUESAMOUNTPAID;
		}

		return $this;
	} // setDuesamountpaid()

	/**
	 * Set the value of [donationamountpaid] column.
	 * 
	 * @param      double $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setDonationamountpaid($v)
	{
		if ($v !== null) {
			$v = (double) $v;
		}

		if ($this->donationamountpaid !== $v) {
			$this->donationamountpaid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::DONATIONAMOUNTPAID;
		}

		return $this;
	} // setDonationamountpaid()

	/**
	 * Set the value of [methodofpaymentid] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMethodofpaymentid($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->methodofpaymentid !== $v) {
			$this->methodofpaymentid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::METHODOFPAYMENTID;
		}

		return $this;
	} // setMethodofpaymentid()

	/**
	 * Set the value of [ccardapprovalnumber] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setCcardapprovalnumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ccardapprovalnumber !== $v) {
			$this->ccardapprovalnumber = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::CCARDAPPROVALNUMBER;
		}

		return $this;
	} // setCcardapprovalnumber()

	/**
	 * Set the value of [processeddate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setProcesseddate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->processeddate !== $v) {
			$this->processeddate = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PROCESSEDDATE;
		}

		return $this;
	} // setProcesseddate()

	/**
	 * Set the value of [missionorientation] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMissionorientation($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->missionorientation !== $v) {
			$this->missionorientation = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MISSIONORIENTATION;
		}

		return $this;
	} // setMissionorientation()

	/**
	 * Set the value of [missioncoordination] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMissioncoordination($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->missioncoordination !== $v) {
			$this->missioncoordination = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MISSIONCOORDINATION;
		}

		return $this;
	} // setMissioncoordination()

	/**
	 * Set the value of [pilotrecruitment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPilotrecruitment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotrecruitment !== $v) {
			$this->pilotrecruitment = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PILOTRECRUITMENT;
		}

		return $this;
	} // setPilotrecruitment()

	/**
	 * Set the value of [fundraising] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setFundraising($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fundraising !== $v) {
			$this->fundraising = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::FUNDRAISING;
		}

		return $this;
	} // setFundraising()

	/**
	 * Set the value of [celebritycontacts] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setCelebritycontacts($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->celebritycontacts !== $v) {
			$this->celebritycontacts = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::CELEBRITYCONTACTS;
		}

		return $this;
	} // setCelebritycontacts()

	/**
	 * Set the value of [hospitaloutreach] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setHospitaloutreach($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->hospitaloutreach !== $v) {
			$this->hospitaloutreach = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::HOSPITALOUTREACH;
		}

		return $this;
	} // setHospitaloutreach()

	/**
	 * Set the value of [mediarelations] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMediarelations($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mediarelations !== $v) {
			$this->mediarelations = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEDIARELATIONS;
		}

		return $this;
	} // setMediarelations()

	/**
	 * Set the value of [telephonework] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setTelephonework($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->telephonework !== $v) {
			$this->telephonework = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::TELEPHONEWORK;
		}

		return $this;
	} // setTelephonework()

	/**
	 * Set the value of [computers] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setComputers($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->computers !== $v) {
			$this->computers = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::COMPUTERS;
		}

		return $this;
	} // setComputers()

	/**
	 * Set the value of [clerical] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setClerical($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->clerical !== $v) {
			$this->clerical = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::CLERICAL;
		}

		return $this;
	} // setClerical()

	/**
	 * Set the value of [publicity] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPublicity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->publicity !== $v) {
			$this->publicity = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PUBLICITY;
		}

		return $this;
	} // setPublicity()

	/**
	 * Set the value of [writing] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setWriting($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->writing !== $v) {
			$this->writing = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::WRITING;
		}

		return $this;
	} // setWriting()

	/**
	 * Set the value of [speakersbureau] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setSpeakersbureau($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->speakersbureau !== $v) {
			$this->speakersbureau = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::SPEAKERSBUREAU;
		}

		return $this;
	} // setSpeakersbureau()

	/**
	 * Set the value of [wingteam] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setWingteam($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->wingteam !== $v) {
			$this->wingteam = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::WINGTEAM;
		}

		return $this;
	} // setWingteam()

	/**
	 * Set the value of [graphicarts] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setGraphicarts($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->graphicarts !== $v) {
			$this->graphicarts = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::GRAPHICARTS;
		}

		return $this;
	} // setGraphicarts()

	/**
	 * Set the value of [eventplanning] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setEventplanning($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->eventplanning !== $v) {
			$this->eventplanning = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::EVENTPLANNING;
		}

		return $this;
	} // setEventplanning()

	/**
	 * Set the value of [webinternet] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setWebinternet($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->webinternet !== $v) {
			$this->webinternet = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::WEBINTERNET;
		}

		return $this;
	} // setWebinternet()

	/**
	 * Set the value of [foundationcontacts] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setFoundationcontacts($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->foundationcontacts !== $v) {
			$this->foundationcontacts = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::FOUNDATIONCONTACTS;
		}

		return $this;
	} // setFoundationcontacts()

	/**
	 * Set the value of [aviationcontacts] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setAviationcontacts($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aviationcontacts !== $v) {
			$this->aviationcontacts = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::AVIATIONCONTACTS;
		}

		return $this;
	} // setAviationcontacts()

	/**
	 * Set the value of [printing] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPrinting($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->printing !== $v) {
			$this->printing = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PRINTING;
		}

		return $this;
	} // setPrinting()

	/**
	 * Set the value of [memberaopa] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMemberaopa($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->memberaopa !== $v) {
			$this->memberaopa = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEMBERAOPA;
		}

		return $this;
	} // setMemberaopa()

	/**
	 * Set the value of [memberkiwanis] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMemberkiwanis($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->memberkiwanis !== $v) {
			$this->memberkiwanis = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEMBERKIWANIS;
		}

		return $this;
	} // setMemberkiwanis()

	/**
	 * Set the value of [memberrotary] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMemberrotary($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->memberrotary !== $v) {
			$this->memberrotary = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEMBERROTARY;
		}

		return $this;
	} // setMemberrotary()

	/**
	 * Set the value of [memberlions] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMemberlions($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->memberlions !== $v) {
			$this->memberlions = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEMBERLIONS;
		}

		return $this;
	} // setMemberlions()

	/**
	 * Set the value of [memberninetynines] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMemberninetynines($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->memberninetynines !== $v) {
			$this->memberninetynines = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEMBERNINETYNINES;
		}

		return $this;
	} // setMemberninetynines()

	/**
	 * Set the value of [memberwia] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setMemberwia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->memberwia !== $v) {
			$this->memberwia = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::MEMBERWIA;
		}

		return $this;
	} // setMemberwia()

	/**
	 * Set the value of [ednewmembernotify] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setEdnewmembernotify($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ednewmembernotify !== $v) {
			$this->ednewmembernotify = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::EDNEWMEMBERNOTIFY;
		}

		return $this;
	} // setEdnewmembernotify()

	/**
	 * Set the value of [wnewmembernotify] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setWnewmembernotify($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->wnewmembernotify !== $v) {
			$this->wnewmembernotify = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::WNEWMEMBERNOTIFY;
		}

		return $this;
	} // setWnewmembernotify()

	/**
	 * Set the value of [badgemade] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setBadgemade($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->badgemade !== $v) {
			$this->badgemade = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::BADGEMADE;
		}

		return $this;
	} // setBadgemade()

	/**
	 * Set the value of [notebooksent] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setNotebooksent($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->notebooksent !== $v) {
			$this->notebooksent = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::NOTEBOOKSENT;
		}

		return $this;
	} // setNotebooksent()

	/**
	 * Set the value of [externalid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setExternalid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->externalid !== $v) {
			$this->externalid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::EXTERNALID;
		}

		return $this;
	} // setExternalid()

	/**
	 * Set the value of [novapointeid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setNovapointeid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->novapointeid !== $v) {
			$this->novapointeid = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::NOVAPOINTEID;
		}

		return $this;
	} // setNovapointeid()

	/**
	 * Set the value of [premiumshipdate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPremiumshipdate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premiumshipdate !== $v) {
			$this->premiumshipdate = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PREMIUMSHIPDATE;
		}

		return $this;
	} // setPremiumshipdate()

	/**
	 * Set the value of [premiumshipmethod] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPremiumshipmethod($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premiumshipmethod !== $v) {
			$this->premiumshipmethod = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PREMIUMSHIPMETHOD;
		}

		return $this;
	} // setPremiumshipmethod()

	/**
	 * Set the value of [premiumshiptrackingnumber] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setPremiumshiptrackingnumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premiumshiptrackingnumber !== $v) {
			$this->premiumshiptrackingnumber = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::PREMIUMSHIPTRACKINGNUMBER;
		}

		return $this;
	} // setPremiumshiptrackingnumber()

	/**
	 * Set the value of [id] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMemberApplication The current object (for fluent API support)
	 */
	public function setId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id !== $v) {
			$this->id = $v;
			$this->modifiedColumns[] = RpMemberApplicationPeer::ID;
		}

		return $this;
	} // setId()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array(RpMemberApplicationPeer::APPLICATIONID,RpMemberApplicationPeer::DUESAMOUNTPAID))) {
				return false;
			}

			if ($this->applicationid !== 0) {
				return false;
			}

			if ($this->duesamountpaid !== 0) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->applicationid = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->applicationdate = ($row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->title = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->firstname = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->lastname = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->addressone = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->addresstwo = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->city = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->state = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->zipcode = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->dayphone = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->pilotdaycomment = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->evephone = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->pilotevecomment = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->faxphone1 = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->pilotfaxcomment = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->faxphone2 = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->pilotfaxcomment2 = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->mobilephone = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->pilotmobilecomment = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->pagerphone = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->pilotpagercomment = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->otherphone = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->pilotothercomment = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->email = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->pageemail = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->secondaryemail = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->spousefirstname = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->spouselastname = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->applicantpilot = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->spousepilot = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->applicantcopilot = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->languagesspoken = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->homebase = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->fboname = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->apmake = ($row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->apmodel = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->aircraftprimaryown = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->aircraftprimaryice = ($row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->aircraftprimaryseats = ($row[$startcol + 39] !== null) ? (int) $row[$startcol + 39] : null;
			$this->aircraftprimarynnumber = ($row[$startcol + 40] !== null) ? (string) $row[$startcol + 40] : null;
			$this->asmake = ($row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->asmodel = ($row[$startcol + 42] !== null) ? (string) $row[$startcol + 42] : null;
			$this->aircraftsecondaryown = ($row[$startcol + 43] !== null) ? (string) $row[$startcol + 43] : null;
			$this->aircraftsecondaryice = ($row[$startcol + 44] !== null) ? (string) $row[$startcol + 44] : null;
			$this->aircraftsecondaryseats = ($row[$startcol + 45] !== null) ? (int) $row[$startcol + 45] : null;
			$this->aircraftsecondarynnumber = ($row[$startcol + 46] !== null) ? (string) $row[$startcol + 46] : null;
			$this->pilotcertificate = ($row[$startcol + 47] !== null) ? (string) $row[$startcol + 47] : null;
			$this->ratings = ($row[$startcol + 48] !== null) ? (string) $row[$startcol + 48] : null;
			$this->medicalclass = ($row[$startcol + 49] !== null) ? (int) $row[$startcol + 49] : null;
			$this->licensetype = ($row[$startcol + 50] !== null) ? (string) $row[$startcol + 50] : null;
			$this->totalhours = ($row[$startcol + 51] !== null) ? (int) $row[$startcol + 51] : null;
			$this->ifrhours = ($row[$startcol + 52] !== null) ? (int) $row[$startcol + 52] : null;
			$this->multihours = ($row[$startcol + 53] !== null) ? (int) $row[$startcol + 53] : null;
			$this->otherhours = ($row[$startcol + 54] !== null) ? (int) $row[$startcol + 54] : null;
			$this->dateofbirth = ($row[$startcol + 55] !== null) ? (string) $row[$startcol + 55] : null;
			$this->height = ($row[$startcol + 56] !== null) ? (int) $row[$startcol + 56] : null;
			$this->weight = ($row[$startcol + 57] !== null) ? (int) $row[$startcol + 57] : null;
			$this->availabilityweekdays = ($row[$startcol + 58] !== null) ? (string) $row[$startcol + 58] : null;
			$this->availabilityweeknights = ($row[$startcol + 59] !== null) ? (string) $row[$startcol + 59] : null;
			$this->availabilityweekends = ($row[$startcol + 60] !== null) ? (string) $row[$startcol + 60] : null;
			$this->availabilitynotice = ($row[$startcol + 61] !== null) ? (string) $row[$startcol + 61] : null;
			$this->availabilitylastminute = ($row[$startcol + 62] !== null) ? (string) $row[$startcol + 62] : null;
			$this->availabilitycopilot = ($row[$startcol + 63] !== null) ? (string) $row[$startcol + 63] : null;
			$this->affirmationagreed = ($row[$startcol + 64] !== null) ? (string) $row[$startcol + 64] : null;
			$this->insuranceagreed = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->hseatsinterest = ($row[$startcol + 66] !== null) ? (string) $row[$startcol + 66] : null;
			$this->volunteerinterest = ($row[$startcol + 67] !== null) ? (string) $row[$startcol + 67] : null;
			$this->companyposition = ($row[$startcol + 68] !== null) ? (string) $row[$startcol + 68] : null;
			$this->companymatchfunds = ($row[$startcol + 69] !== null) ? (string) $row[$startcol + 69] : null;
			$this->companybusinesscategoryid = ($row[$startcol + 70] !== null) ? (int) $row[$startcol + 70] : null;
			$this->referralsource = ($row[$startcol + 71] !== null) ? (string) $row[$startcol + 71] : null;
			$this->referralsourceother = ($row[$startcol + 72] !== null) ? (string) $row[$startcol + 72] : null;
			$this->premiumchoice = ($row[$startcol + 73] !== null) ? (string) $row[$startcol + 73] : null;
			$this->premiumsize = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->duesamountpaid = ($row[$startcol + 75] !== null) ? (double) $row[$startcol + 75] : null;
			$this->donationamountpaid = ($row[$startcol + 76] !== null) ? (double) $row[$startcol + 76] : null;
			$this->methodofpaymentid = ($row[$startcol + 77] !== null) ? (string) $row[$startcol + 77] : null;
			$this->ccardapprovalnumber = ($row[$startcol + 78] !== null) ? (string) $row[$startcol + 78] : null;
			$this->processeddate = ($row[$startcol + 79] !== null) ? (string) $row[$startcol + 79] : null;
			$this->missionorientation = ($row[$startcol + 80] !== null) ? (string) $row[$startcol + 80] : null;
			$this->missioncoordination = ($row[$startcol + 81] !== null) ? (string) $row[$startcol + 81] : null;
			$this->pilotrecruitment = ($row[$startcol + 82] !== null) ? (string) $row[$startcol + 82] : null;
			$this->fundraising = ($row[$startcol + 83] !== null) ? (string) $row[$startcol + 83] : null;
			$this->celebritycontacts = ($row[$startcol + 84] !== null) ? (string) $row[$startcol + 84] : null;
			$this->hospitaloutreach = ($row[$startcol + 85] !== null) ? (string) $row[$startcol + 85] : null;
			$this->mediarelations = ($row[$startcol + 86] !== null) ? (string) $row[$startcol + 86] : null;
			$this->telephonework = ($row[$startcol + 87] !== null) ? (string) $row[$startcol + 87] : null;
			$this->computers = ($row[$startcol + 88] !== null) ? (string) $row[$startcol + 88] : null;
			$this->clerical = ($row[$startcol + 89] !== null) ? (string) $row[$startcol + 89] : null;
			$this->publicity = ($row[$startcol + 90] !== null) ? (string) $row[$startcol + 90] : null;
			$this->writing = ($row[$startcol + 91] !== null) ? (string) $row[$startcol + 91] : null;
			$this->speakersbureau = ($row[$startcol + 92] !== null) ? (string) $row[$startcol + 92] : null;
			$this->wingteam = ($row[$startcol + 93] !== null) ? (string) $row[$startcol + 93] : null;
			$this->graphicarts = ($row[$startcol + 94] !== null) ? (string) $row[$startcol + 94] : null;
			$this->eventplanning = ($row[$startcol + 95] !== null) ? (string) $row[$startcol + 95] : null;
			$this->webinternet = ($row[$startcol + 96] !== null) ? (string) $row[$startcol + 96] : null;
			$this->foundationcontacts = ($row[$startcol + 97] !== null) ? (string) $row[$startcol + 97] : null;
			$this->aviationcontacts = ($row[$startcol + 98] !== null) ? (string) $row[$startcol + 98] : null;
			$this->printing = ($row[$startcol + 99] !== null) ? (string) $row[$startcol + 99] : null;
			$this->memberaopa = ($row[$startcol + 100] !== null) ? (string) $row[$startcol + 100] : null;
			$this->memberkiwanis = ($row[$startcol + 101] !== null) ? (string) $row[$startcol + 101] : null;
			$this->memberrotary = ($row[$startcol + 102] !== null) ? (string) $row[$startcol + 102] : null;
			$this->memberlions = ($row[$startcol + 103] !== null) ? (string) $row[$startcol + 103] : null;
			$this->memberninetynines = ($row[$startcol + 104] !== null) ? (string) $row[$startcol + 104] : null;
			$this->memberwia = ($row[$startcol + 105] !== null) ? (string) $row[$startcol + 105] : null;
			$this->ednewmembernotify = ($row[$startcol + 106] !== null) ? (string) $row[$startcol + 106] : null;
			$this->wnewmembernotify = ($row[$startcol + 107] !== null) ? (string) $row[$startcol + 107] : null;
			$this->badgemade = ($row[$startcol + 108] !== null) ? (string) $row[$startcol + 108] : null;
			$this->notebooksent = ($row[$startcol + 109] !== null) ? (string) $row[$startcol + 109] : null;
			$this->externalid = ($row[$startcol + 110] !== null) ? (int) $row[$startcol + 110] : null;
			$this->novapointeid = ($row[$startcol + 111] !== null) ? (int) $row[$startcol + 111] : null;
			$this->premiumshipdate = ($row[$startcol + 112] !== null) ? (string) $row[$startcol + 112] : null;
			$this->premiumshipmethod = ($row[$startcol + 113] !== null) ? (string) $row[$startcol + 113] : null;
			$this->premiumshiptrackingnumber = ($row[$startcol + 114] !== null) ? (string) $row[$startcol + 114] : null;
			$this->id = ($row[$startcol + 115] !== null) ? (int) $row[$startcol + 115] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 116; // 116 = RpMemberApplicationPeer::NUM_COLUMNS - RpMemberApplicationPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating RpMemberApplication object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(RpMemberApplicationPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = RpMemberApplicationPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseRpMemberApplication:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(RpMemberApplicationPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			RpMemberApplicationPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseRpMemberApplication:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseRpMemberApplication:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(RpMemberApplicationPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseRpMemberApplication:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			RpMemberApplicationPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = RpMemberApplicationPeer::ID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = RpMemberApplicationPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setId($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += RpMemberApplicationPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = RpMemberApplicationPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = RpMemberApplicationPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getApplicationid();
				break;
			case 1:
				return $this->getApplicationdate();
				break;
			case 2:
				return $this->getTitle();
				break;
			case 3:
				return $this->getFirstname();
				break;
			case 4:
				return $this->getLastname();
				break;
			case 5:
				return $this->getAddressone();
				break;
			case 6:
				return $this->getAddresstwo();
				break;
			case 7:
				return $this->getCity();
				break;
			case 8:
				return $this->getState();
				break;
			case 9:
				return $this->getZipcode();
				break;
			case 10:
				return $this->getDayphone();
				break;
			case 11:
				return $this->getPilotdaycomment();
				break;
			case 12:
				return $this->getEvephone();
				break;
			case 13:
				return $this->getPilotevecomment();
				break;
			case 14:
				return $this->getFaxphone1();
				break;
			case 15:
				return $this->getPilotfaxcomment();
				break;
			case 16:
				return $this->getFaxphone2();
				break;
			case 17:
				return $this->getPilotfaxcomment2();
				break;
			case 18:
				return $this->getMobilephone();
				break;
			case 19:
				return $this->getPilotmobilecomment();
				break;
			case 20:
				return $this->getPagerphone();
				break;
			case 21:
				return $this->getPilotpagercomment();
				break;
			case 22:
				return $this->getOtherphone();
				break;
			case 23:
				return $this->getPilotothercomment();
				break;
			case 24:
				return $this->getEmail();
				break;
			case 25:
				return $this->getPageemail();
				break;
			case 26:
				return $this->getSecondaryemail();
				break;
			case 27:
				return $this->getSpousefirstname();
				break;
			case 28:
				return $this->getSpouselastname();
				break;
			case 29:
				return $this->getApplicantpilot();
				break;
			case 30:
				return $this->getSpousepilot();
				break;
			case 31:
				return $this->getApplicantcopilot();
				break;
			case 32:
				return $this->getLanguagesspoken();
				break;
			case 33:
				return $this->getHomebase();
				break;
			case 34:
				return $this->getFboname();
				break;
			case 35:
				return $this->getApmake();
				break;
			case 36:
				return $this->getApmodel();
				break;
			case 37:
				return $this->getAircraftprimaryown();
				break;
			case 38:
				return $this->getAircraftprimaryice();
				break;
			case 39:
				return $this->getAircraftprimaryseats();
				break;
			case 40:
				return $this->getAircraftprimarynnumber();
				break;
			case 41:
				return $this->getAsmake();
				break;
			case 42:
				return $this->getAsmodel();
				break;
			case 43:
				return $this->getAircraftsecondaryown();
				break;
			case 44:
				return $this->getAircraftsecondaryice();
				break;
			case 45:
				return $this->getAircraftsecondaryseats();
				break;
			case 46:
				return $this->getAircraftsecondarynnumber();
				break;
			case 47:
				return $this->getPilotcertificate();
				break;
			case 48:
				return $this->getRatings();
				break;
			case 49:
				return $this->getMedicalclass();
				break;
			case 50:
				return $this->getLicensetype();
				break;
			case 51:
				return $this->getTotalhours();
				break;
			case 52:
				return $this->getIfrhours();
				break;
			case 53:
				return $this->getMultihours();
				break;
			case 54:
				return $this->getOtherhours();
				break;
			case 55:
				return $this->getDateofbirth();
				break;
			case 56:
				return $this->getHeight();
				break;
			case 57:
				return $this->getWeight();
				break;
			case 58:
				return $this->getAvailabilityweekdays();
				break;
			case 59:
				return $this->getAvailabilityweeknights();
				break;
			case 60:
				return $this->getAvailabilityweekends();
				break;
			case 61:
				return $this->getAvailabilitynotice();
				break;
			case 62:
				return $this->getAvailabilitylastminute();
				break;
			case 63:
				return $this->getAvailabilitycopilot();
				break;
			case 64:
				return $this->getAffirmationagreed();
				break;
			case 65:
				return $this->getInsuranceagreed();
				break;
			case 66:
				return $this->getHseatsinterest();
				break;
			case 67:
				return $this->getVolunteerinterest();
				break;
			case 68:
				return $this->getCompanyposition();
				break;
			case 69:
				return $this->getCompanymatchfunds();
				break;
			case 70:
				return $this->getCompanybusinesscategoryid();
				break;
			case 71:
				return $this->getReferralsource();
				break;
			case 72:
				return $this->getReferralsourceother();
				break;
			case 73:
				return $this->getPremiumchoice();
				break;
			case 74:
				return $this->getPremiumsize();
				break;
			case 75:
				return $this->getDuesamountpaid();
				break;
			case 76:
				return $this->getDonationamountpaid();
				break;
			case 77:
				return $this->getMethodofpaymentid();
				break;
			case 78:
				return $this->getCcardapprovalnumber();
				break;
			case 79:
				return $this->getProcesseddate();
				break;
			case 80:
				return $this->getMissionorientation();
				break;
			case 81:
				return $this->getMissioncoordination();
				break;
			case 82:
				return $this->getPilotrecruitment();
				break;
			case 83:
				return $this->getFundraising();
				break;
			case 84:
				return $this->getCelebritycontacts();
				break;
			case 85:
				return $this->getHospitaloutreach();
				break;
			case 86:
				return $this->getMediarelations();
				break;
			case 87:
				return $this->getTelephonework();
				break;
			case 88:
				return $this->getComputers();
				break;
			case 89:
				return $this->getClerical();
				break;
			case 90:
				return $this->getPublicity();
				break;
			case 91:
				return $this->getWriting();
				break;
			case 92:
				return $this->getSpeakersbureau();
				break;
			case 93:
				return $this->getWingteam();
				break;
			case 94:
				return $this->getGraphicarts();
				break;
			case 95:
				return $this->getEventplanning();
				break;
			case 96:
				return $this->getWebinternet();
				break;
			case 97:
				return $this->getFoundationcontacts();
				break;
			case 98:
				return $this->getAviationcontacts();
				break;
			case 99:
				return $this->getPrinting();
				break;
			case 100:
				return $this->getMemberaopa();
				break;
			case 101:
				return $this->getMemberkiwanis();
				break;
			case 102:
				return $this->getMemberrotary();
				break;
			case 103:
				return $this->getMemberlions();
				break;
			case 104:
				return $this->getMemberninetynines();
				break;
			case 105:
				return $this->getMemberwia();
				break;
			case 106:
				return $this->getEdnewmembernotify();
				break;
			case 107:
				return $this->getWnewmembernotify();
				break;
			case 108:
				return $this->getBadgemade();
				break;
			case 109:
				return $this->getNotebooksent();
				break;
			case 110:
				return $this->getExternalid();
				break;
			case 111:
				return $this->getNovapointeid();
				break;
			case 112:
				return $this->getPremiumshipdate();
				break;
			case 113:
				return $this->getPremiumshipmethod();
				break;
			case 114:
				return $this->getPremiumshiptrackingnumber();
				break;
			case 115:
				return $this->getId();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = RpMemberApplicationPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getApplicationid(),
			$keys[1] => $this->getApplicationdate(),
			$keys[2] => $this->getTitle(),
			$keys[3] => $this->getFirstname(),
			$keys[4] => $this->getLastname(),
			$keys[5] => $this->getAddressone(),
			$keys[6] => $this->getAddresstwo(),
			$keys[7] => $this->getCity(),
			$keys[8] => $this->getState(),
			$keys[9] => $this->getZipcode(),
			$keys[10] => $this->getDayphone(),
			$keys[11] => $this->getPilotdaycomment(),
			$keys[12] => $this->getEvephone(),
			$keys[13] => $this->getPilotevecomment(),
			$keys[14] => $this->getFaxphone1(),
			$keys[15] => $this->getPilotfaxcomment(),
			$keys[16] => $this->getFaxphone2(),
			$keys[17] => $this->getPilotfaxcomment2(),
			$keys[18] => $this->getMobilephone(),
			$keys[19] => $this->getPilotmobilecomment(),
			$keys[20] => $this->getPagerphone(),
			$keys[21] => $this->getPilotpagercomment(),
			$keys[22] => $this->getOtherphone(),
			$keys[23] => $this->getPilotothercomment(),
			$keys[24] => $this->getEmail(),
			$keys[25] => $this->getPageemail(),
			$keys[26] => $this->getSecondaryemail(),
			$keys[27] => $this->getSpousefirstname(),
			$keys[28] => $this->getSpouselastname(),
			$keys[29] => $this->getApplicantpilot(),
			$keys[30] => $this->getSpousepilot(),
			$keys[31] => $this->getApplicantcopilot(),
			$keys[32] => $this->getLanguagesspoken(),
			$keys[33] => $this->getHomebase(),
			$keys[34] => $this->getFboname(),
			$keys[35] => $this->getApmake(),
			$keys[36] => $this->getApmodel(),
			$keys[37] => $this->getAircraftprimaryown(),
			$keys[38] => $this->getAircraftprimaryice(),
			$keys[39] => $this->getAircraftprimaryseats(),
			$keys[40] => $this->getAircraftprimarynnumber(),
			$keys[41] => $this->getAsmake(),
			$keys[42] => $this->getAsmodel(),
			$keys[43] => $this->getAircraftsecondaryown(),
			$keys[44] => $this->getAircraftsecondaryice(),
			$keys[45] => $this->getAircraftsecondaryseats(),
			$keys[46] => $this->getAircraftsecondarynnumber(),
			$keys[47] => $this->getPilotcertificate(),
			$keys[48] => $this->getRatings(),
			$keys[49] => $this->getMedicalclass(),
			$keys[50] => $this->getLicensetype(),
			$keys[51] => $this->getTotalhours(),
			$keys[52] => $this->getIfrhours(),
			$keys[53] => $this->getMultihours(),
			$keys[54] => $this->getOtherhours(),
			$keys[55] => $this->getDateofbirth(),
			$keys[56] => $this->getHeight(),
			$keys[57] => $this->getWeight(),
			$keys[58] => $this->getAvailabilityweekdays(),
			$keys[59] => $this->getAvailabilityweeknights(),
			$keys[60] => $this->getAvailabilityweekends(),
			$keys[61] => $this->getAvailabilitynotice(),
			$keys[62] => $this->getAvailabilitylastminute(),
			$keys[63] => $this->getAvailabilitycopilot(),
			$keys[64] => $this->getAffirmationagreed(),
			$keys[65] => $this->getInsuranceagreed(),
			$keys[66] => $this->getHseatsinterest(),
			$keys[67] => $this->getVolunteerinterest(),
			$keys[68] => $this->getCompanyposition(),
			$keys[69] => $this->getCompanymatchfunds(),
			$keys[70] => $this->getCompanybusinesscategoryid(),
			$keys[71] => $this->getReferralsource(),
			$keys[72] => $this->getReferralsourceother(),
			$keys[73] => $this->getPremiumchoice(),
			$keys[74] => $this->getPremiumsize(),
			$keys[75] => $this->getDuesamountpaid(),
			$keys[76] => $this->getDonationamountpaid(),
			$keys[77] => $this->getMethodofpaymentid(),
			$keys[78] => $this->getCcardapprovalnumber(),
			$keys[79] => $this->getProcesseddate(),
			$keys[80] => $this->getMissionorientation(),
			$keys[81] => $this->getMissioncoordination(),
			$keys[82] => $this->getPilotrecruitment(),
			$keys[83] => $this->getFundraising(),
			$keys[84] => $this->getCelebritycontacts(),
			$keys[85] => $this->getHospitaloutreach(),
			$keys[86] => $this->getMediarelations(),
			$keys[87] => $this->getTelephonework(),
			$keys[88] => $this->getComputers(),
			$keys[89] => $this->getClerical(),
			$keys[90] => $this->getPublicity(),
			$keys[91] => $this->getWriting(),
			$keys[92] => $this->getSpeakersbureau(),
			$keys[93] => $this->getWingteam(),
			$keys[94] => $this->getGraphicarts(),
			$keys[95] => $this->getEventplanning(),
			$keys[96] => $this->getWebinternet(),
			$keys[97] => $this->getFoundationcontacts(),
			$keys[98] => $this->getAviationcontacts(),
			$keys[99] => $this->getPrinting(),
			$keys[100] => $this->getMemberaopa(),
			$keys[101] => $this->getMemberkiwanis(),
			$keys[102] => $this->getMemberrotary(),
			$keys[103] => $this->getMemberlions(),
			$keys[104] => $this->getMemberninetynines(),
			$keys[105] => $this->getMemberwia(),
			$keys[106] => $this->getEdnewmembernotify(),
			$keys[107] => $this->getWnewmembernotify(),
			$keys[108] => $this->getBadgemade(),
			$keys[109] => $this->getNotebooksent(),
			$keys[110] => $this->getExternalid(),
			$keys[111] => $this->getNovapointeid(),
			$keys[112] => $this->getPremiumshipdate(),
			$keys[113] => $this->getPremiumshipmethod(),
			$keys[114] => $this->getPremiumshiptrackingnumber(),
			$keys[115] => $this->getId(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = RpMemberApplicationPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setApplicationid($value);
				break;
			case 1:
				$this->setApplicationdate($value);
				break;
			case 2:
				$this->setTitle($value);
				break;
			case 3:
				$this->setFirstname($value);
				break;
			case 4:
				$this->setLastname($value);
				break;
			case 5:
				$this->setAddressone($value);
				break;
			case 6:
				$this->setAddresstwo($value);
				break;
			case 7:
				$this->setCity($value);
				break;
			case 8:
				$this->setState($value);
				break;
			case 9:
				$this->setZipcode($value);
				break;
			case 10:
				$this->setDayphone($value);
				break;
			case 11:
				$this->setPilotdaycomment($value);
				break;
			case 12:
				$this->setEvephone($value);
				break;
			case 13:
				$this->setPilotevecomment($value);
				break;
			case 14:
				$this->setFaxphone1($value);
				break;
			case 15:
				$this->setPilotfaxcomment($value);
				break;
			case 16:
				$this->setFaxphone2($value);
				break;
			case 17:
				$this->setPilotfaxcomment2($value);
				break;
			case 18:
				$this->setMobilephone($value);
				break;
			case 19:
				$this->setPilotmobilecomment($value);
				break;
			case 20:
				$this->setPagerphone($value);
				break;
			case 21:
				$this->setPilotpagercomment($value);
				break;
			case 22:
				$this->setOtherphone($value);
				break;
			case 23:
				$this->setPilotothercomment($value);
				break;
			case 24:
				$this->setEmail($value);
				break;
			case 25:
				$this->setPageemail($value);
				break;
			case 26:
				$this->setSecondaryemail($value);
				break;
			case 27:
				$this->setSpousefirstname($value);
				break;
			case 28:
				$this->setSpouselastname($value);
				break;
			case 29:
				$this->setApplicantpilot($value);
				break;
			case 30:
				$this->setSpousepilot($value);
				break;
			case 31:
				$this->setApplicantcopilot($value);
				break;
			case 32:
				$this->setLanguagesspoken($value);
				break;
			case 33:
				$this->setHomebase($value);
				break;
			case 34:
				$this->setFboname($value);
				break;
			case 35:
				$this->setApmake($value);
				break;
			case 36:
				$this->setApmodel($value);
				break;
			case 37:
				$this->setAircraftprimaryown($value);
				break;
			case 38:
				$this->setAircraftprimaryice($value);
				break;
			case 39:
				$this->setAircraftprimaryseats($value);
				break;
			case 40:
				$this->setAircraftprimarynnumber($value);
				break;
			case 41:
				$this->setAsmake($value);
				break;
			case 42:
				$this->setAsmodel($value);
				break;
			case 43:
				$this->setAircraftsecondaryown($value);
				break;
			case 44:
				$this->setAircraftsecondaryice($value);
				break;
			case 45:
				$this->setAircraftsecondaryseats($value);
				break;
			case 46:
				$this->setAircraftsecondarynnumber($value);
				break;
			case 47:
				$this->setPilotcertificate($value);
				break;
			case 48:
				$this->setRatings($value);
				break;
			case 49:
				$this->setMedicalclass($value);
				break;
			case 50:
				$this->setLicensetype($value);
				break;
			case 51:
				$this->setTotalhours($value);
				break;
			case 52:
				$this->setIfrhours($value);
				break;
			case 53:
				$this->setMultihours($value);
				break;
			case 54:
				$this->setOtherhours($value);
				break;
			case 55:
				$this->setDateofbirth($value);
				break;
			case 56:
				$this->setHeight($value);
				break;
			case 57:
				$this->setWeight($value);
				break;
			case 58:
				$this->setAvailabilityweekdays($value);
				break;
			case 59:
				$this->setAvailabilityweeknights($value);
				break;
			case 60:
				$this->setAvailabilityweekends($value);
				break;
			case 61:
				$this->setAvailabilitynotice($value);
				break;
			case 62:
				$this->setAvailabilitylastminute($value);
				break;
			case 63:
				$this->setAvailabilitycopilot($value);
				break;
			case 64:
				$this->setAffirmationagreed($value);
				break;
			case 65:
				$this->setInsuranceagreed($value);
				break;
			case 66:
				$this->setHseatsinterest($value);
				break;
			case 67:
				$this->setVolunteerinterest($value);
				break;
			case 68:
				$this->setCompanyposition($value);
				break;
			case 69:
				$this->setCompanymatchfunds($value);
				break;
			case 70:
				$this->setCompanybusinesscategoryid($value);
				break;
			case 71:
				$this->setReferralsource($value);
				break;
			case 72:
				$this->setReferralsourceother($value);
				break;
			case 73:
				$this->setPremiumchoice($value);
				break;
			case 74:
				$this->setPremiumsize($value);
				break;
			case 75:
				$this->setDuesamountpaid($value);
				break;
			case 76:
				$this->setDonationamountpaid($value);
				break;
			case 77:
				$this->setMethodofpaymentid($value);
				break;
			case 78:
				$this->setCcardapprovalnumber($value);
				break;
			case 79:
				$this->setProcesseddate($value);
				break;
			case 80:
				$this->setMissionorientation($value);
				break;
			case 81:
				$this->setMissioncoordination($value);
				break;
			case 82:
				$this->setPilotrecruitment($value);
				break;
			case 83:
				$this->setFundraising($value);
				break;
			case 84:
				$this->setCelebritycontacts($value);
				break;
			case 85:
				$this->setHospitaloutreach($value);
				break;
			case 86:
				$this->setMediarelations($value);
				break;
			case 87:
				$this->setTelephonework($value);
				break;
			case 88:
				$this->setComputers($value);
				break;
			case 89:
				$this->setClerical($value);
				break;
			case 90:
				$this->setPublicity($value);
				break;
			case 91:
				$this->setWriting($value);
				break;
			case 92:
				$this->setSpeakersbureau($value);
				break;
			case 93:
				$this->setWingteam($value);
				break;
			case 94:
				$this->setGraphicarts($value);
				break;
			case 95:
				$this->setEventplanning($value);
				break;
			case 96:
				$this->setWebinternet($value);
				break;
			case 97:
				$this->setFoundationcontacts($value);
				break;
			case 98:
				$this->setAviationcontacts($value);
				break;
			case 99:
				$this->setPrinting($value);
				break;
			case 100:
				$this->setMemberaopa($value);
				break;
			case 101:
				$this->setMemberkiwanis($value);
				break;
			case 102:
				$this->setMemberrotary($value);
				break;
			case 103:
				$this->setMemberlions($value);
				break;
			case 104:
				$this->setMemberninetynines($value);
				break;
			case 105:
				$this->setMemberwia($value);
				break;
			case 106:
				$this->setEdnewmembernotify($value);
				break;
			case 107:
				$this->setWnewmembernotify($value);
				break;
			case 108:
				$this->setBadgemade($value);
				break;
			case 109:
				$this->setNotebooksent($value);
				break;
			case 110:
				$this->setExternalid($value);
				break;
			case 111:
				$this->setNovapointeid($value);
				break;
			case 112:
				$this->setPremiumshipdate($value);
				break;
			case 113:
				$this->setPremiumshipmethod($value);
				break;
			case 114:
				$this->setPremiumshiptrackingnumber($value);
				break;
			case 115:
				$this->setId($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = RpMemberApplicationPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setApplicationid($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setApplicationdate($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setTitle($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setFirstname($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setLastname($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setAddressone($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setAddresstwo($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setCity($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setState($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setZipcode($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setDayphone($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setPilotdaycomment($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setEvephone($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setPilotevecomment($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setFaxphone1($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setPilotfaxcomment($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setFaxphone2($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setPilotfaxcomment2($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setMobilephone($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setPilotmobilecomment($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setPagerphone($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setPilotpagercomment($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setOtherphone($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setPilotothercomment($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setEmail($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setPageemail($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setSecondaryemail($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setSpousefirstname($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setSpouselastname($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setApplicantpilot($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setSpousepilot($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setApplicantcopilot($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setLanguagesspoken($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setHomebase($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setFboname($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setApmake($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setApmodel($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setAircraftprimaryown($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setAircraftprimaryice($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setAircraftprimaryseats($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setAircraftprimarynnumber($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setAsmake($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setAsmodel($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setAircraftsecondaryown($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setAircraftsecondaryice($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setAircraftsecondaryseats($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setAircraftsecondarynnumber($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setPilotcertificate($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setRatings($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setMedicalclass($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setLicensetype($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setTotalhours($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setIfrhours($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setMultihours($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setOtherhours($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setDateofbirth($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setHeight($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setWeight($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setAvailabilityweekdays($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setAvailabilityweeknights($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setAvailabilityweekends($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setAvailabilitynotice($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setAvailabilitylastminute($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setAvailabilitycopilot($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setAffirmationagreed($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setInsuranceagreed($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setHseatsinterest($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setVolunteerinterest($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setCompanyposition($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setCompanymatchfunds($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setCompanybusinesscategoryid($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setReferralsource($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setReferralsourceother($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setPremiumchoice($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setPremiumsize($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setDuesamountpaid($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setDonationamountpaid($arr[$keys[76]]);
		if (array_key_exists($keys[77], $arr)) $this->setMethodofpaymentid($arr[$keys[77]]);
		if (array_key_exists($keys[78], $arr)) $this->setCcardapprovalnumber($arr[$keys[78]]);
		if (array_key_exists($keys[79], $arr)) $this->setProcesseddate($arr[$keys[79]]);
		if (array_key_exists($keys[80], $arr)) $this->setMissionorientation($arr[$keys[80]]);
		if (array_key_exists($keys[81], $arr)) $this->setMissioncoordination($arr[$keys[81]]);
		if (array_key_exists($keys[82], $arr)) $this->setPilotrecruitment($arr[$keys[82]]);
		if (array_key_exists($keys[83], $arr)) $this->setFundraising($arr[$keys[83]]);
		if (array_key_exists($keys[84], $arr)) $this->setCelebritycontacts($arr[$keys[84]]);
		if (array_key_exists($keys[85], $arr)) $this->setHospitaloutreach($arr[$keys[85]]);
		if (array_key_exists($keys[86], $arr)) $this->setMediarelations($arr[$keys[86]]);
		if (array_key_exists($keys[87], $arr)) $this->setTelephonework($arr[$keys[87]]);
		if (array_key_exists($keys[88], $arr)) $this->setComputers($arr[$keys[88]]);
		if (array_key_exists($keys[89], $arr)) $this->setClerical($arr[$keys[89]]);
		if (array_key_exists($keys[90], $arr)) $this->setPublicity($arr[$keys[90]]);
		if (array_key_exists($keys[91], $arr)) $this->setWriting($arr[$keys[91]]);
		if (array_key_exists($keys[92], $arr)) $this->setSpeakersbureau($arr[$keys[92]]);
		if (array_key_exists($keys[93], $arr)) $this->setWingteam($arr[$keys[93]]);
		if (array_key_exists($keys[94], $arr)) $this->setGraphicarts($arr[$keys[94]]);
		if (array_key_exists($keys[95], $arr)) $this->setEventplanning($arr[$keys[95]]);
		if (array_key_exists($keys[96], $arr)) $this->setWebinternet($arr[$keys[96]]);
		if (array_key_exists($keys[97], $arr)) $this->setFoundationcontacts($arr[$keys[97]]);
		if (array_key_exists($keys[98], $arr)) $this->setAviationcontacts($arr[$keys[98]]);
		if (array_key_exists($keys[99], $arr)) $this->setPrinting($arr[$keys[99]]);
		if (array_key_exists($keys[100], $arr)) $this->setMemberaopa($arr[$keys[100]]);
		if (array_key_exists($keys[101], $arr)) $this->setMemberkiwanis($arr[$keys[101]]);
		if (array_key_exists($keys[102], $arr)) $this->setMemberrotary($arr[$keys[102]]);
		if (array_key_exists($keys[103], $arr)) $this->setMemberlions($arr[$keys[103]]);
		if (array_key_exists($keys[104], $arr)) $this->setMemberninetynines($arr[$keys[104]]);
		if (array_key_exists($keys[105], $arr)) $this->setMemberwia($arr[$keys[105]]);
		if (array_key_exists($keys[106], $arr)) $this->setEdnewmembernotify($arr[$keys[106]]);
		if (array_key_exists($keys[107], $arr)) $this->setWnewmembernotify($arr[$keys[107]]);
		if (array_key_exists($keys[108], $arr)) $this->setBadgemade($arr[$keys[108]]);
		if (array_key_exists($keys[109], $arr)) $this->setNotebooksent($arr[$keys[109]]);
		if (array_key_exists($keys[110], $arr)) $this->setExternalid($arr[$keys[110]]);
		if (array_key_exists($keys[111], $arr)) $this->setNovapointeid($arr[$keys[111]]);
		if (array_key_exists($keys[112], $arr)) $this->setPremiumshipdate($arr[$keys[112]]);
		if (array_key_exists($keys[113], $arr)) $this->setPremiumshipmethod($arr[$keys[113]]);
		if (array_key_exists($keys[114], $arr)) $this->setPremiumshiptrackingnumber($arr[$keys[114]]);
		if (array_key_exists($keys[115], $arr)) $this->setId($arr[$keys[115]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(RpMemberApplicationPeer::DATABASE_NAME);

		if ($this->isColumnModified(RpMemberApplicationPeer::APPLICATIONID)) $criteria->add(RpMemberApplicationPeer::APPLICATIONID, $this->applicationid);
		if ($this->isColumnModified(RpMemberApplicationPeer::APPLICATIONDATE)) $criteria->add(RpMemberApplicationPeer::APPLICATIONDATE, $this->applicationdate);
		if ($this->isColumnModified(RpMemberApplicationPeer::TITLE)) $criteria->add(RpMemberApplicationPeer::TITLE, $this->title);
		if ($this->isColumnModified(RpMemberApplicationPeer::FIRSTNAME)) $criteria->add(RpMemberApplicationPeer::FIRSTNAME, $this->firstname);
		if ($this->isColumnModified(RpMemberApplicationPeer::LASTNAME)) $criteria->add(RpMemberApplicationPeer::LASTNAME, $this->lastname);
		if ($this->isColumnModified(RpMemberApplicationPeer::ADDRESSONE)) $criteria->add(RpMemberApplicationPeer::ADDRESSONE, $this->addressone);
		if ($this->isColumnModified(RpMemberApplicationPeer::ADDRESSTWO)) $criteria->add(RpMemberApplicationPeer::ADDRESSTWO, $this->addresstwo);
		if ($this->isColumnModified(RpMemberApplicationPeer::CITY)) $criteria->add(RpMemberApplicationPeer::CITY, $this->city);
		if ($this->isColumnModified(RpMemberApplicationPeer::STATE)) $criteria->add(RpMemberApplicationPeer::STATE, $this->state);
		if ($this->isColumnModified(RpMemberApplicationPeer::ZIPCODE)) $criteria->add(RpMemberApplicationPeer::ZIPCODE, $this->zipcode);
		if ($this->isColumnModified(RpMemberApplicationPeer::DAYPHONE)) $criteria->add(RpMemberApplicationPeer::DAYPHONE, $this->dayphone);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTDAYCOMMENT)) $criteria->add(RpMemberApplicationPeer::PILOTDAYCOMMENT, $this->pilotdaycomment);
		if ($this->isColumnModified(RpMemberApplicationPeer::EVEPHONE)) $criteria->add(RpMemberApplicationPeer::EVEPHONE, $this->evephone);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTEVECOMMENT)) $criteria->add(RpMemberApplicationPeer::PILOTEVECOMMENT, $this->pilotevecomment);
		if ($this->isColumnModified(RpMemberApplicationPeer::FAXPHONE1)) $criteria->add(RpMemberApplicationPeer::FAXPHONE1, $this->faxphone1);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTFAXCOMMENT)) $criteria->add(RpMemberApplicationPeer::PILOTFAXCOMMENT, $this->pilotfaxcomment);
		if ($this->isColumnModified(RpMemberApplicationPeer::FAXPHONE2)) $criteria->add(RpMemberApplicationPeer::FAXPHONE2, $this->faxphone2);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTFAXCOMMENT2)) $criteria->add(RpMemberApplicationPeer::PILOTFAXCOMMENT2, $this->pilotfaxcomment2);
		if ($this->isColumnModified(RpMemberApplicationPeer::MOBILEPHONE)) $criteria->add(RpMemberApplicationPeer::MOBILEPHONE, $this->mobilephone);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTMOBILECOMMENT)) $criteria->add(RpMemberApplicationPeer::PILOTMOBILECOMMENT, $this->pilotmobilecomment);
		if ($this->isColumnModified(RpMemberApplicationPeer::PAGERPHONE)) $criteria->add(RpMemberApplicationPeer::PAGERPHONE, $this->pagerphone);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTPAGERCOMMENT)) $criteria->add(RpMemberApplicationPeer::PILOTPAGERCOMMENT, $this->pilotpagercomment);
		if ($this->isColumnModified(RpMemberApplicationPeer::OTHERPHONE)) $criteria->add(RpMemberApplicationPeer::OTHERPHONE, $this->otherphone);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTOTHERCOMMENT)) $criteria->add(RpMemberApplicationPeer::PILOTOTHERCOMMENT, $this->pilotothercomment);
		if ($this->isColumnModified(RpMemberApplicationPeer::EMAIL)) $criteria->add(RpMemberApplicationPeer::EMAIL, $this->email);
		if ($this->isColumnModified(RpMemberApplicationPeer::PAGEEMAIL)) $criteria->add(RpMemberApplicationPeer::PAGEEMAIL, $this->pageemail);
		if ($this->isColumnModified(RpMemberApplicationPeer::SECONDARYEMAIL)) $criteria->add(RpMemberApplicationPeer::SECONDARYEMAIL, $this->secondaryemail);
		if ($this->isColumnModified(RpMemberApplicationPeer::SPOUSEFIRSTNAME)) $criteria->add(RpMemberApplicationPeer::SPOUSEFIRSTNAME, $this->spousefirstname);
		if ($this->isColumnModified(RpMemberApplicationPeer::SPOUSELASTNAME)) $criteria->add(RpMemberApplicationPeer::SPOUSELASTNAME, $this->spouselastname);
		if ($this->isColumnModified(RpMemberApplicationPeer::APPLICANTPILOT)) $criteria->add(RpMemberApplicationPeer::APPLICANTPILOT, $this->applicantpilot);
		if ($this->isColumnModified(RpMemberApplicationPeer::SPOUSEPILOT)) $criteria->add(RpMemberApplicationPeer::SPOUSEPILOT, $this->spousepilot);
		if ($this->isColumnModified(RpMemberApplicationPeer::APPLICANTCOPILOT)) $criteria->add(RpMemberApplicationPeer::APPLICANTCOPILOT, $this->applicantcopilot);
		if ($this->isColumnModified(RpMemberApplicationPeer::LANGUAGESSPOKEN)) $criteria->add(RpMemberApplicationPeer::LANGUAGESSPOKEN, $this->languagesspoken);
		if ($this->isColumnModified(RpMemberApplicationPeer::HOMEBASE)) $criteria->add(RpMemberApplicationPeer::HOMEBASE, $this->homebase);
		if ($this->isColumnModified(RpMemberApplicationPeer::FBONAME)) $criteria->add(RpMemberApplicationPeer::FBONAME, $this->fboname);
		if ($this->isColumnModified(RpMemberApplicationPeer::APMAKE)) $criteria->add(RpMemberApplicationPeer::APMAKE, $this->apmake);
		if ($this->isColumnModified(RpMemberApplicationPeer::APMODEL)) $criteria->add(RpMemberApplicationPeer::APMODEL, $this->apmodel);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTPRIMARYOWN)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTPRIMARYOWN, $this->aircraftprimaryown);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTPRIMARYICE)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTPRIMARYICE, $this->aircraftprimaryice);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTPRIMARYSEATS)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTPRIMARYSEATS, $this->aircraftprimaryseats);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTPRIMARYNNUMBER)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTPRIMARYNNUMBER, $this->aircraftprimarynnumber);
		if ($this->isColumnModified(RpMemberApplicationPeer::ASMAKE)) $criteria->add(RpMemberApplicationPeer::ASMAKE, $this->asmake);
		if ($this->isColumnModified(RpMemberApplicationPeer::ASMODEL)) $criteria->add(RpMemberApplicationPeer::ASMODEL, $this->asmodel);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTSECONDARYOWN)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTSECONDARYOWN, $this->aircraftsecondaryown);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTSECONDARYICE)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTSECONDARYICE, $this->aircraftsecondaryice);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTSECONDARYSEATS)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTSECONDARYSEATS, $this->aircraftsecondaryseats);
		if ($this->isColumnModified(RpMemberApplicationPeer::AIRCRAFTSECONDARYNNUMBER)) $criteria->add(RpMemberApplicationPeer::AIRCRAFTSECONDARYNNUMBER, $this->aircraftsecondarynnumber);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTCERTIFICATE)) $criteria->add(RpMemberApplicationPeer::PILOTCERTIFICATE, $this->pilotcertificate);
		if ($this->isColumnModified(RpMemberApplicationPeer::RATINGS)) $criteria->add(RpMemberApplicationPeer::RATINGS, $this->ratings);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEDICALCLASS)) $criteria->add(RpMemberApplicationPeer::MEDICALCLASS, $this->medicalclass);
		if ($this->isColumnModified(RpMemberApplicationPeer::LICENSETYPE)) $criteria->add(RpMemberApplicationPeer::LICENSETYPE, $this->licensetype);
		if ($this->isColumnModified(RpMemberApplicationPeer::TOTALHOURS)) $criteria->add(RpMemberApplicationPeer::TOTALHOURS, $this->totalhours);
		if ($this->isColumnModified(RpMemberApplicationPeer::IFRHOURS)) $criteria->add(RpMemberApplicationPeer::IFRHOURS, $this->ifrhours);
		if ($this->isColumnModified(RpMemberApplicationPeer::MULTIHOURS)) $criteria->add(RpMemberApplicationPeer::MULTIHOURS, $this->multihours);
		if ($this->isColumnModified(RpMemberApplicationPeer::OTHERHOURS)) $criteria->add(RpMemberApplicationPeer::OTHERHOURS, $this->otherhours);
		if ($this->isColumnModified(RpMemberApplicationPeer::DATEOFBIRTH)) $criteria->add(RpMemberApplicationPeer::DATEOFBIRTH, $this->dateofbirth);
		if ($this->isColumnModified(RpMemberApplicationPeer::HEIGHT)) $criteria->add(RpMemberApplicationPeer::HEIGHT, $this->height);
		if ($this->isColumnModified(RpMemberApplicationPeer::WEIGHT)) $criteria->add(RpMemberApplicationPeer::WEIGHT, $this->weight);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVAILABILITYWEEKDAYS)) $criteria->add(RpMemberApplicationPeer::AVAILABILITYWEEKDAYS, $this->availabilityweekdays);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVAILABILITYWEEKNIGHTS)) $criteria->add(RpMemberApplicationPeer::AVAILABILITYWEEKNIGHTS, $this->availabilityweeknights);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVAILABILITYWEEKENDS)) $criteria->add(RpMemberApplicationPeer::AVAILABILITYWEEKENDS, $this->availabilityweekends);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVAILABILITYNOTICE)) $criteria->add(RpMemberApplicationPeer::AVAILABILITYNOTICE, $this->availabilitynotice);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVAILABILITYLASTMINUTE)) $criteria->add(RpMemberApplicationPeer::AVAILABILITYLASTMINUTE, $this->availabilitylastminute);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVAILABILITYCOPILOT)) $criteria->add(RpMemberApplicationPeer::AVAILABILITYCOPILOT, $this->availabilitycopilot);
		if ($this->isColumnModified(RpMemberApplicationPeer::AFFIRMATIONAGREED)) $criteria->add(RpMemberApplicationPeer::AFFIRMATIONAGREED, $this->affirmationagreed);
		if ($this->isColumnModified(RpMemberApplicationPeer::INSURANCEAGREED)) $criteria->add(RpMemberApplicationPeer::INSURANCEAGREED, $this->insuranceagreed);
		if ($this->isColumnModified(RpMemberApplicationPeer::HSEATSINTEREST)) $criteria->add(RpMemberApplicationPeer::HSEATSINTEREST, $this->hseatsinterest);
		if ($this->isColumnModified(RpMemberApplicationPeer::VOLUNTEERINTEREST)) $criteria->add(RpMemberApplicationPeer::VOLUNTEERINTEREST, $this->volunteerinterest);
		if ($this->isColumnModified(RpMemberApplicationPeer::COMPANYPOSITION)) $criteria->add(RpMemberApplicationPeer::COMPANYPOSITION, $this->companyposition);
		if ($this->isColumnModified(RpMemberApplicationPeer::COMPANYMATCHFUNDS)) $criteria->add(RpMemberApplicationPeer::COMPANYMATCHFUNDS, $this->companymatchfunds);
		if ($this->isColumnModified(RpMemberApplicationPeer::COMPANYBUSINESSCATEGORYID)) $criteria->add(RpMemberApplicationPeer::COMPANYBUSINESSCATEGORYID, $this->companybusinesscategoryid);
		if ($this->isColumnModified(RpMemberApplicationPeer::REFERRALSOURCE)) $criteria->add(RpMemberApplicationPeer::REFERRALSOURCE, $this->referralsource);
		if ($this->isColumnModified(RpMemberApplicationPeer::REFERRALSOURCEOTHER)) $criteria->add(RpMemberApplicationPeer::REFERRALSOURCEOTHER, $this->referralsourceother);
		if ($this->isColumnModified(RpMemberApplicationPeer::PREMIUMCHOICE)) $criteria->add(RpMemberApplicationPeer::PREMIUMCHOICE, $this->premiumchoice);
		if ($this->isColumnModified(RpMemberApplicationPeer::PREMIUMSIZE)) $criteria->add(RpMemberApplicationPeer::PREMIUMSIZE, $this->premiumsize);
		if ($this->isColumnModified(RpMemberApplicationPeer::DUESAMOUNTPAID)) $criteria->add(RpMemberApplicationPeer::DUESAMOUNTPAID, $this->duesamountpaid);
		if ($this->isColumnModified(RpMemberApplicationPeer::DONATIONAMOUNTPAID)) $criteria->add(RpMemberApplicationPeer::DONATIONAMOUNTPAID, $this->donationamountpaid);
		if ($this->isColumnModified(RpMemberApplicationPeer::METHODOFPAYMENTID)) $criteria->add(RpMemberApplicationPeer::METHODOFPAYMENTID, $this->methodofpaymentid);
		if ($this->isColumnModified(RpMemberApplicationPeer::CCARDAPPROVALNUMBER)) $criteria->add(RpMemberApplicationPeer::CCARDAPPROVALNUMBER, $this->ccardapprovalnumber);
		if ($this->isColumnModified(RpMemberApplicationPeer::PROCESSEDDATE)) $criteria->add(RpMemberApplicationPeer::PROCESSEDDATE, $this->processeddate);
		if ($this->isColumnModified(RpMemberApplicationPeer::MISSIONORIENTATION)) $criteria->add(RpMemberApplicationPeer::MISSIONORIENTATION, $this->missionorientation);
		if ($this->isColumnModified(RpMemberApplicationPeer::MISSIONCOORDINATION)) $criteria->add(RpMemberApplicationPeer::MISSIONCOORDINATION, $this->missioncoordination);
		if ($this->isColumnModified(RpMemberApplicationPeer::PILOTRECRUITMENT)) $criteria->add(RpMemberApplicationPeer::PILOTRECRUITMENT, $this->pilotrecruitment);
		if ($this->isColumnModified(RpMemberApplicationPeer::FUNDRAISING)) $criteria->add(RpMemberApplicationPeer::FUNDRAISING, $this->fundraising);
		if ($this->isColumnModified(RpMemberApplicationPeer::CELEBRITYCONTACTS)) $criteria->add(RpMemberApplicationPeer::CELEBRITYCONTACTS, $this->celebritycontacts);
		if ($this->isColumnModified(RpMemberApplicationPeer::HOSPITALOUTREACH)) $criteria->add(RpMemberApplicationPeer::HOSPITALOUTREACH, $this->hospitaloutreach);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEDIARELATIONS)) $criteria->add(RpMemberApplicationPeer::MEDIARELATIONS, $this->mediarelations);
		if ($this->isColumnModified(RpMemberApplicationPeer::TELEPHONEWORK)) $criteria->add(RpMemberApplicationPeer::TELEPHONEWORK, $this->telephonework);
		if ($this->isColumnModified(RpMemberApplicationPeer::COMPUTERS)) $criteria->add(RpMemberApplicationPeer::COMPUTERS, $this->computers);
		if ($this->isColumnModified(RpMemberApplicationPeer::CLERICAL)) $criteria->add(RpMemberApplicationPeer::CLERICAL, $this->clerical);
		if ($this->isColumnModified(RpMemberApplicationPeer::PUBLICITY)) $criteria->add(RpMemberApplicationPeer::PUBLICITY, $this->publicity);
		if ($this->isColumnModified(RpMemberApplicationPeer::WRITING)) $criteria->add(RpMemberApplicationPeer::WRITING, $this->writing);
		if ($this->isColumnModified(RpMemberApplicationPeer::SPEAKERSBUREAU)) $criteria->add(RpMemberApplicationPeer::SPEAKERSBUREAU, $this->speakersbureau);
		if ($this->isColumnModified(RpMemberApplicationPeer::WINGTEAM)) $criteria->add(RpMemberApplicationPeer::WINGTEAM, $this->wingteam);
		if ($this->isColumnModified(RpMemberApplicationPeer::GRAPHICARTS)) $criteria->add(RpMemberApplicationPeer::GRAPHICARTS, $this->graphicarts);
		if ($this->isColumnModified(RpMemberApplicationPeer::EVENTPLANNING)) $criteria->add(RpMemberApplicationPeer::EVENTPLANNING, $this->eventplanning);
		if ($this->isColumnModified(RpMemberApplicationPeer::WEBINTERNET)) $criteria->add(RpMemberApplicationPeer::WEBINTERNET, $this->webinternet);
		if ($this->isColumnModified(RpMemberApplicationPeer::FOUNDATIONCONTACTS)) $criteria->add(RpMemberApplicationPeer::FOUNDATIONCONTACTS, $this->foundationcontacts);
		if ($this->isColumnModified(RpMemberApplicationPeer::AVIATIONCONTACTS)) $criteria->add(RpMemberApplicationPeer::AVIATIONCONTACTS, $this->aviationcontacts);
		if ($this->isColumnModified(RpMemberApplicationPeer::PRINTING)) $criteria->add(RpMemberApplicationPeer::PRINTING, $this->printing);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEMBERAOPA)) $criteria->add(RpMemberApplicationPeer::MEMBERAOPA, $this->memberaopa);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEMBERKIWANIS)) $criteria->add(RpMemberApplicationPeer::MEMBERKIWANIS, $this->memberkiwanis);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEMBERROTARY)) $criteria->add(RpMemberApplicationPeer::MEMBERROTARY, $this->memberrotary);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEMBERLIONS)) $criteria->add(RpMemberApplicationPeer::MEMBERLIONS, $this->memberlions);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEMBERNINETYNINES)) $criteria->add(RpMemberApplicationPeer::MEMBERNINETYNINES, $this->memberninetynines);
		if ($this->isColumnModified(RpMemberApplicationPeer::MEMBERWIA)) $criteria->add(RpMemberApplicationPeer::MEMBERWIA, $this->memberwia);
		if ($this->isColumnModified(RpMemberApplicationPeer::EDNEWMEMBERNOTIFY)) $criteria->add(RpMemberApplicationPeer::EDNEWMEMBERNOTIFY, $this->ednewmembernotify);
		if ($this->isColumnModified(RpMemberApplicationPeer::WNEWMEMBERNOTIFY)) $criteria->add(RpMemberApplicationPeer::WNEWMEMBERNOTIFY, $this->wnewmembernotify);
		if ($this->isColumnModified(RpMemberApplicationPeer::BADGEMADE)) $criteria->add(RpMemberApplicationPeer::BADGEMADE, $this->badgemade);
		if ($this->isColumnModified(RpMemberApplicationPeer::NOTEBOOKSENT)) $criteria->add(RpMemberApplicationPeer::NOTEBOOKSENT, $this->notebooksent);
		if ($this->isColumnModified(RpMemberApplicationPeer::EXTERNALID)) $criteria->add(RpMemberApplicationPeer::EXTERNALID, $this->externalid);
		if ($this->isColumnModified(RpMemberApplicationPeer::NOVAPOINTEID)) $criteria->add(RpMemberApplicationPeer::NOVAPOINTEID, $this->novapointeid);
		if ($this->isColumnModified(RpMemberApplicationPeer::PREMIUMSHIPDATE)) $criteria->add(RpMemberApplicationPeer::PREMIUMSHIPDATE, $this->premiumshipdate);
		if ($this->isColumnModified(RpMemberApplicationPeer::PREMIUMSHIPMETHOD)) $criteria->add(RpMemberApplicationPeer::PREMIUMSHIPMETHOD, $this->premiumshipmethod);
		if ($this->isColumnModified(RpMemberApplicationPeer::PREMIUMSHIPTRACKINGNUMBER)) $criteria->add(RpMemberApplicationPeer::PREMIUMSHIPTRACKINGNUMBER, $this->premiumshiptrackingnumber);
		if ($this->isColumnModified(RpMemberApplicationPeer::ID)) $criteria->add(RpMemberApplicationPeer::ID, $this->id);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(RpMemberApplicationPeer::DATABASE_NAME);

		$criteria->add(RpMemberApplicationPeer::ID, $this->id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getId();
	}

	/**
	 * Generic method to set the primary key (id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of RpMemberApplication (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setApplicationid($this->applicationid);

		$copyObj->setApplicationdate($this->applicationdate);

		$copyObj->setTitle($this->title);

		$copyObj->setFirstname($this->firstname);

		$copyObj->setLastname($this->lastname);

		$copyObj->setAddressone($this->addressone);

		$copyObj->setAddresstwo($this->addresstwo);

		$copyObj->setCity($this->city);

		$copyObj->setState($this->state);

		$copyObj->setZipcode($this->zipcode);

		$copyObj->setDayphone($this->dayphone);

		$copyObj->setPilotdaycomment($this->pilotdaycomment);

		$copyObj->setEvephone($this->evephone);

		$copyObj->setPilotevecomment($this->pilotevecomment);

		$copyObj->setFaxphone1($this->faxphone1);

		$copyObj->setPilotfaxcomment($this->pilotfaxcomment);

		$copyObj->setFaxphone2($this->faxphone2);

		$copyObj->setPilotfaxcomment2($this->pilotfaxcomment2);

		$copyObj->setMobilephone($this->mobilephone);

		$copyObj->setPilotmobilecomment($this->pilotmobilecomment);

		$copyObj->setPagerphone($this->pagerphone);

		$copyObj->setPilotpagercomment($this->pilotpagercomment);

		$copyObj->setOtherphone($this->otherphone);

		$copyObj->setPilotothercomment($this->pilotothercomment);

		$copyObj->setEmail($this->email);

		$copyObj->setPageemail($this->pageemail);

		$copyObj->setSecondaryemail($this->secondaryemail);

		$copyObj->setSpousefirstname($this->spousefirstname);

		$copyObj->setSpouselastname($this->spouselastname);

		$copyObj->setApplicantpilot($this->applicantpilot);

		$copyObj->setSpousepilot($this->spousepilot);

		$copyObj->setApplicantcopilot($this->applicantcopilot);

		$copyObj->setLanguagesspoken($this->languagesspoken);

		$copyObj->setHomebase($this->homebase);

		$copyObj->setFboname($this->fboname);

		$copyObj->setApmake($this->apmake);

		$copyObj->setApmodel($this->apmodel);

		$copyObj->setAircraftprimaryown($this->aircraftprimaryown);

		$copyObj->setAircraftprimaryice($this->aircraftprimaryice);

		$copyObj->setAircraftprimaryseats($this->aircraftprimaryseats);

		$copyObj->setAircraftprimarynnumber($this->aircraftprimarynnumber);

		$copyObj->setAsmake($this->asmake);

		$copyObj->setAsmodel($this->asmodel);

		$copyObj->setAircraftsecondaryown($this->aircraftsecondaryown);

		$copyObj->setAircraftsecondaryice($this->aircraftsecondaryice);

		$copyObj->setAircraftsecondaryseats($this->aircraftsecondaryseats);

		$copyObj->setAircraftsecondarynnumber($this->aircraftsecondarynnumber);

		$copyObj->setPilotcertificate($this->pilotcertificate);

		$copyObj->setRatings($this->ratings);

		$copyObj->setMedicalclass($this->medicalclass);

		$copyObj->setLicensetype($this->licensetype);

		$copyObj->setTotalhours($this->totalhours);

		$copyObj->setIfrhours($this->ifrhours);

		$copyObj->setMultihours($this->multihours);

		$copyObj->setOtherhours($this->otherhours);

		$copyObj->setDateofbirth($this->dateofbirth);

		$copyObj->setHeight($this->height);

		$copyObj->setWeight($this->weight);

		$copyObj->setAvailabilityweekdays($this->availabilityweekdays);

		$copyObj->setAvailabilityweeknights($this->availabilityweeknights);

		$copyObj->setAvailabilityweekends($this->availabilityweekends);

		$copyObj->setAvailabilitynotice($this->availabilitynotice);

		$copyObj->setAvailabilitylastminute($this->availabilitylastminute);

		$copyObj->setAvailabilitycopilot($this->availabilitycopilot);

		$copyObj->setAffirmationagreed($this->affirmationagreed);

		$copyObj->setInsuranceagreed($this->insuranceagreed);

		$copyObj->setHseatsinterest($this->hseatsinterest);

		$copyObj->setVolunteerinterest($this->volunteerinterest);

		$copyObj->setCompanyposition($this->companyposition);

		$copyObj->setCompanymatchfunds($this->companymatchfunds);

		$copyObj->setCompanybusinesscategoryid($this->companybusinesscategoryid);

		$copyObj->setReferralsource($this->referralsource);

		$copyObj->setReferralsourceother($this->referralsourceother);

		$copyObj->setPremiumchoice($this->premiumchoice);

		$copyObj->setPremiumsize($this->premiumsize);

		$copyObj->setDuesamountpaid($this->duesamountpaid);

		$copyObj->setDonationamountpaid($this->donationamountpaid);

		$copyObj->setMethodofpaymentid($this->methodofpaymentid);

		$copyObj->setCcardapprovalnumber($this->ccardapprovalnumber);

		$copyObj->setProcesseddate($this->processeddate);

		$copyObj->setMissionorientation($this->missionorientation);

		$copyObj->setMissioncoordination($this->missioncoordination);

		$copyObj->setPilotrecruitment($this->pilotrecruitment);

		$copyObj->setFundraising($this->fundraising);

		$copyObj->setCelebritycontacts($this->celebritycontacts);

		$copyObj->setHospitaloutreach($this->hospitaloutreach);

		$copyObj->setMediarelations($this->mediarelations);

		$copyObj->setTelephonework($this->telephonework);

		$copyObj->setComputers($this->computers);

		$copyObj->setClerical($this->clerical);

		$copyObj->setPublicity($this->publicity);

		$copyObj->setWriting($this->writing);

		$copyObj->setSpeakersbureau($this->speakersbureau);

		$copyObj->setWingteam($this->wingteam);

		$copyObj->setGraphicarts($this->graphicarts);

		$copyObj->setEventplanning($this->eventplanning);

		$copyObj->setWebinternet($this->webinternet);

		$copyObj->setFoundationcontacts($this->foundationcontacts);

		$copyObj->setAviationcontacts($this->aviationcontacts);

		$copyObj->setPrinting($this->printing);

		$copyObj->setMemberaopa($this->memberaopa);

		$copyObj->setMemberkiwanis($this->memberkiwanis);

		$copyObj->setMemberrotary($this->memberrotary);

		$copyObj->setMemberlions($this->memberlions);

		$copyObj->setMemberninetynines($this->memberninetynines);

		$copyObj->setMemberwia($this->memberwia);

		$copyObj->setEdnewmembernotify($this->ednewmembernotify);

		$copyObj->setWnewmembernotify($this->wnewmembernotify);

		$copyObj->setBadgemade($this->badgemade);

		$copyObj->setNotebooksent($this->notebooksent);

		$copyObj->setExternalid($this->externalid);

		$copyObj->setNovapointeid($this->novapointeid);

		$copyObj->setPremiumshipdate($this->premiumshipdate);

		$copyObj->setPremiumshipmethod($this->premiumshipmethod);

		$copyObj->setPremiumshiptrackingnumber($this->premiumshiptrackingnumber);


		$copyObj->setNew(true);

		$copyObj->setId(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     RpMemberApplication Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     RpMemberApplicationPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new RpMemberApplicationPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseRpMemberApplication:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseRpMemberApplication::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseRpMemberApplication
