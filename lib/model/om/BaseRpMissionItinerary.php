<?php

/**
 * Base class that represents a row from the 'rp_mission_itinerary' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:32 2011
 *
 * @package    lib.model.om
 */
abstract class BaseRpMissionItinerary extends BaseObject  implements Persistent {


  const PEER = 'RpMissionItineraryPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        RpMissionItineraryPeer
	 */
	protected static $peer;

	/**
	 * The value for the now field.
	 * @var        string
	 */
	protected $now;

	/**
	 * The value for the missionid field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $missionid;

	/**
	 * The value for the externalid field.
	 * @var        int
	 */
	protected $externalid;

	/**
	 * The value for the missiontypeid field.
	 * @var        int
	 */
	protected $missiontypeid;

	/**
	 * The value for the missiondate field.
	 * @var        string
	 */
	protected $missiondate;

	/**
	 * The value for the apptdate field.
	 * @var        string
	 */
	protected $apptdate;

	/**
	 * The value for the flighttime field.
	 * @var        string
	 */
	protected $flighttime;

	/**
	 * The value for the releasingphysician field.
	 * @var        string
	 */
	protected $releasingphysician;

	/**
	 * The value for the releasingphone field.
	 * @var        string
	 */
	protected $releasingphone;

	/**
	 * The value for the releasingfax field.
	 * @var        int
	 */
	protected $releasingfax;

	/**
	 * The value for the releasingfaxcomment field.
	 * @var        string
	 */
	protected $releasingfaxcomment;

	/**
	 * The value for the releasingemail field.
	 * @var        string
	 */
	protected $releasingemail;

	/**
	 * The value for the lodging field.
	 * @var        string
	 */
	protected $lodging;

	/**
	 * The value for the lodgingphone field.
	 * @var        string
	 */
	protected $lodgingphone;

	/**
	 * The value for the lodging_phone_comment field.
	 * @var        string
	 */
	protected $lodging_phone_comment;

	/**
	 * The value for the facilityname field.
	 * @var        string
	 */
	protected $facilityname;

	/**
	 * The value for the facilityphone field.
	 * @var        string
	 */
	protected $facilityphone;

	/**
	 * The value for the facilityphonecomment field.
	 * @var        string
	 */
	protected $facilityphonecomment;

	/**
	 * The value for the publicconsiderations field.
	 * @var        string
	 */
	protected $publicconsiderations;

	/**
	 * The value for the privateconsiderations field.
	 * @var        string
	 */
	protected $privateconsiderations;

	/**
	 * The value for the illness field.
	 * @var        string
	 */
	protected $illness;

	/**
	 * The value for the groundtransportationcomment field.
	 * @var        string
	 */
	protected $groundtransportationcomment;

	/**
	 * The value for the treatingphysician field.
	 * @var        string
	 */
	protected $treatingphysician;

	/**
	 * The value for the treatingphone field.
	 * @var        int
	 */
	protected $treatingphone;

	/**
	 * The value for the treatingfax field.
	 * @var        string
	 */
	protected $treatingfax;

	/**
	 * The value for the treatingfaxcomment field.
	 * @var        string
	 */
	protected $treatingfaxcomment;

	/**
	 * The value for the treatingemail field.
	 * @var        string
	 */
	protected $treatingemail;

	/**
	 * The value for the languagespoken field.
	 * @var        string
	 */
	protected $languagespoken;

	/**
	 * The value for the bestcontactmethod field.
	 * @var        string
	 */
	protected $bestcontactmethod;

	/**
	 * The value for the emergencycontactname field.
	 * @var        string
	 */
	protected $emergencycontactname;

	/**
	 * The value for the emergencycontactprimaryphone field.
	 * @var        string
	 */
	protected $emergencycontactprimaryphone;

	/**
	 * The value for the emergencycontactsecondaryphone field.
	 * @var        string
	 */
	protected $emergencycontactsecondaryphone;

	/**
	 * The value for the emergencycontactprimarycomment field.
	 * @var        string
	 */
	protected $emergencycontactprimarycomment;

	/**
	 * The value for the emergencycontactsecondarycomment field.
	 * @var        string
	 */
	protected $emergencycontactsecondarycomment;

	/**
	 * The value for the passfirstname field.
	 * @var        string
	 */
	protected $passfirstname;

	/**
	 * The value for the passlastname field.
	 * @var        string
	 */
	protected $passlastname;

	/**
	 * The value for the passcity field.
	 * @var        string
	 */
	protected $passcity;

	/**
	 * The value for the passstate field.
	 * @var        string
	 */
	protected $passstate;

	/**
	 * The value for the passzipcode field.
	 * @var        string
	 */
	protected $passzipcode;

	/**
	 * The value for the passage field.
	 * @var        string
	 */
	protected $passage;

	/**
	 * The value for the passweight field.
	 * @var        int
	 */
	protected $passweight;

	/**
	 * The value for the passdayphone field.
	 * @var        string
	 */
	protected $passdayphone;

	/**
	 * The value for the passdaycomment field.
	 * @var        string
	 */
	protected $passdaycomment;

	/**
	 * The value for the passevephone field.
	 * @var        string
	 */
	protected $passevephone;

	/**
	 * The value for the passevecomment field.
	 * @var        string
	 */
	protected $passevecomment;

	/**
	 * The value for the passpagerphone field.
	 * @var        string
	 */
	protected $passpagerphone;

	/**
	 * The value for the passpagercomment field.
	 * @var        string
	 */
	protected $passpagercomment;

	/**
	 * The value for the passmobilephone field.
	 * @var        string
	 */
	protected $passmobilephone;

	/**
	 * The value for the passmobilecomment field.
	 * @var        string
	 */
	protected $passmobilecomment;

	/**
	 * The value for the passotherphone field.
	 * @var        string
	 */
	protected $passotherphone;

	/**
	 * The value for the passothercomment field.
	 * @var        string
	 */
	protected $passothercomment;

	/**
	 * The value for the passfaxphone1 field.
	 * @var        string
	 */
	protected $passfaxphone1;

	/**
	 * The value for the passfax1comment field.
	 * @var        string
	 */
	protected $passfax1comment;

	/**
	 * The value for the passemail field.
	 * @var        string
	 */
	protected $passemail;

	/**
	 * The value for the passaddressone field.
	 * @var        string
	 */
	protected $passaddressone;

	/**
	 * The value for the passaddresstwo field.
	 * @var        string
	 */
	protected $passaddresstwo;

	/**
	 * The value for the comment field.
	 * @var        string
	 */
	protected $comment;

	/**
	 * The value for the id field.
	 * @var        int
	 */
	protected $id;

	/**
	 * The value for the legnumber field.
	 * @var        int
	 */
	protected $legnumber;

	/**
	 * The value for the passonboard field.
	 * @var        int
	 */
	protected $passonboard;

	/**
	 * The value for the baggageweight field.
	 * @var        int
	 */
	protected $baggageweight;

	/**
	 * The value for the baggagedesc field.
	 * @var        string
	 */
	protected $baggagedesc;

	/**
	 * The value for the publiccnote field.
	 * @var        string
	 */
	protected $publiccnote;

	/**
	 * The value for the privatecnote field.
	 * @var        string
	 */
	protected $privatecnote;

	/**
	 * The value for the copilotwanted field.
	 * @var        int
	 */
	protected $copilotwanted;

	/**
	 * The value for the fromairportident field.
	 * @var        string
	 */
	protected $fromairportident;

	/**
	 * The value for the fromairportname field.
	 * @var        string
	 */
	protected $fromairportname;

	/**
	 * The value for the fromairportcity field.
	 * @var        string
	 */
	protected $fromairportcity;

	/**
	 * The value for the fromairportstate field.
	 * @var        string
	 */
	protected $fromairportstate;

	/**
	 * The value for the fromairportgmtoffset field.
	 * @var        int
	 */
	protected $fromairportgmtoffset;

	/**
	 * The value for the fromairportdstoffset field.
	 * @var        int
	 */
	protected $fromairportdstoffset;

	/**
	 * The value for the toairportident field.
	 * @var        string
	 */
	protected $toairportident;

	/**
	 * The value for the toairportname field.
	 * @var        string
	 */
	protected $toairportname;

	/**
	 * The value for the toairportcity field.
	 * @var        string
	 */
	protected $toairportcity;

	/**
	 * The value for the toairportstate field.
	 * @var        string
	 */
	protected $toairportstate;

	/**
	 * The value for the toairportgmtoffset field.
	 * @var        int
	 */
	protected $toairportgmtoffset;

	/**
	 * The value for the toairportdstoffset field.
	 * @var        int
	 */
	protected $toairportdstoffset;

	/**
	 * The value for the pilotfirstname field.
	 * @var        string
	 */
	protected $pilotfirstname;

	/**
	 * The value for the pilotlastname field.
	 * @var        string
	 */
	protected $pilotlastname;

	/**
	 * The value for the pilotdayphone field.
	 * @var        string
	 */
	protected $pilotdayphone;

	/**
	 * The value for the pilotdaycomment field.
	 * @var        string
	 */
	protected $pilotdaycomment;

	/**
	 * The value for the pilotevephone field.
	 * @var        string
	 */
	protected $pilotevephone;

	/**
	 * The value for the pilotevecomment field.
	 * @var        string
	 */
	protected $pilotevecomment;

	/**
	 * The value for the pilotfaxphone field.
	 * @var        string
	 */
	protected $pilotfaxphone;

	/**
	 * The value for the pilotfaxcomment field.
	 * @var        string
	 */
	protected $pilotfaxcomment;

	/**
	 * The value for the pilotmobilephone field.
	 * @var        string
	 */
	protected $pilotmobilephone;

	/**
	 * The value for the pilotmobilecomment field.
	 * @var        string
	 */
	protected $pilotmobilecomment;

	/**
	 * The value for the pilotpagerphone field.
	 * @var        string
	 */
	protected $pilotpagerphone;

	/**
	 * The value for the pilotpagercomment field.
	 * @var        string
	 */
	protected $pilotpagercomment;

	/**
	 * The value for the pilototherphone field.
	 * @var        string
	 */
	protected $pilototherphone;

	/**
	 * The value for the pilotothercomment field.
	 * @var        string
	 */
	protected $pilotothercomment;

	/**
	 * The value for the pilotemail field.
	 * @var        string
	 */
	protected $pilotemail;

	/**
	 * The value for the copilotfirstname field.
	 * @var        string
	 */
	protected $copilotfirstname;

	/**
	 * The value for the copilotlastname field.
	 * @var        string
	 */
	protected $copilotlastname;

	/**
	 * The value for the copilotdayphone field.
	 * @var        string
	 */
	protected $copilotdayphone;

	/**
	 * The value for the copilotdaycomment field.
	 * @var        string
	 */
	protected $copilotdaycomment;

	/**
	 * The value for the copilotevephone field.
	 * @var        string
	 */
	protected $copilotevephone;

	/**
	 * The value for the copilotevecomment field.
	 * @var        string
	 */
	protected $copilotevecomment;

	/**
	 * The value for the copilotmobilephone field.
	 * @var        string
	 */
	protected $copilotmobilephone;

	/**
	 * The value for the copilotmobilecomment field.
	 * @var        string
	 */
	protected $copilotmobilecomment;

	/**
	 * The value for the copilotpagerphone field.
	 * @var        string
	 */
	protected $copilotpagerphone;

	/**
	 * The value for the copilotpagercomment field.
	 * @var        string
	 */
	protected $copilotpagercomment;

	/**
	 * The value for the copilototherphone field.
	 * @var        string
	 */
	protected $copilototherphone;

	/**
	 * The value for the copilotothercomment field.
	 * @var        string
	 */
	protected $copilotothercomment;

	/**
	 * The value for the copilotfaxphone field.
	 * @var        string
	 */
	protected $copilotfaxphone;

	/**
	 * The value for the copilotfaxcomment field.
	 * @var        string
	 */
	protected $copilotfaxcomment;

	/**
	 * The value for the copilotemail field.
	 * @var        string
	 */
	protected $copilotemail;

	/**
	 * The value for the bupilotfirstname field.
	 * @var        string
	 */
	protected $bupilotfirstname;

	/**
	 * The value for the bupilotlastname field.
	 * @var        string
	 */
	protected $bupilotlastname;

	/**
	 * The value for the bupilotdayphone field.
	 * @var        string
	 */
	protected $bupilotdayphone;

	/**
	 * The value for the bupilotdaycomment field.
	 * @var        string
	 */
	protected $bupilotdaycomment;

	/**
	 * The value for the bupilotevephone field.
	 * @var        string
	 */
	protected $bupilotevephone;

	/**
	 * The value for the bupilotevecomment field.
	 * @var        string
	 */
	protected $bupilotevecomment;

	/**
	 * The value for the bupilotmobilephone field.
	 * @var        string
	 */
	protected $bupilotmobilephone;

	/**
	 * The value for the bupilotmobilecomment field.
	 * @var        string
	 */
	protected $bupilotmobilecomment;

	/**
	 * The value for the bupilotpagerphone field.
	 * @var        string
	 */
	protected $bupilotpagerphone;

	/**
	 * The value for the bupilotpagercomment field.
	 * @var        string
	 */
	protected $bupilotpagercomment;

	/**
	 * The value for the bupilototherphone field.
	 * @var        string
	 */
	protected $bupilototherphone;

	/**
	 * The value for the bupilotothercomment field.
	 * @var        string
	 */
	protected $bupilotothercomment;

	/**
	 * The value for the bupilotfaxphone field.
	 * @var        string
	 */
	protected $bupilotfaxphone;

	/**
	 * The value for the bupilotfaxcomment field.
	 * @var        string
	 */
	protected $bupilotfaxcomment;

	/**
	 * The value for the bupilotemail field.
	 * @var        string
	 */
	protected $bupilotemail;

	/**
	 * The value for the coordfirstname field.
	 * @var        string
	 */
	protected $coordfirstname;

	/**
	 * The value for the coordlastname field.
	 * @var        string
	 */
	protected $coordlastname;

	/**
	 * The value for the coorddayphone field.
	 * @var        string
	 */
	protected $coorddayphone;

	/**
	 * The value for the coorddaycomment field.
	 * @var        string
	 */
	protected $coorddaycomment;

	/**
	 * The value for the coordevephone field.
	 * @var        string
	 */
	protected $coordevephone;

	/**
	 * The value for the coordevecomment field.
	 * @var        string
	 */
	protected $coordevecomment;

	/**
	 * The value for the coordmobilephone field.
	 * @var        string
	 */
	protected $coordmobilephone;

	/**
	 * The value for the coordmobilecomment field.
	 * @var        string
	 */
	protected $coordmobilecomment;

	/**
	 * The value for the coordpagerphone field.
	 * @var        string
	 */
	protected $coordpagerphone;

	/**
	 * The value for the coordpagercomment field.
	 * @var        string
	 */
	protected $coordpagercomment;

	/**
	 * The value for the coordotherphone field.
	 * @var        string
	 */
	protected $coordotherphone;

	/**
	 * The value for the coordothercomment field.
	 * @var        string
	 */
	protected $coordothercomment;

	/**
	 * The value for the coordfaxphone field.
	 * @var        string
	 */
	protected $coordfaxphone;

	/**
	 * The value for the coordfaxcomment field.
	 * @var        string
	 */
	protected $coordfaxcomment;

	/**
	 * The value for the coordemail field.
	 * @var        string
	 */
	protected $coordemail;

	/**
	 * The value for the requestername field.
	 * Note: this column has a database default value of: ''
	 * @var        string
	 */
	protected $requestername;

	/**
	 * The value for the reqfirstname field.
	 * @var        string
	 */
	protected $reqfirstname;

	/**
	 * The value for the reqlastname field.
	 * @var        string
	 */
	protected $reqlastname;

	/**
	 * The value for the reqdayphone field.
	 * @var        string
	 */
	protected $reqdayphone;

	/**
	 * The value for the reqevephone field.
	 * @var        string
	 */
	protected $reqevephone;

	/**
	 * The value for the reqmobilephone field.
	 * @var        string
	 */
	protected $reqmobilephone;

	/**
	 * The value for the reqpagerphone field.
	 * @var        string
	 */
	protected $reqpagerphone;

	/**
	 * The value for the reqotherphone field.
	 * @var        string
	 */
	protected $reqotherphone;

	/**
	 * The value for the reqfaxphone field.
	 * @var        string
	 */
	protected $reqfaxphone;

	/**
	 * The value for the reqdaycomment field.
	 * @var        string
	 */
	protected $reqdaycomment;

	/**
	 * The value for the reqevecomment field.
	 * @var        string
	 */
	protected $reqevecomment;

	/**
	 * The value for the reqpagercomment field.
	 * @var        string
	 */
	protected $reqpagercomment;

	/**
	 * The value for the reqmobilecomment field.
	 * @var        string
	 */
	protected $reqmobilecomment;

	/**
	 * The value for the reqfaxcomment field.
	 * @var        string
	 */
	protected $reqfaxcomment;

	/**
	 * The value for the reqothercomment field.
	 * @var        string
	 */
	protected $reqothercomment;

	/**
	 * The value for the reqemail field.
	 * @var        string
	 */
	protected $reqemail;

	/**
	 * The value for the companionname field.
	 * @var        string
	 */
	protected $companionname;

	/**
	 * The value for the companionrelationship field.
	 * @var        string
	 */
	protected $companionrelationship;

	/**
	 * The value for the companiondob field.
	 * @var        string
	 */
	protected $companiondob;

	/**
	 * The value for the companionage field.
	 * @var        string
	 */
	protected $companionage;

	/**
	 * The value for the companionweight field.
	 * @var        int
	 */
	protected $companionweight;

	/**
	 * The value for the companionphone field.
	 * @var        string
	 */
	protected $companionphone;

	/**
	 * The value for the companionphonecomment field.
	 * @var        string
	 */
	protected $companionphonecomment;

	/**
	 * The value for the pilotname field.
	 * @var        string
	 */
	protected $pilotname;

	/**
	 * The value for the afadayphone field.
	 * @var        string
	 */
	protected $afadayphone;

	/**
	 * The value for the afanightphone field.
	 * @var        string
	 */
	protected $afanightphone;

	/**
	 * The value for the afafaxphone field.
	 * @var        string
	 */
	protected $afafaxphone;

	/**
	 * The value for the afapilotmobilephone field.
	 * @var        int
	 */
	protected $afapilotmobilephone;

	/**
	 * The value for the afaaircraft field.
	 * @var        string
	 */
	protected $afaaircraft;

	/**
	 * The value for the afannumber field.
	 * @var        string
	 */
	protected $afannumber;

	/**
	 * The value for the aircraftcolor field.
	 * @var        string
	 */
	protected $aircraftcolor;

	/**
	 * The value for the etd field.
	 * @var        string
	 */
	protected $etd;

	/**
	 * The value for the eta field.
	 * @var        string
	 */
	protected $eta;

	/**
	 * The value for the afaorgname field.
	 * @var        string
	 */
	protected $afaorgname;

	/**
	 * The value for the afaorgphone field.
	 * @var        string
	 */
	protected $afaorgphone;

	/**
	 * The value for the fboname field.
	 * @var        string
	 */
	protected $fboname;

	/**
	 * The value for the fbophone field.
	 * @var        string
	 */
	protected $fbophone;

	/**
	 * The value for the fbofax field.
	 * @var        string
	 */
	protected $fbofax;

	/**
	 * The value for the fbofueldiscount field.
	 * @var        double
	 */
	protected $fbofueldiscount;

	/**
	 * The value for the fboairportident field.
	 * @var        string
	 */
	protected $fboairportident;

	/**
	 * The value for the aircraftseats field.
	 * @var        int
	 */
	protected $aircraftseats;

	/**
	 * The value for the aircraftnnumber field.
	 * @var        string
	 */
	protected $aircraftnnumber;

	/**
	 * The value for the aircraftknownice field.
	 * @var        int
	 */
	protected $aircraftknownice;

	/**
	 * The value for the aircraftmake field.
	 * @var        string
	 */
	protected $aircraftmake;

	/**
	 * The value for the aircraftmodel field.
	 * @var        string
	 */
	protected $aircraftmodel;

	/**
	 * The value for the campname field.
	 * @var        string
	 */
	protected $campname;

	/**
	 * The value for the campphone field.
	 * @var        string
	 */
	protected $campphone;

	/**
	 * The value for the campphonecomment field.
	 * @var        string
	 */
	protected $campphonecomment;

	/**
	 * The value for the camplodgingname field.
	 * @var        string
	 */
	protected $camplodgingname;

	/**
	 * The value for the camplodgingphone field.
	 * @var        string
	 */
	protected $camplodgingphone;

	/**
	 * The value for the camplodgingphonecomment field.
	 * @var        string
	 */
	protected $camplodgingphonecomment;

	/**
	 * The value for the campcomment field.
	 * @var        string
	 */
	protected $campcomment;

	/**
	 * The value for the flightinformation field.
	 * @var        string
	 */
	protected $flightinformation;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseRpMissionItinerary object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
		$this->missionid = 0;
		$this->requestername = '';
	}

	/**
	 * Get the [now] column value.
	 * 
	 * @return     string
	 */
	public function getNow()
	{
		return $this->now;
	}

	/**
	 * Get the [missionid] column value.
	 * 
	 * @return     int
	 */
	public function getMissionid()
	{
		return $this->missionid;
	}

	/**
	 * Get the [externalid] column value.
	 * 
	 * @return     int
	 */
	public function getExternalid()
	{
		return $this->externalid;
	}

	/**
	 * Get the [missiontypeid] column value.
	 * 
	 * @return     int
	 */
	public function getMissiontypeid()
	{
		return $this->missiontypeid;
	}

	/**
	 * Get the [missiondate] column value.
	 * 
	 * @return     string
	 */
	public function getMissiondate()
	{
		return $this->missiondate;
	}

	/**
	 * Get the [optionally formatted] temporal [apptdate] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getApptdate($format = 'Y-m-d H:i:s')
	{
		if ($this->apptdate === null) {
			return null;
		}


		if ($this->apptdate === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->apptdate);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->apptdate, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [flighttime] column value.
	 * 
	 * @return     string
	 */
	public function getFlighttime()
	{
		return $this->flighttime;
	}

	/**
	 * Get the [releasingphysician] column value.
	 * 
	 * @return     string
	 */
	public function getReleasingphysician()
	{
		return $this->releasingphysician;
	}

	/**
	 * Get the [releasingphone] column value.
	 * 
	 * @return     string
	 */
	public function getReleasingphone()
	{
		return $this->releasingphone;
	}

	/**
	 * Get the [releasingfax] column value.
	 * 
	 * @return     int
	 */
	public function getReleasingfax()
	{
		return $this->releasingfax;
	}

	/**
	 * Get the [releasingfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getReleasingfaxcomment()
	{
		return $this->releasingfaxcomment;
	}

	/**
	 * Get the [releasingemail] column value.
	 * 
	 * @return     string
	 */
	public function getReleasingemail()
	{
		return $this->releasingemail;
	}

	/**
	 * Get the [lodging] column value.
	 * 
	 * @return     string
	 */
	public function getLodging()
	{
		return $this->lodging;
	}

	/**
	 * Get the [lodgingphone] column value.
	 * 
	 * @return     string
	 */
	public function getLodgingphone()
	{
		return $this->lodgingphone;
	}

	/**
	 * Get the [lodging_phone_comment] column value.
	 * 
	 * @return     string
	 */
	public function getLodgingPhoneComment()
	{
		return $this->lodging_phone_comment;
	}

	/**
	 * Get the [facilityname] column value.
	 * 
	 * @return     string
	 */
	public function getFacilityname()
	{
		return $this->facilityname;
	}

	/**
	 * Get the [facilityphone] column value.
	 * 
	 * @return     string
	 */
	public function getFacilityphone()
	{
		return $this->facilityphone;
	}

	/**
	 * Get the [facilityphonecomment] column value.
	 * 
	 * @return     string
	 */
	public function getFacilityphonecomment()
	{
		return $this->facilityphonecomment;
	}

	/**
	 * Get the [publicconsiderations] column value.
	 * 
	 * @return     string
	 */
	public function getPublicconsiderations()
	{
		return $this->publicconsiderations;
	}

	/**
	 * Get the [privateconsiderations] column value.
	 * 
	 * @return     string
	 */
	public function getPrivateconsiderations()
	{
		return $this->privateconsiderations;
	}

	/**
	 * Get the [illness] column value.
	 * 
	 * @return     string
	 */
	public function getIllness()
	{
		return $this->illness;
	}

	/**
	 * Get the [groundtransportationcomment] column value.
	 * 
	 * @return     string
	 */
	public function getGroundtransportationcomment()
	{
		return $this->groundtransportationcomment;
	}

	/**
	 * Get the [treatingphysician] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingphysician()
	{
		return $this->treatingphysician;
	}

	/**
	 * Get the [treatingphone] column value.
	 * 
	 * @return     int
	 */
	public function getTreatingphone()
	{
		return $this->treatingphone;
	}

	/**
	 * Get the [treatingfax] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingfax()
	{
		return $this->treatingfax;
	}

	/**
	 * Get the [treatingfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingfaxcomment()
	{
		return $this->treatingfaxcomment;
	}

	/**
	 * Get the [treatingemail] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingemail()
	{
		return $this->treatingemail;
	}

	/**
	 * Get the [languagespoken] column value.
	 * 
	 * @return     string
	 */
	public function getLanguagespoken()
	{
		return $this->languagespoken;
	}

	/**
	 * Get the [bestcontactmethod] column value.
	 * 
	 * @return     string
	 */
	public function getBestcontactmethod()
	{
		return $this->bestcontactmethod;
	}

	/**
	 * Get the [emergencycontactname] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencycontactname()
	{
		return $this->emergencycontactname;
	}

	/**
	 * Get the [emergencycontactprimaryphone] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencycontactprimaryphone()
	{
		return $this->emergencycontactprimaryphone;
	}

	/**
	 * Get the [emergencycontactsecondaryphone] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencycontactsecondaryphone()
	{
		return $this->emergencycontactsecondaryphone;
	}

	/**
	 * Get the [emergencycontactprimarycomment] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencycontactprimarycomment()
	{
		return $this->emergencycontactprimarycomment;
	}

	/**
	 * Get the [emergencycontactsecondarycomment] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencycontactsecondarycomment()
	{
		return $this->emergencycontactsecondarycomment;
	}

	/**
	 * Get the [passfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getPassfirstname()
	{
		return $this->passfirstname;
	}

	/**
	 * Get the [passlastname] column value.
	 * 
	 * @return     string
	 */
	public function getPasslastname()
	{
		return $this->passlastname;
	}

	/**
	 * Get the [passcity] column value.
	 * 
	 * @return     string
	 */
	public function getPasscity()
	{
		return $this->passcity;
	}

	/**
	 * Get the [passstate] column value.
	 * 
	 * @return     string
	 */
	public function getPassstate()
	{
		return $this->passstate;
	}

	/**
	 * Get the [passzipcode] column value.
	 * 
	 * @return     string
	 */
	public function getPasszipcode()
	{
		return $this->passzipcode;
	}

	/**
	 * Get the [passage] column value.
	 * 
	 * @return     string
	 */
	public function getPassage()
	{
		return $this->passage;
	}

	/**
	 * Get the [passweight] column value.
	 * 
	 * @return     int
	 */
	public function getPassweight()
	{
		return $this->passweight;
	}

	/**
	 * Get the [passdayphone] column value.
	 * 
	 * @return     string
	 */
	public function getPassdayphone()
	{
		return $this->passdayphone;
	}

	/**
	 * Get the [passdaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getPassdaycomment()
	{
		return $this->passdaycomment;
	}

	/**
	 * Get the [passevephone] column value.
	 * 
	 * @return     string
	 */
	public function getPassevephone()
	{
		return $this->passevephone;
	}

	/**
	 * Get the [passevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getPassevecomment()
	{
		return $this->passevecomment;
	}

	/**
	 * Get the [passpagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getPasspagerphone()
	{
		return $this->passpagerphone;
	}

	/**
	 * Get the [passpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getPasspagercomment()
	{
		return $this->passpagercomment;
	}

	/**
	 * Get the [passmobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getPassmobilephone()
	{
		return $this->passmobilephone;
	}

	/**
	 * Get the [passmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getPassmobilecomment()
	{
		return $this->passmobilecomment;
	}

	/**
	 * Get the [passotherphone] column value.
	 * 
	 * @return     string
	 */
	public function getPassotherphone()
	{
		return $this->passotherphone;
	}

	/**
	 * Get the [passothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getPassothercomment()
	{
		return $this->passothercomment;
	}

	/**
	 * Get the [passfaxphone1] column value.
	 * 
	 * @return     string
	 */
	public function getPassfaxphone1()
	{
		return $this->passfaxphone1;
	}

	/**
	 * Get the [passfax1comment] column value.
	 * 
	 * @return     string
	 */
	public function getPassfax1comment()
	{
		return $this->passfax1comment;
	}

	/**
	 * Get the [passemail] column value.
	 * 
	 * @return     string
	 */
	public function getPassemail()
	{
		return $this->passemail;
	}

	/**
	 * Get the [passaddressone] column value.
	 * 
	 * @return     string
	 */
	public function getPassaddressone()
	{
		return $this->passaddressone;
	}

	/**
	 * Get the [passaddresstwo] column value.
	 * 
	 * @return     string
	 */
	public function getPassaddresstwo()
	{
		return $this->passaddresstwo;
	}

	/**
	 * Get the [comment] column value.
	 * 
	 * @return     string
	 */
	public function getComment()
	{
		return $this->comment;
	}

	/**
	 * Get the [id] column value.
	 * 
	 * @return     int
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Get the [legnumber] column value.
	 * 
	 * @return     int
	 */
	public function getLegnumber()
	{
		return $this->legnumber;
	}

	/**
	 * Get the [passonboard] column value.
	 * 
	 * @return     int
	 */
	public function getPassonboard()
	{
		return $this->passonboard;
	}

	/**
	 * Get the [baggageweight] column value.
	 * 
	 * @return     int
	 */
	public function getBaggageweight()
	{
		return $this->baggageweight;
	}

	/**
	 * Get the [baggagedesc] column value.
	 * 
	 * @return     string
	 */
	public function getBaggagedesc()
	{
		return $this->baggagedesc;
	}

	/**
	 * Get the [publiccnote] column value.
	 * 
	 * @return     string
	 */
	public function getPubliccnote()
	{
		return $this->publiccnote;
	}

	/**
	 * Get the [privatecnote] column value.
	 * 
	 * @return     string
	 */
	public function getPrivatecnote()
	{
		return $this->privatecnote;
	}

	/**
	 * Get the [copilotwanted] column value.
	 * 
	 * @return     int
	 */
	public function getCopilotwanted()
	{
		return $this->copilotwanted;
	}

	/**
	 * Get the [fromairportident] column value.
	 * 
	 * @return     string
	 */
	public function getFromairportident()
	{
		return $this->fromairportident;
	}

	/**
	 * Get the [fromairportname] column value.
	 * 
	 * @return     string
	 */
	public function getFromairportname()
	{
		return $this->fromairportname;
	}

	/**
	 * Get the [fromairportcity] column value.
	 * 
	 * @return     string
	 */
	public function getFromairportcity()
	{
		return $this->fromairportcity;
	}

	/**
	 * Get the [fromairportstate] column value.
	 * 
	 * @return     string
	 */
	public function getFromairportstate()
	{
		return $this->fromairportstate;
	}

	/**
	 * Get the [fromairportgmtoffset] column value.
	 * 
	 * @return     int
	 */
	public function getFromairportgmtoffset()
	{
		return $this->fromairportgmtoffset;
	}

	/**
	 * Get the [fromairportdstoffset] column value.
	 * 
	 * @return     int
	 */
	public function getFromairportdstoffset()
	{
		return $this->fromairportdstoffset;
	}

	/**
	 * Get the [toairportident] column value.
	 * 
	 * @return     string
	 */
	public function getToairportident()
	{
		return $this->toairportident;
	}

	/**
	 * Get the [toairportname] column value.
	 * 
	 * @return     string
	 */
	public function getToairportname()
	{
		return $this->toairportname;
	}

	/**
	 * Get the [toairportcity] column value.
	 * 
	 * @return     string
	 */
	public function getToairportcity()
	{
		return $this->toairportcity;
	}

	/**
	 * Get the [toairportstate] column value.
	 * 
	 * @return     string
	 */
	public function getToairportstate()
	{
		return $this->toairportstate;
	}

	/**
	 * Get the [toairportgmtoffset] column value.
	 * 
	 * @return     int
	 */
	public function getToairportgmtoffset()
	{
		return $this->toairportgmtoffset;
	}

	/**
	 * Get the [toairportdstoffset] column value.
	 * 
	 * @return     int
	 */
	public function getToairportdstoffset()
	{
		return $this->toairportdstoffset;
	}

	/**
	 * Get the [pilotfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getPilotfirstname()
	{
		return $this->pilotfirstname;
	}

	/**
	 * Get the [pilotlastname] column value.
	 * 
	 * @return     string
	 */
	public function getPilotlastname()
	{
		return $this->pilotlastname;
	}

	/**
	 * Get the [pilotdayphone] column value.
	 * 
	 * @return     string
	 */
	public function getPilotdayphone()
	{
		return $this->pilotdayphone;
	}

	/**
	 * Get the [pilotdaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotdaycomment()
	{
		return $this->pilotdaycomment;
	}

	/**
	 * Get the [pilotevephone] column value.
	 * 
	 * @return     string
	 */
	public function getPilotevephone()
	{
		return $this->pilotevephone;
	}

	/**
	 * Get the [pilotevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotevecomment()
	{
		return $this->pilotevecomment;
	}

	/**
	 * Get the [pilotfaxphone] column value.
	 * 
	 * @return     string
	 */
	public function getPilotfaxphone()
	{
		return $this->pilotfaxphone;
	}

	/**
	 * Get the [pilotfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotfaxcomment()
	{
		return $this->pilotfaxcomment;
	}

	/**
	 * Get the [pilotmobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getPilotmobilephone()
	{
		return $this->pilotmobilephone;
	}

	/**
	 * Get the [pilotmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotmobilecomment()
	{
		return $this->pilotmobilecomment;
	}

	/**
	 * Get the [pilotpagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getPilotpagerphone()
	{
		return $this->pilotpagerphone;
	}

	/**
	 * Get the [pilotpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotpagercomment()
	{
		return $this->pilotpagercomment;
	}

	/**
	 * Get the [pilototherphone] column value.
	 * 
	 * @return     string
	 */
	public function getPilototherphone()
	{
		return $this->pilototherphone;
	}

	/**
	 * Get the [pilotothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getPilotothercomment()
	{
		return $this->pilotothercomment;
	}

	/**
	 * Get the [pilotemail] column value.
	 * 
	 * @return     string
	 */
	public function getPilotemail()
	{
		return $this->pilotemail;
	}

	/**
	 * Get the [copilotfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotfirstname()
	{
		return $this->copilotfirstname;
	}

	/**
	 * Get the [copilotlastname] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotlastname()
	{
		return $this->copilotlastname;
	}

	/**
	 * Get the [copilotdayphone] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotdayphone()
	{
		return $this->copilotdayphone;
	}

	/**
	 * Get the [copilotdaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotdaycomment()
	{
		return $this->copilotdaycomment;
	}

	/**
	 * Get the [copilotevephone] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotevephone()
	{
		return $this->copilotevephone;
	}

	/**
	 * Get the [copilotevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotevecomment()
	{
		return $this->copilotevecomment;
	}

	/**
	 * Get the [copilotmobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotmobilephone()
	{
		return $this->copilotmobilephone;
	}

	/**
	 * Get the [copilotmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotmobilecomment()
	{
		return $this->copilotmobilecomment;
	}

	/**
	 * Get the [copilotpagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotpagerphone()
	{
		return $this->copilotpagerphone;
	}

	/**
	 * Get the [copilotpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotpagercomment()
	{
		return $this->copilotpagercomment;
	}

	/**
	 * Get the [copilototherphone] column value.
	 * 
	 * @return     string
	 */
	public function getCopilototherphone()
	{
		return $this->copilototherphone;
	}

	/**
	 * Get the [copilotothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotothercomment()
	{
		return $this->copilotothercomment;
	}

	/**
	 * Get the [copilotfaxphone] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotfaxphone()
	{
		return $this->copilotfaxphone;
	}

	/**
	 * Get the [copilotfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotfaxcomment()
	{
		return $this->copilotfaxcomment;
	}

	/**
	 * Get the [copilotemail] column value.
	 * 
	 * @return     string
	 */
	public function getCopilotemail()
	{
		return $this->copilotemail;
	}

	/**
	 * Get the [bupilotfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotfirstname()
	{
		return $this->bupilotfirstname;
	}

	/**
	 * Get the [bupilotlastname] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotlastname()
	{
		return $this->bupilotlastname;
	}

	/**
	 * Get the [bupilotdayphone] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotdayphone()
	{
		return $this->bupilotdayphone;
	}

	/**
	 * Get the [bupilotdaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotdaycomment()
	{
		return $this->bupilotdaycomment;
	}

	/**
	 * Get the [bupilotevephone] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotevephone()
	{
		return $this->bupilotevephone;
	}

	/**
	 * Get the [bupilotevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotevecomment()
	{
		return $this->bupilotevecomment;
	}

	/**
	 * Get the [bupilotmobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotmobilephone()
	{
		return $this->bupilotmobilephone;
	}

	/**
	 * Get the [bupilotmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotmobilecomment()
	{
		return $this->bupilotmobilecomment;
	}

	/**
	 * Get the [bupilotpagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotpagerphone()
	{
		return $this->bupilotpagerphone;
	}

	/**
	 * Get the [bupilotpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotpagercomment()
	{
		return $this->bupilotpagercomment;
	}

	/**
	 * Get the [bupilototherphone] column value.
	 * 
	 * @return     string
	 */
	public function getBupilototherphone()
	{
		return $this->bupilototherphone;
	}

	/**
	 * Get the [bupilotothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotothercomment()
	{
		return $this->bupilotothercomment;
	}

	/**
	 * Get the [bupilotfaxphone] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotfaxphone()
	{
		return $this->bupilotfaxphone;
	}

	/**
	 * Get the [bupilotfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotfaxcomment()
	{
		return $this->bupilotfaxcomment;
	}

	/**
	 * Get the [bupilotemail] column value.
	 * 
	 * @return     string
	 */
	public function getBupilotemail()
	{
		return $this->bupilotemail;
	}

	/**
	 * Get the [coordfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getCoordfirstname()
	{
		return $this->coordfirstname;
	}

	/**
	 * Get the [coordlastname] column value.
	 * 
	 * @return     string
	 */
	public function getCoordlastname()
	{
		return $this->coordlastname;
	}

	/**
	 * Get the [coorddayphone] column value.
	 * 
	 * @return     string
	 */
	public function getCoorddayphone()
	{
		return $this->coorddayphone;
	}

	/**
	 * Get the [coorddaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getCoorddaycomment()
	{
		return $this->coorddaycomment;
	}

	/**
	 * Get the [coordevephone] column value.
	 * 
	 * @return     string
	 */
	public function getCoordevephone()
	{
		return $this->coordevephone;
	}

	/**
	 * Get the [coordevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCoordevecomment()
	{
		return $this->coordevecomment;
	}

	/**
	 * Get the [coordmobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getCoordmobilephone()
	{
		return $this->coordmobilephone;
	}

	/**
	 * Get the [coordmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCoordmobilecomment()
	{
		return $this->coordmobilecomment;
	}

	/**
	 * Get the [coordpagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getCoordpagerphone()
	{
		return $this->coordpagerphone;
	}

	/**
	 * Get the [coordpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getCoordpagercomment()
	{
		return $this->coordpagercomment;
	}

	/**
	 * Get the [coordotherphone] column value.
	 * 
	 * @return     string
	 */
	public function getCoordotherphone()
	{
		return $this->coordotherphone;
	}

	/**
	 * Get the [coordothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getCoordothercomment()
	{
		return $this->coordothercomment;
	}

	/**
	 * Get the [coordfaxphone] column value.
	 * 
	 * @return     string
	 */
	public function getCoordfaxphone()
	{
		return $this->coordfaxphone;
	}

	/**
	 * Get the [coordfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getCoordfaxcomment()
	{
		return $this->coordfaxcomment;
	}

	/**
	 * Get the [coordemail] column value.
	 * 
	 * @return     string
	 */
	public function getCoordemail()
	{
		return $this->coordemail;
	}

	/**
	 * Get the [requestername] column value.
	 * 
	 * @return     string
	 */
	public function getRequestername()
	{
		return $this->requestername;
	}

	/**
	 * Get the [reqfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getReqfirstname()
	{
		return $this->reqfirstname;
	}

	/**
	 * Get the [reqlastname] column value.
	 * 
	 * @return     string
	 */
	public function getReqlastname()
	{
		return $this->reqlastname;
	}

	/**
	 * Get the [reqdayphone] column value.
	 * 
	 * @return     string
	 */
	public function getReqdayphone()
	{
		return $this->reqdayphone;
	}

	/**
	 * Get the [reqevephone] column value.
	 * 
	 * @return     string
	 */
	public function getReqevephone()
	{
		return $this->reqevephone;
	}

	/**
	 * Get the [reqmobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getReqmobilephone()
	{
		return $this->reqmobilephone;
	}

	/**
	 * Get the [reqpagerphone] column value.
	 * 
	 * @return     string
	 */
	public function getReqpagerphone()
	{
		return $this->reqpagerphone;
	}

	/**
	 * Get the [reqotherphone] column value.
	 * 
	 * @return     string
	 */
	public function getReqotherphone()
	{
		return $this->reqotherphone;
	}

	/**
	 * Get the [reqfaxphone] column value.
	 * 
	 * @return     string
	 */
	public function getReqfaxphone()
	{
		return $this->reqfaxphone;
	}

	/**
	 * Get the [reqdaycomment] column value.
	 * 
	 * @return     string
	 */
	public function getReqdaycomment()
	{
		return $this->reqdaycomment;
	}

	/**
	 * Get the [reqevecomment] column value.
	 * 
	 * @return     string
	 */
	public function getReqevecomment()
	{
		return $this->reqevecomment;
	}

	/**
	 * Get the [reqpagercomment] column value.
	 * 
	 * @return     string
	 */
	public function getReqpagercomment()
	{
		return $this->reqpagercomment;
	}

	/**
	 * Get the [reqmobilecomment] column value.
	 * 
	 * @return     string
	 */
	public function getReqmobilecomment()
	{
		return $this->reqmobilecomment;
	}

	/**
	 * Get the [reqfaxcomment] column value.
	 * 
	 * @return     string
	 */
	public function getReqfaxcomment()
	{
		return $this->reqfaxcomment;
	}

	/**
	 * Get the [reqothercomment] column value.
	 * 
	 * @return     string
	 */
	public function getReqothercomment()
	{
		return $this->reqothercomment;
	}

	/**
	 * Get the [reqemail] column value.
	 * 
	 * @return     string
	 */
	public function getReqemail()
	{
		return $this->reqemail;
	}

	/**
	 * Get the [companionname] column value.
	 * 
	 * @return     string
	 */
	public function getCompanionname()
	{
		return $this->companionname;
	}

	/**
	 * Get the [companionrelationship] column value.
	 * 
	 * @return     string
	 */
	public function getCompanionrelationship()
	{
		return $this->companionrelationship;
	}

	/**
	 * Get the [companiondob] column value.
	 * 
	 * @return     string
	 */
	public function getCompaniondob()
	{
		return $this->companiondob;
	}

	/**
	 * Get the [companionage] column value.
	 * 
	 * @return     string
	 */
	public function getCompanionage()
	{
		return $this->companionage;
	}

	/**
	 * Get the [companionweight] column value.
	 * 
	 * @return     int
	 */
	public function getCompanionweight()
	{
		return $this->companionweight;
	}

	/**
	 * Get the [companionphone] column value.
	 * 
	 * @return     string
	 */
	public function getCompanionphone()
	{
		return $this->companionphone;
	}

	/**
	 * Get the [companionphonecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCompanionphonecomment()
	{
		return $this->companionphonecomment;
	}

	/**
	 * Get the [pilotname] column value.
	 * 
	 * @return     string
	 */
	public function getPilotname()
	{
		return $this->pilotname;
	}

	/**
	 * Get the [afadayphone] column value.
	 * 
	 * @return     string
	 */
	public function getAfadayphone()
	{
		return $this->afadayphone;
	}

	/**
	 * Get the [afanightphone] column value.
	 * 
	 * @return     string
	 */
	public function getAfanightphone()
	{
		return $this->afanightphone;
	}

	/**
	 * Get the [afafaxphone] column value.
	 * 
	 * @return     string
	 */
	public function getAfafaxphone()
	{
		return $this->afafaxphone;
	}

	/**
	 * Get the [afapilotmobilephone] column value.
	 * 
	 * @return     int
	 */
	public function getAfapilotmobilephone()
	{
		return $this->afapilotmobilephone;
	}

	/**
	 * Get the [afaaircraft] column value.
	 * 
	 * @return     string
	 */
	public function getAfaaircraft()
	{
		return $this->afaaircraft;
	}

	/**
	 * Get the [afannumber] column value.
	 * 
	 * @return     string
	 */
	public function getAfannumber()
	{
		return $this->afannumber;
	}

	/**
	 * Get the [aircraftcolor] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftcolor()
	{
		return $this->aircraftcolor;
	}

	/**
	 * Get the [etd] column value.
	 * 
	 * @return     string
	 */
	public function getEtd()
	{
		return $this->etd;
	}

	/**
	 * Get the [eta] column value.
	 * 
	 * @return     string
	 */
	public function getEta()
	{
		return $this->eta;
	}

	/**
	 * Get the [afaorgname] column value.
	 * 
	 * @return     string
	 */
	public function getAfaorgname()
	{
		return $this->afaorgname;
	}

	/**
	 * Get the [afaorgphone] column value.
	 * 
	 * @return     string
	 */
	public function getAfaorgphone()
	{
		return $this->afaorgphone;
	}

	/**
	 * Get the [fboname] column value.
	 * 
	 * @return     string
	 */
	public function getFboname()
	{
		return $this->fboname;
	}

	/**
	 * Get the [fbophone] column value.
	 * 
	 * @return     string
	 */
	public function getFbophone()
	{
		return $this->fbophone;
	}

	/**
	 * Get the [fbofax] column value.
	 * 
	 * @return     string
	 */
	public function getFbofax()
	{
		return $this->fbofax;
	}

	/**
	 * Get the [fbofueldiscount] column value.
	 * 
	 * @return     double
	 */
	public function getFbofueldiscount()
	{
		return $this->fbofueldiscount;
	}

	/**
	 * Get the [fboairportident] column value.
	 * 
	 * @return     string
	 */
	public function getFboairportident()
	{
		return $this->fboairportident;
	}

	/**
	 * Get the [aircraftseats] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftseats()
	{
		return $this->aircraftseats;
	}

	/**
	 * Get the [aircraftnnumber] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftnnumber()
	{
		return $this->aircraftnnumber;
	}

	/**
	 * Get the [aircraftknownice] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftknownice()
	{
		return $this->aircraftknownice;
	}

	/**
	 * Get the [aircraftmake] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftmake()
	{
		return $this->aircraftmake;
	}

	/**
	 * Get the [aircraftmodel] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftmodel()
	{
		return $this->aircraftmodel;
	}

	/**
	 * Get the [campname] column value.
	 * 
	 * @return     string
	 */
	public function getCampname()
	{
		return $this->campname;
	}

	/**
	 * Get the [campphone] column value.
	 * 
	 * @return     string
	 */
	public function getCampphone()
	{
		return $this->campphone;
	}

	/**
	 * Get the [campphonecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCampphonecomment()
	{
		return $this->campphonecomment;
	}

	/**
	 * Get the [camplodgingname] column value.
	 * 
	 * @return     string
	 */
	public function getCamplodgingname()
	{
		return $this->camplodgingname;
	}

	/**
	 * Get the [camplodgingphone] column value.
	 * 
	 * @return     string
	 */
	public function getCamplodgingphone()
	{
		return $this->camplodgingphone;
	}

	/**
	 * Get the [camplodgingphonecomment] column value.
	 * 
	 * @return     string
	 */
	public function getCamplodgingphonecomment()
	{
		return $this->camplodgingphonecomment;
	}

	/**
	 * Get the [campcomment] column value.
	 * 
	 * @return     string
	 */
	public function getCampcomment()
	{
		return $this->campcomment;
	}

	/**
	 * Get the [flightinformation] column value.
	 * 
	 * @return     string
	 */
	public function getFlightinformation()
	{
		return $this->flightinformation;
	}

	/**
	 * Set the value of [now] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setNow($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->now !== $v) {
			$this->now = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::NOW;
		}

		return $this;
	} // setNow()

	/**
	 * Set the value of [missionid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setMissionid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->missionid !== $v || $v === 0) {
			$this->missionid = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::MISSIONID;
		}

		return $this;
	} // setMissionid()

	/**
	 * Set the value of [externalid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setExternalid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->externalid !== $v) {
			$this->externalid = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::EXTERNALID;
		}

		return $this;
	} // setExternalid()

	/**
	 * Set the value of [missiontypeid] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setMissiontypeid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->missiontypeid !== $v) {
			$this->missiontypeid = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::MISSIONTYPEID;
		}

		return $this;
	} // setMissiontypeid()

	/**
	 * Set the value of [missiondate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setMissiondate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->missiondate !== $v) {
			$this->missiondate = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::MISSIONDATE;
		}

		return $this;
	} // setMissiondate()

	/**
	 * Sets the value of [apptdate] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setApptdate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->apptdate !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->apptdate !== null && $tmpDt = new DateTime($this->apptdate)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->apptdate = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = RpMissionItineraryPeer::APPTDATE;
			}
		} // if either are not null

		return $this;
	} // setApptdate()

	/**
	 * Set the value of [flighttime] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFlighttime($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->flighttime !== $v) {
			$this->flighttime = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FLIGHTTIME;
		}

		return $this;
	} // setFlighttime()

	/**
	 * Set the value of [releasingphysician] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReleasingphysician($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->releasingphysician !== $v) {
			$this->releasingphysician = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::RELEASINGPHYSICIAN;
		}

		return $this;
	} // setReleasingphysician()

	/**
	 * Set the value of [releasingphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReleasingphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->releasingphone !== $v) {
			$this->releasingphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::RELEASINGPHONE;
		}

		return $this;
	} // setReleasingphone()

	/**
	 * Set the value of [releasingfax] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReleasingfax($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->releasingfax !== $v) {
			$this->releasingfax = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::RELEASINGFAX;
		}

		return $this;
	} // setReleasingfax()

	/**
	 * Set the value of [releasingfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReleasingfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->releasingfaxcomment !== $v) {
			$this->releasingfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::RELEASINGFAXCOMMENT;
		}

		return $this;
	} // setReleasingfaxcomment()

	/**
	 * Set the value of [releasingemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReleasingemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->releasingemail !== $v) {
			$this->releasingemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::RELEASINGEMAIL;
		}

		return $this;
	} // setReleasingemail()

	/**
	 * Set the value of [lodging] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setLodging($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lodging !== $v) {
			$this->lodging = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::LODGING;
		}

		return $this;
	} // setLodging()

	/**
	 * Set the value of [lodgingphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setLodgingphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lodgingphone !== $v) {
			$this->lodgingphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::LODGINGPHONE;
		}

		return $this;
	} // setLodgingphone()

	/**
	 * Set the value of [lodging_phone_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setLodgingPhoneComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lodging_phone_comment !== $v) {
			$this->lodging_phone_comment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::LODGING_PHONE_COMMENT;
		}

		return $this;
	} // setLodgingPhoneComment()

	/**
	 * Set the value of [facilityname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFacilityname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->facilityname !== $v) {
			$this->facilityname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FACILITYNAME;
		}

		return $this;
	} // setFacilityname()

	/**
	 * Set the value of [facilityphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFacilityphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->facilityphone !== $v) {
			$this->facilityphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FACILITYPHONE;
		}

		return $this;
	} // setFacilityphone()

	/**
	 * Set the value of [facilityphonecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFacilityphonecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->facilityphonecomment !== $v) {
			$this->facilityphonecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FACILITYPHONECOMMENT;
		}

		return $this;
	} // setFacilityphonecomment()

	/**
	 * Set the value of [publicconsiderations] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPublicconsiderations($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->publicconsiderations !== $v) {
			$this->publicconsiderations = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PUBLICCONSIDERATIONS;
		}

		return $this;
	} // setPublicconsiderations()

	/**
	 * Set the value of [privateconsiderations] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPrivateconsiderations($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->privateconsiderations !== $v) {
			$this->privateconsiderations = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PRIVATECONSIDERATIONS;
		}

		return $this;
	} // setPrivateconsiderations()

	/**
	 * Set the value of [illness] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setIllness($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->illness !== $v) {
			$this->illness = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::ILLNESS;
		}

		return $this;
	} // setIllness()

	/**
	 * Set the value of [groundtransportationcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setGroundtransportationcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->groundtransportationcomment !== $v) {
			$this->groundtransportationcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::GROUNDTRANSPORTATIONCOMMENT;
		}

		return $this;
	} // setGroundtransportationcomment()

	/**
	 * Set the value of [treatingphysician] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setTreatingphysician($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treatingphysician !== $v) {
			$this->treatingphysician = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TREATINGPHYSICIAN;
		}

		return $this;
	} // setTreatingphysician()

	/**
	 * Set the value of [treatingphone] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setTreatingphone($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->treatingphone !== $v) {
			$this->treatingphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TREATINGPHONE;
		}

		return $this;
	} // setTreatingphone()

	/**
	 * Set the value of [treatingfax] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setTreatingfax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treatingfax !== $v) {
			$this->treatingfax = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TREATINGFAX;
		}

		return $this;
	} // setTreatingfax()

	/**
	 * Set the value of [treatingfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setTreatingfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treatingfaxcomment !== $v) {
			$this->treatingfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TREATINGFAXCOMMENT;
		}

		return $this;
	} // setTreatingfaxcomment()

	/**
	 * Set the value of [treatingemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setTreatingemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treatingemail !== $v) {
			$this->treatingemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TREATINGEMAIL;
		}

		return $this;
	} // setTreatingemail()

	/**
	 * Set the value of [languagespoken] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setLanguagespoken($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->languagespoken !== $v) {
			$this->languagespoken = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::LANGUAGESPOKEN;
		}

		return $this;
	} // setLanguagespoken()

	/**
	 * Set the value of [bestcontactmethod] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBestcontactmethod($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bestcontactmethod !== $v) {
			$this->bestcontactmethod = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BESTCONTACTMETHOD;
		}

		return $this;
	} // setBestcontactmethod()

	/**
	 * Set the value of [emergencycontactname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEmergencycontactname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergencycontactname !== $v) {
			$this->emergencycontactname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::EMERGENCYCONTACTNAME;
		}

		return $this;
	} // setEmergencycontactname()

	/**
	 * Set the value of [emergencycontactprimaryphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEmergencycontactprimaryphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergencycontactprimaryphone !== $v) {
			$this->emergencycontactprimaryphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::EMERGENCYCONTACTPRIMARYPHONE;
		}

		return $this;
	} // setEmergencycontactprimaryphone()

	/**
	 * Set the value of [emergencycontactsecondaryphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEmergencycontactsecondaryphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergencycontactsecondaryphone !== $v) {
			$this->emergencycontactsecondaryphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::EMERGENCYCONTACTSECONDARYPHONE;
		}

		return $this;
	} // setEmergencycontactsecondaryphone()

	/**
	 * Set the value of [emergencycontactprimarycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEmergencycontactprimarycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergencycontactprimarycomment !== $v) {
			$this->emergencycontactprimarycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::EMERGENCYCONTACTPRIMARYCOMMENT;
		}

		return $this;
	} // setEmergencycontactprimarycomment()

	/**
	 * Set the value of [emergencycontactsecondarycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEmergencycontactsecondarycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergencycontactsecondarycomment !== $v) {
			$this->emergencycontactsecondarycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::EMERGENCYCONTACTSECONDARYCOMMENT;
		}

		return $this;
	} // setEmergencycontactsecondarycomment()

	/**
	 * Set the value of [passfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passfirstname !== $v) {
			$this->passfirstname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSFIRSTNAME;
		}

		return $this;
	} // setPassfirstname()

	/**
	 * Set the value of [passlastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPasslastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passlastname !== $v) {
			$this->passlastname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSLASTNAME;
		}

		return $this;
	} // setPasslastname()

	/**
	 * Set the value of [passcity] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPasscity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passcity !== $v) {
			$this->passcity = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSCITY;
		}

		return $this;
	} // setPasscity()

	/**
	 * Set the value of [passstate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassstate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passstate !== $v) {
			$this->passstate = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSSTATE;
		}

		return $this;
	} // setPassstate()

	/**
	 * Set the value of [passzipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPasszipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passzipcode !== $v) {
			$this->passzipcode = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSZIPCODE;
		}

		return $this;
	} // setPasszipcode()

	/**
	 * Set the value of [passage] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassage($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passage !== $v) {
			$this->passage = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSAGE;
		}

		return $this;
	} // setPassage()

	/**
	 * Set the value of [passweight] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassweight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->passweight !== $v) {
			$this->passweight = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSWEIGHT;
		}

		return $this;
	} // setPassweight()

	/**
	 * Set the value of [passdayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassdayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passdayphone !== $v) {
			$this->passdayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSDAYPHONE;
		}

		return $this;
	} // setPassdayphone()

	/**
	 * Set the value of [passdaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassdaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passdaycomment !== $v) {
			$this->passdaycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSDAYCOMMENT;
		}

		return $this;
	} // setPassdaycomment()

	/**
	 * Set the value of [passevephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassevephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passevephone !== $v) {
			$this->passevephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSEVEPHONE;
		}

		return $this;
	} // setPassevephone()

	/**
	 * Set the value of [passevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passevecomment !== $v) {
			$this->passevecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSEVECOMMENT;
		}

		return $this;
	} // setPassevecomment()

	/**
	 * Set the value of [passpagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPasspagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passpagerphone !== $v) {
			$this->passpagerphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSPAGERPHONE;
		}

		return $this;
	} // setPasspagerphone()

	/**
	 * Set the value of [passpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPasspagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passpagercomment !== $v) {
			$this->passpagercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSPAGERCOMMENT;
		}

		return $this;
	} // setPasspagercomment()

	/**
	 * Set the value of [passmobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassmobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passmobilephone !== $v) {
			$this->passmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSMOBILEPHONE;
		}

		return $this;
	} // setPassmobilephone()

	/**
	 * Set the value of [passmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passmobilecomment !== $v) {
			$this->passmobilecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSMOBILECOMMENT;
		}

		return $this;
	} // setPassmobilecomment()

	/**
	 * Set the value of [passotherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassotherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passotherphone !== $v) {
			$this->passotherphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSOTHERPHONE;
		}

		return $this;
	} // setPassotherphone()

	/**
	 * Set the value of [passothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passothercomment !== $v) {
			$this->passothercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSOTHERCOMMENT;
		}

		return $this;
	} // setPassothercomment()

	/**
	 * Set the value of [passfaxphone1] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassfaxphone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passfaxphone1 !== $v) {
			$this->passfaxphone1 = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSFAXPHONE1;
		}

		return $this;
	} // setPassfaxphone1()

	/**
	 * Set the value of [passfax1comment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassfax1comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passfax1comment !== $v) {
			$this->passfax1comment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSFAX1COMMENT;
		}

		return $this;
	} // setPassfax1comment()

	/**
	 * Set the value of [passemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passemail !== $v) {
			$this->passemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSEMAIL;
		}

		return $this;
	} // setPassemail()

	/**
	 * Set the value of [passaddressone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassaddressone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passaddressone !== $v) {
			$this->passaddressone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSADDRESSONE;
		}

		return $this;
	} // setPassaddressone()

	/**
	 * Set the value of [passaddresstwo] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassaddresstwo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->passaddresstwo !== $v) {
			$this->passaddresstwo = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSADDRESSTWO;
		}

		return $this;
	} // setPassaddresstwo()

	/**
	 * Set the value of [comment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->comment !== $v) {
			$this->comment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMMENT;
		}

		return $this;
	} // setComment()

	/**
	 * Set the value of [id] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id !== $v) {
			$this->id = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::ID;
		}

		return $this;
	} // setId()

	/**
	 * Set the value of [legnumber] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setLegnumber($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->legnumber !== $v) {
			$this->legnumber = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::LEGNUMBER;
		}

		return $this;
	} // setLegnumber()

	/**
	 * Set the value of [passonboard] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPassonboard($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->passonboard !== $v) {
			$this->passonboard = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PASSONBOARD;
		}

		return $this;
	} // setPassonboard()

	/**
	 * Set the value of [baggageweight] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBaggageweight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->baggageweight !== $v) {
			$this->baggageweight = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BAGGAGEWEIGHT;
		}

		return $this;
	} // setBaggageweight()

	/**
	 * Set the value of [baggagedesc] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBaggagedesc($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->baggagedesc !== $v) {
			$this->baggagedesc = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BAGGAGEDESC;
		}

		return $this;
	} // setBaggagedesc()

	/**
	 * Set the value of [publiccnote] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPubliccnote($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->publiccnote !== $v) {
			$this->publiccnote = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PUBLICCNOTE;
		}

		return $this;
	} // setPubliccnote()

	/**
	 * Set the value of [privatecnote] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPrivatecnote($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->privatecnote !== $v) {
			$this->privatecnote = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PRIVATECNOTE;
		}

		return $this;
	} // setPrivatecnote()

	/**
	 * Set the value of [copilotwanted] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotwanted($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->copilotwanted !== $v) {
			$this->copilotwanted = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTWANTED;
		}

		return $this;
	} // setCopilotwanted()

	/**
	 * Set the value of [fromairportident] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFromairportident($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fromairportident !== $v) {
			$this->fromairportident = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FROMAIRPORTIDENT;
		}

		return $this;
	} // setFromairportident()

	/**
	 * Set the value of [fromairportname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFromairportname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fromairportname !== $v) {
			$this->fromairportname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FROMAIRPORTNAME;
		}

		return $this;
	} // setFromairportname()

	/**
	 * Set the value of [fromairportcity] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFromairportcity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fromairportcity !== $v) {
			$this->fromairportcity = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FROMAIRPORTCITY;
		}

		return $this;
	} // setFromairportcity()

	/**
	 * Set the value of [fromairportstate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFromairportstate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fromairportstate !== $v) {
			$this->fromairportstate = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FROMAIRPORTSTATE;
		}

		return $this;
	} // setFromairportstate()

	/**
	 * Set the value of [fromairportgmtoffset] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFromairportgmtoffset($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->fromairportgmtoffset !== $v) {
			$this->fromairportgmtoffset = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FROMAIRPORTGMTOFFSET;
		}

		return $this;
	} // setFromairportgmtoffset()

	/**
	 * Set the value of [fromairportdstoffset] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFromairportdstoffset($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->fromairportdstoffset !== $v) {
			$this->fromairportdstoffset = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FROMAIRPORTDSTOFFSET;
		}

		return $this;
	} // setFromairportdstoffset()

	/**
	 * Set the value of [toairportident] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setToairportident($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->toairportident !== $v) {
			$this->toairportident = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TOAIRPORTIDENT;
		}

		return $this;
	} // setToairportident()

	/**
	 * Set the value of [toairportname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setToairportname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->toairportname !== $v) {
			$this->toairportname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TOAIRPORTNAME;
		}

		return $this;
	} // setToairportname()

	/**
	 * Set the value of [toairportcity] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setToairportcity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->toairportcity !== $v) {
			$this->toairportcity = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TOAIRPORTCITY;
		}

		return $this;
	} // setToairportcity()

	/**
	 * Set the value of [toairportstate] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setToairportstate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->toairportstate !== $v) {
			$this->toairportstate = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TOAIRPORTSTATE;
		}

		return $this;
	} // setToairportstate()

	/**
	 * Set the value of [toairportgmtoffset] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setToairportgmtoffset($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->toairportgmtoffset !== $v) {
			$this->toairportgmtoffset = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TOAIRPORTGMTOFFSET;
		}

		return $this;
	} // setToairportgmtoffset()

	/**
	 * Set the value of [toairportdstoffset] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setToairportdstoffset($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->toairportdstoffset !== $v) {
			$this->toairportdstoffset = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::TOAIRPORTDSTOFFSET;
		}

		return $this;
	} // setToairportdstoffset()

	/**
	 * Set the value of [pilotfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotfirstname !== $v) {
			$this->pilotfirstname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTFIRSTNAME;
		}

		return $this;
	} // setPilotfirstname()

	/**
	 * Set the value of [pilotlastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotlastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotlastname !== $v) {
			$this->pilotlastname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTLASTNAME;
		}

		return $this;
	} // setPilotlastname()

	/**
	 * Set the value of [pilotdayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotdayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotdayphone !== $v) {
			$this->pilotdayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTDAYPHONE;
		}

		return $this;
	} // setPilotdayphone()

	/**
	 * Set the value of [pilotdaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotdaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotdaycomment !== $v) {
			$this->pilotdaycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTDAYCOMMENT;
		}

		return $this;
	} // setPilotdaycomment()

	/**
	 * Set the value of [pilotevephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotevephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotevephone !== $v) {
			$this->pilotevephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTEVEPHONE;
		}

		return $this;
	} // setPilotevephone()

	/**
	 * Set the value of [pilotevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotevecomment !== $v) {
			$this->pilotevecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTEVECOMMENT;
		}

		return $this;
	} // setPilotevecomment()

	/**
	 * Set the value of [pilotfaxphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotfaxphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotfaxphone !== $v) {
			$this->pilotfaxphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTFAXPHONE;
		}

		return $this;
	} // setPilotfaxphone()

	/**
	 * Set the value of [pilotfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotfaxcomment !== $v) {
			$this->pilotfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTFAXCOMMENT;
		}

		return $this;
	} // setPilotfaxcomment()

	/**
	 * Set the value of [pilotmobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotmobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotmobilephone !== $v) {
			$this->pilotmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTMOBILEPHONE;
		}

		return $this;
	} // setPilotmobilephone()

	/**
	 * Set the value of [pilotmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotmobilecomment !== $v) {
			$this->pilotmobilecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTMOBILECOMMENT;
		}

		return $this;
	} // setPilotmobilecomment()

	/**
	 * Set the value of [pilotpagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotpagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotpagerphone !== $v) {
			$this->pilotpagerphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTPAGERPHONE;
		}

		return $this;
	} // setPilotpagerphone()

	/**
	 * Set the value of [pilotpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotpagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotpagercomment !== $v) {
			$this->pilotpagercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTPAGERCOMMENT;
		}

		return $this;
	} // setPilotpagercomment()

	/**
	 * Set the value of [pilototherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilototherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilototherphone !== $v) {
			$this->pilototherphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTOTHERPHONE;
		}

		return $this;
	} // setPilototherphone()

	/**
	 * Set the value of [pilotothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotothercomment !== $v) {
			$this->pilotothercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTOTHERCOMMENT;
		}

		return $this;
	} // setPilotothercomment()

	/**
	 * Set the value of [pilotemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotemail !== $v) {
			$this->pilotemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTEMAIL;
		}

		return $this;
	} // setPilotemail()

	/**
	 * Set the value of [copilotfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotfirstname !== $v) {
			$this->copilotfirstname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTFIRSTNAME;
		}

		return $this;
	} // setCopilotfirstname()

	/**
	 * Set the value of [copilotlastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotlastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotlastname !== $v) {
			$this->copilotlastname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTLASTNAME;
		}

		return $this;
	} // setCopilotlastname()

	/**
	 * Set the value of [copilotdayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotdayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotdayphone !== $v) {
			$this->copilotdayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTDAYPHONE;
		}

		return $this;
	} // setCopilotdayphone()

	/**
	 * Set the value of [copilotdaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotdaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotdaycomment !== $v) {
			$this->copilotdaycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTDAYCOMMENT;
		}

		return $this;
	} // setCopilotdaycomment()

	/**
	 * Set the value of [copilotevephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotevephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotevephone !== $v) {
			$this->copilotevephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTEVEPHONE;
		}

		return $this;
	} // setCopilotevephone()

	/**
	 * Set the value of [copilotevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotevecomment !== $v) {
			$this->copilotevecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTEVECOMMENT;
		}

		return $this;
	} // setCopilotevecomment()

	/**
	 * Set the value of [copilotmobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotmobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotmobilephone !== $v) {
			$this->copilotmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTMOBILEPHONE;
		}

		return $this;
	} // setCopilotmobilephone()

	/**
	 * Set the value of [copilotmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotmobilecomment !== $v) {
			$this->copilotmobilecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTMOBILECOMMENT;
		}

		return $this;
	} // setCopilotmobilecomment()

	/**
	 * Set the value of [copilotpagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotpagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotpagerphone !== $v) {
			$this->copilotpagerphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTPAGERPHONE;
		}

		return $this;
	} // setCopilotpagerphone()

	/**
	 * Set the value of [copilotpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotpagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotpagercomment !== $v) {
			$this->copilotpagercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTPAGERCOMMENT;
		}

		return $this;
	} // setCopilotpagercomment()

	/**
	 * Set the value of [copilototherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilototherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilototherphone !== $v) {
			$this->copilototherphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTOTHERPHONE;
		}

		return $this;
	} // setCopilototherphone()

	/**
	 * Set the value of [copilotothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotothercomment !== $v) {
			$this->copilotothercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTOTHERCOMMENT;
		}

		return $this;
	} // setCopilotothercomment()

	/**
	 * Set the value of [copilotfaxphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotfaxphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotfaxphone !== $v) {
			$this->copilotfaxphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTFAXPHONE;
		}

		return $this;
	} // setCopilotfaxphone()

	/**
	 * Set the value of [copilotfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotfaxcomment !== $v) {
			$this->copilotfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTFAXCOMMENT;
		}

		return $this;
	} // setCopilotfaxcomment()

	/**
	 * Set the value of [copilotemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCopilotemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->copilotemail !== $v) {
			$this->copilotemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COPILOTEMAIL;
		}

		return $this;
	} // setCopilotemail()

	/**
	 * Set the value of [bupilotfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotfirstname !== $v) {
			$this->bupilotfirstname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTFIRSTNAME;
		}

		return $this;
	} // setBupilotfirstname()

	/**
	 * Set the value of [bupilotlastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotlastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotlastname !== $v) {
			$this->bupilotlastname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTLASTNAME;
		}

		return $this;
	} // setBupilotlastname()

	/**
	 * Set the value of [bupilotdayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotdayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotdayphone !== $v) {
			$this->bupilotdayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTDAYPHONE;
		}

		return $this;
	} // setBupilotdayphone()

	/**
	 * Set the value of [bupilotdaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotdaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotdaycomment !== $v) {
			$this->bupilotdaycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTDAYCOMMENT;
		}

		return $this;
	} // setBupilotdaycomment()

	/**
	 * Set the value of [bupilotevephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotevephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotevephone !== $v) {
			$this->bupilotevephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTEVEPHONE;
		}

		return $this;
	} // setBupilotevephone()

	/**
	 * Set the value of [bupilotevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotevecomment !== $v) {
			$this->bupilotevecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTEVECOMMENT;
		}

		return $this;
	} // setBupilotevecomment()

	/**
	 * Set the value of [bupilotmobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotmobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotmobilephone !== $v) {
			$this->bupilotmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTMOBILEPHONE;
		}

		return $this;
	} // setBupilotmobilephone()

	/**
	 * Set the value of [bupilotmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotmobilecomment !== $v) {
			$this->bupilotmobilecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTMOBILECOMMENT;
		}

		return $this;
	} // setBupilotmobilecomment()

	/**
	 * Set the value of [bupilotpagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotpagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotpagerphone !== $v) {
			$this->bupilotpagerphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTPAGERPHONE;
		}

		return $this;
	} // setBupilotpagerphone()

	/**
	 * Set the value of [bupilotpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotpagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotpagercomment !== $v) {
			$this->bupilotpagercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTPAGERCOMMENT;
		}

		return $this;
	} // setBupilotpagercomment()

	/**
	 * Set the value of [bupilototherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilototherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilototherphone !== $v) {
			$this->bupilototherphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTOTHERPHONE;
		}

		return $this;
	} // setBupilototherphone()

	/**
	 * Set the value of [bupilotothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotothercomment !== $v) {
			$this->bupilotothercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTOTHERCOMMENT;
		}

		return $this;
	} // setBupilotothercomment()

	/**
	 * Set the value of [bupilotfaxphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotfaxphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotfaxphone !== $v) {
			$this->bupilotfaxphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTFAXPHONE;
		}

		return $this;
	} // setBupilotfaxphone()

	/**
	 * Set the value of [bupilotfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotfaxcomment !== $v) {
			$this->bupilotfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTFAXCOMMENT;
		}

		return $this;
	} // setBupilotfaxcomment()

	/**
	 * Set the value of [bupilotemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setBupilotemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bupilotemail !== $v) {
			$this->bupilotemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::BUPILOTEMAIL;
		}

		return $this;
	} // setBupilotemail()

	/**
	 * Set the value of [coordfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordfirstname !== $v) {
			$this->coordfirstname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDFIRSTNAME;
		}

		return $this;
	} // setCoordfirstname()

	/**
	 * Set the value of [coordlastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordlastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordlastname !== $v) {
			$this->coordlastname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDLASTNAME;
		}

		return $this;
	} // setCoordlastname()

	/**
	 * Set the value of [coorddayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoorddayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coorddayphone !== $v) {
			$this->coorddayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDDAYPHONE;
		}

		return $this;
	} // setCoorddayphone()

	/**
	 * Set the value of [coorddaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoorddaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coorddaycomment !== $v) {
			$this->coorddaycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDDAYCOMMENT;
		}

		return $this;
	} // setCoorddaycomment()

	/**
	 * Set the value of [coordevephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordevephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordevephone !== $v) {
			$this->coordevephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDEVEPHONE;
		}

		return $this;
	} // setCoordevephone()

	/**
	 * Set the value of [coordevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordevecomment !== $v) {
			$this->coordevecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDEVECOMMENT;
		}

		return $this;
	} // setCoordevecomment()

	/**
	 * Set the value of [coordmobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordmobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordmobilephone !== $v) {
			$this->coordmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDMOBILEPHONE;
		}

		return $this;
	} // setCoordmobilephone()

	/**
	 * Set the value of [coordmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordmobilecomment !== $v) {
			$this->coordmobilecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDMOBILECOMMENT;
		}

		return $this;
	} // setCoordmobilecomment()

	/**
	 * Set the value of [coordpagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordpagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordpagerphone !== $v) {
			$this->coordpagerphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDPAGERPHONE;
		}

		return $this;
	} // setCoordpagerphone()

	/**
	 * Set the value of [coordpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordpagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordpagercomment !== $v) {
			$this->coordpagercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDPAGERCOMMENT;
		}

		return $this;
	} // setCoordpagercomment()

	/**
	 * Set the value of [coordotherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordotherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordotherphone !== $v) {
			$this->coordotherphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDOTHERPHONE;
		}

		return $this;
	} // setCoordotherphone()

	/**
	 * Set the value of [coordothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordothercomment !== $v) {
			$this->coordothercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDOTHERCOMMENT;
		}

		return $this;
	} // setCoordothercomment()

	/**
	 * Set the value of [coordfaxphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordfaxphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordfaxphone !== $v) {
			$this->coordfaxphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDFAXPHONE;
		}

		return $this;
	} // setCoordfaxphone()

	/**
	 * Set the value of [coordfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordfaxcomment !== $v) {
			$this->coordfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDFAXCOMMENT;
		}

		return $this;
	} // setCoordfaxcomment()

	/**
	 * Set the value of [coordemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCoordemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->coordemail !== $v) {
			$this->coordemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COORDEMAIL;
		}

		return $this;
	} // setCoordemail()

	/**
	 * Set the value of [requestername] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setRequestername($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->requestername !== $v || $v === '') {
			$this->requestername = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQUESTERNAME;
		}

		return $this;
	} // setRequestername()

	/**
	 * Set the value of [reqfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqfirstname !== $v) {
			$this->reqfirstname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQFIRSTNAME;
		}

		return $this;
	} // setReqfirstname()

	/**
	 * Set the value of [reqlastname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqlastname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqlastname !== $v) {
			$this->reqlastname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQLASTNAME;
		}

		return $this;
	} // setReqlastname()

	/**
	 * Set the value of [reqdayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqdayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqdayphone !== $v) {
			$this->reqdayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQDAYPHONE;
		}

		return $this;
	} // setReqdayphone()

	/**
	 * Set the value of [reqevephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqevephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqevephone !== $v) {
			$this->reqevephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQEVEPHONE;
		}

		return $this;
	} // setReqevephone()

	/**
	 * Set the value of [reqmobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqmobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqmobilephone !== $v) {
			$this->reqmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQMOBILEPHONE;
		}

		return $this;
	} // setReqmobilephone()

	/**
	 * Set the value of [reqpagerphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqpagerphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqpagerphone !== $v) {
			$this->reqpagerphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQPAGERPHONE;
		}

		return $this;
	} // setReqpagerphone()

	/**
	 * Set the value of [reqotherphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqotherphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqotherphone !== $v) {
			$this->reqotherphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQOTHERPHONE;
		}

		return $this;
	} // setReqotherphone()

	/**
	 * Set the value of [reqfaxphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqfaxphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqfaxphone !== $v) {
			$this->reqfaxphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQFAXPHONE;
		}

		return $this;
	} // setReqfaxphone()

	/**
	 * Set the value of [reqdaycomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqdaycomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqdaycomment !== $v) {
			$this->reqdaycomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQDAYCOMMENT;
		}

		return $this;
	} // setReqdaycomment()

	/**
	 * Set the value of [reqevecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqevecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqevecomment !== $v) {
			$this->reqevecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQEVECOMMENT;
		}

		return $this;
	} // setReqevecomment()

	/**
	 * Set the value of [reqpagercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqpagercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqpagercomment !== $v) {
			$this->reqpagercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQPAGERCOMMENT;
		}

		return $this;
	} // setReqpagercomment()

	/**
	 * Set the value of [reqmobilecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqmobilecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqmobilecomment !== $v) {
			$this->reqmobilecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQMOBILECOMMENT;
		}

		return $this;
	} // setReqmobilecomment()

	/**
	 * Set the value of [reqfaxcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqfaxcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqfaxcomment !== $v) {
			$this->reqfaxcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQFAXCOMMENT;
		}

		return $this;
	} // setReqfaxcomment()

	/**
	 * Set the value of [reqothercomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqothercomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqothercomment !== $v) {
			$this->reqothercomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQOTHERCOMMENT;
		}

		return $this;
	} // setReqothercomment()

	/**
	 * Set the value of [reqemail] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setReqemail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->reqemail !== $v) {
			$this->reqemail = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::REQEMAIL;
		}

		return $this;
	} // setReqemail()

	/**
	 * Set the value of [companionname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompanionname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companionname !== $v) {
			$this->companionname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONNAME;
		}

		return $this;
	} // setCompanionname()

	/**
	 * Set the value of [companionrelationship] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompanionrelationship($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companionrelationship !== $v) {
			$this->companionrelationship = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONRELATIONSHIP;
		}

		return $this;
	} // setCompanionrelationship()

	/**
	 * Set the value of [companiondob] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompaniondob($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companiondob !== $v) {
			$this->companiondob = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONDOB;
		}

		return $this;
	} // setCompaniondob()

	/**
	 * Set the value of [companionage] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompanionage($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companionage !== $v) {
			$this->companionage = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONAGE;
		}

		return $this;
	} // setCompanionage()

	/**
	 * Set the value of [companionweight] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompanionweight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->companionweight !== $v) {
			$this->companionweight = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONWEIGHT;
		}

		return $this;
	} // setCompanionweight()

	/**
	 * Set the value of [companionphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompanionphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companionphone !== $v) {
			$this->companionphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONPHONE;
		}

		return $this;
	} // setCompanionphone()

	/**
	 * Set the value of [companionphonecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCompanionphonecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companionphonecomment !== $v) {
			$this->companionphonecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::COMPANIONPHONECOMMENT;
		}

		return $this;
	} // setCompanionphonecomment()

	/**
	 * Set the value of [pilotname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setPilotname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilotname !== $v) {
			$this->pilotname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::PILOTNAME;
		}

		return $this;
	} // setPilotname()

	/**
	 * Set the value of [afadayphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfadayphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afadayphone !== $v) {
			$this->afadayphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFADAYPHONE;
		}

		return $this;
	} // setAfadayphone()

	/**
	 * Set the value of [afanightphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfanightphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afanightphone !== $v) {
			$this->afanightphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFANIGHTPHONE;
		}

		return $this;
	} // setAfanightphone()

	/**
	 * Set the value of [afafaxphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfafaxphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afafaxphone !== $v) {
			$this->afafaxphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFAFAXPHONE;
		}

		return $this;
	} // setAfafaxphone()

	/**
	 * Set the value of [afapilotmobilephone] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfapilotmobilephone($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->afapilotmobilephone !== $v) {
			$this->afapilotmobilephone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFAPILOTMOBILEPHONE;
		}

		return $this;
	} // setAfapilotmobilephone()

	/**
	 * Set the value of [afaaircraft] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfaaircraft($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afaaircraft !== $v) {
			$this->afaaircraft = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFAAIRCRAFT;
		}

		return $this;
	} // setAfaaircraft()

	/**
	 * Set the value of [afannumber] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfannumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afannumber !== $v) {
			$this->afannumber = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFANNUMBER;
		}

		return $this;
	} // setAfannumber()

	/**
	 * Set the value of [aircraftcolor] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAircraftcolor($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftcolor !== $v) {
			$this->aircraftcolor = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AIRCRAFTCOLOR;
		}

		return $this;
	} // setAircraftcolor()

	/**
	 * Set the value of [etd] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEtd($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->etd !== $v) {
			$this->etd = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::ETD;
		}

		return $this;
	} // setEtd()

	/**
	 * Set the value of [eta] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setEta($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->eta !== $v) {
			$this->eta = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::ETA;
		}

		return $this;
	} // setEta()

	/**
	 * Set the value of [afaorgname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfaorgname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afaorgname !== $v) {
			$this->afaorgname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFAORGNAME;
		}

		return $this;
	} // setAfaorgname()

	/**
	 * Set the value of [afaorgphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAfaorgphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->afaorgphone !== $v) {
			$this->afaorgphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AFAORGPHONE;
		}

		return $this;
	} // setAfaorgphone()

	/**
	 * Set the value of [fboname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFboname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fboname !== $v) {
			$this->fboname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FBONAME;
		}

		return $this;
	} // setFboname()

	/**
	 * Set the value of [fbophone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFbophone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fbophone !== $v) {
			$this->fbophone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FBOPHONE;
		}

		return $this;
	} // setFbophone()

	/**
	 * Set the value of [fbofax] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFbofax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fbofax !== $v) {
			$this->fbofax = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FBOFAX;
		}

		return $this;
	} // setFbofax()

	/**
	 * Set the value of [fbofueldiscount] column.
	 * 
	 * @param      double $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFbofueldiscount($v)
	{
		if ($v !== null) {
			$v = (double) $v;
		}

		if ($this->fbofueldiscount !== $v) {
			$this->fbofueldiscount = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FBOFUELDISCOUNT;
		}

		return $this;
	} // setFbofueldiscount()

	/**
	 * Set the value of [fboairportident] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFboairportident($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fboairportident !== $v) {
			$this->fboairportident = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FBOAIRPORTIDENT;
		}

		return $this;
	} // setFboairportident()

	/**
	 * Set the value of [aircraftseats] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAircraftseats($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraftseats !== $v) {
			$this->aircraftseats = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AIRCRAFTSEATS;
		}

		return $this;
	} // setAircraftseats()

	/**
	 * Set the value of [aircraftnnumber] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAircraftnnumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftnnumber !== $v) {
			$this->aircraftnnumber = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AIRCRAFTNNUMBER;
		}

		return $this;
	} // setAircraftnnumber()

	/**
	 * Set the value of [aircraftknownice] column.
	 * 
	 * @param      int $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAircraftknownice($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraftknownice !== $v) {
			$this->aircraftknownice = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AIRCRAFTKNOWNICE;
		}

		return $this;
	} // setAircraftknownice()

	/**
	 * Set the value of [aircraftmake] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAircraftmake($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftmake !== $v) {
			$this->aircraftmake = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AIRCRAFTMAKE;
		}

		return $this;
	} // setAircraftmake()

	/**
	 * Set the value of [aircraftmodel] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setAircraftmodel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraftmodel !== $v) {
			$this->aircraftmodel = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::AIRCRAFTMODEL;
		}

		return $this;
	} // setAircraftmodel()

	/**
	 * Set the value of [campname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCampname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->campname !== $v) {
			$this->campname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPNAME;
		}

		return $this;
	} // setCampname()

	/**
	 * Set the value of [campphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCampphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->campphone !== $v) {
			$this->campphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPPHONE;
		}

		return $this;
	} // setCampphone()

	/**
	 * Set the value of [campphonecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCampphonecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->campphonecomment !== $v) {
			$this->campphonecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPPHONECOMMENT;
		}

		return $this;
	} // setCampphonecomment()

	/**
	 * Set the value of [camplodgingname] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCamplodgingname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->camplodgingname !== $v) {
			$this->camplodgingname = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPLODGINGNAME;
		}

		return $this;
	} // setCamplodgingname()

	/**
	 * Set the value of [camplodgingphone] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCamplodgingphone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->camplodgingphone !== $v) {
			$this->camplodgingphone = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPLODGINGPHONE;
		}

		return $this;
	} // setCamplodgingphone()

	/**
	 * Set the value of [camplodgingphonecomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCamplodgingphonecomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->camplodgingphonecomment !== $v) {
			$this->camplodgingphonecomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPLODGINGPHONECOMMENT;
		}

		return $this;
	} // setCamplodgingphonecomment()

	/**
	 * Set the value of [campcomment] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setCampcomment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->campcomment !== $v) {
			$this->campcomment = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::CAMPCOMMENT;
		}

		return $this;
	} // setCampcomment()

	/**
	 * Set the value of [flightinformation] column.
	 * 
	 * @param      string $v new value
	 * @return     RpMissionItinerary The current object (for fluent API support)
	 */
	public function setFlightinformation($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->flightinformation !== $v) {
			$this->flightinformation = $v;
			$this->modifiedColumns[] = RpMissionItineraryPeer::FLIGHTINFORMATION;
		}

		return $this;
	} // setFlightinformation()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array(RpMissionItineraryPeer::MISSIONID,RpMissionItineraryPeer::REQUESTERNAME))) {
				return false;
			}

			if ($this->missionid !== 0) {
				return false;
			}

			if ($this->requestername !== '') {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->now = ($row[$startcol + 0] !== null) ? (string) $row[$startcol + 0] : null;
			$this->missionid = ($row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			$this->externalid = ($row[$startcol + 2] !== null) ? (int) $row[$startcol + 2] : null;
			$this->missiontypeid = ($row[$startcol + 3] !== null) ? (int) $row[$startcol + 3] : null;
			$this->missiondate = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->apptdate = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->flighttime = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->releasingphysician = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->releasingphone = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->releasingfax = ($row[$startcol + 9] !== null) ? (int) $row[$startcol + 9] : null;
			$this->releasingfaxcomment = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->releasingemail = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->lodging = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->lodgingphone = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->lodging_phone_comment = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->facilityname = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->facilityphone = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->facilityphonecomment = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->publicconsiderations = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->privateconsiderations = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->illness = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->groundtransportationcomment = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->treatingphysician = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->treatingphone = ($row[$startcol + 23] !== null) ? (int) $row[$startcol + 23] : null;
			$this->treatingfax = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->treatingfaxcomment = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->treatingemail = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->languagespoken = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->bestcontactmethod = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->emergencycontactname = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->emergencycontactprimaryphone = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->emergencycontactsecondaryphone = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->emergencycontactprimarycomment = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->emergencycontactsecondarycomment = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->passfirstname = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->passlastname = ($row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->passcity = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->passstate = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->passzipcode = ($row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->passage = ($row[$startcol + 39] !== null) ? (string) $row[$startcol + 39] : null;
			$this->passweight = ($row[$startcol + 40] !== null) ? (int) $row[$startcol + 40] : null;
			$this->passdayphone = ($row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->passdaycomment = ($row[$startcol + 42] !== null) ? (string) $row[$startcol + 42] : null;
			$this->passevephone = ($row[$startcol + 43] !== null) ? (string) $row[$startcol + 43] : null;
			$this->passevecomment = ($row[$startcol + 44] !== null) ? (string) $row[$startcol + 44] : null;
			$this->passpagerphone = ($row[$startcol + 45] !== null) ? (string) $row[$startcol + 45] : null;
			$this->passpagercomment = ($row[$startcol + 46] !== null) ? (string) $row[$startcol + 46] : null;
			$this->passmobilephone = ($row[$startcol + 47] !== null) ? (string) $row[$startcol + 47] : null;
			$this->passmobilecomment = ($row[$startcol + 48] !== null) ? (string) $row[$startcol + 48] : null;
			$this->passotherphone = ($row[$startcol + 49] !== null) ? (string) $row[$startcol + 49] : null;
			$this->passothercomment = ($row[$startcol + 50] !== null) ? (string) $row[$startcol + 50] : null;
			$this->passfaxphone1 = ($row[$startcol + 51] !== null) ? (string) $row[$startcol + 51] : null;
			$this->passfax1comment = ($row[$startcol + 52] !== null) ? (string) $row[$startcol + 52] : null;
			$this->passemail = ($row[$startcol + 53] !== null) ? (string) $row[$startcol + 53] : null;
			$this->passaddressone = ($row[$startcol + 54] !== null) ? (string) $row[$startcol + 54] : null;
			$this->passaddresstwo = ($row[$startcol + 55] !== null) ? (string) $row[$startcol + 55] : null;
			$this->comment = ($row[$startcol + 56] !== null) ? (string) $row[$startcol + 56] : null;
			$this->id = ($row[$startcol + 57] !== null) ? (int) $row[$startcol + 57] : null;
			$this->legnumber = ($row[$startcol + 58] !== null) ? (int) $row[$startcol + 58] : null;
			$this->passonboard = ($row[$startcol + 59] !== null) ? (int) $row[$startcol + 59] : null;
			$this->baggageweight = ($row[$startcol + 60] !== null) ? (int) $row[$startcol + 60] : null;
			$this->baggagedesc = ($row[$startcol + 61] !== null) ? (string) $row[$startcol + 61] : null;
			$this->publiccnote = ($row[$startcol + 62] !== null) ? (string) $row[$startcol + 62] : null;
			$this->privatecnote = ($row[$startcol + 63] !== null) ? (string) $row[$startcol + 63] : null;
			$this->copilotwanted = ($row[$startcol + 64] !== null) ? (int) $row[$startcol + 64] : null;
			$this->fromairportident = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->fromairportname = ($row[$startcol + 66] !== null) ? (string) $row[$startcol + 66] : null;
			$this->fromairportcity = ($row[$startcol + 67] !== null) ? (string) $row[$startcol + 67] : null;
			$this->fromairportstate = ($row[$startcol + 68] !== null) ? (string) $row[$startcol + 68] : null;
			$this->fromairportgmtoffset = ($row[$startcol + 69] !== null) ? (int) $row[$startcol + 69] : null;
			$this->fromairportdstoffset = ($row[$startcol + 70] !== null) ? (int) $row[$startcol + 70] : null;
			$this->toairportident = ($row[$startcol + 71] !== null) ? (string) $row[$startcol + 71] : null;
			$this->toairportname = ($row[$startcol + 72] !== null) ? (string) $row[$startcol + 72] : null;
			$this->toairportcity = ($row[$startcol + 73] !== null) ? (string) $row[$startcol + 73] : null;
			$this->toairportstate = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->toairportgmtoffset = ($row[$startcol + 75] !== null) ? (int) $row[$startcol + 75] : null;
			$this->toairportdstoffset = ($row[$startcol + 76] !== null) ? (int) $row[$startcol + 76] : null;
			$this->pilotfirstname = ($row[$startcol + 77] !== null) ? (string) $row[$startcol + 77] : null;
			$this->pilotlastname = ($row[$startcol + 78] !== null) ? (string) $row[$startcol + 78] : null;
			$this->pilotdayphone = ($row[$startcol + 79] !== null) ? (string) $row[$startcol + 79] : null;
			$this->pilotdaycomment = ($row[$startcol + 80] !== null) ? (string) $row[$startcol + 80] : null;
			$this->pilotevephone = ($row[$startcol + 81] !== null) ? (string) $row[$startcol + 81] : null;
			$this->pilotevecomment = ($row[$startcol + 82] !== null) ? (string) $row[$startcol + 82] : null;
			$this->pilotfaxphone = ($row[$startcol + 83] !== null) ? (string) $row[$startcol + 83] : null;
			$this->pilotfaxcomment = ($row[$startcol + 84] !== null) ? (string) $row[$startcol + 84] : null;
			$this->pilotmobilephone = ($row[$startcol + 85] !== null) ? (string) $row[$startcol + 85] : null;
			$this->pilotmobilecomment = ($row[$startcol + 86] !== null) ? (string) $row[$startcol + 86] : null;
			$this->pilotpagerphone = ($row[$startcol + 87] !== null) ? (string) $row[$startcol + 87] : null;
			$this->pilotpagercomment = ($row[$startcol + 88] !== null) ? (string) $row[$startcol + 88] : null;
			$this->pilototherphone = ($row[$startcol + 89] !== null) ? (string) $row[$startcol + 89] : null;
			$this->pilotothercomment = ($row[$startcol + 90] !== null) ? (string) $row[$startcol + 90] : null;
			$this->pilotemail = ($row[$startcol + 91] !== null) ? (string) $row[$startcol + 91] : null;
			$this->copilotfirstname = ($row[$startcol + 92] !== null) ? (string) $row[$startcol + 92] : null;
			$this->copilotlastname = ($row[$startcol + 93] !== null) ? (string) $row[$startcol + 93] : null;
			$this->copilotdayphone = ($row[$startcol + 94] !== null) ? (string) $row[$startcol + 94] : null;
			$this->copilotdaycomment = ($row[$startcol + 95] !== null) ? (string) $row[$startcol + 95] : null;
			$this->copilotevephone = ($row[$startcol + 96] !== null) ? (string) $row[$startcol + 96] : null;
			$this->copilotevecomment = ($row[$startcol + 97] !== null) ? (string) $row[$startcol + 97] : null;
			$this->copilotmobilephone = ($row[$startcol + 98] !== null) ? (string) $row[$startcol + 98] : null;
			$this->copilotmobilecomment = ($row[$startcol + 99] !== null) ? (string) $row[$startcol + 99] : null;
			$this->copilotpagerphone = ($row[$startcol + 100] !== null) ? (string) $row[$startcol + 100] : null;
			$this->copilotpagercomment = ($row[$startcol + 101] !== null) ? (string) $row[$startcol + 101] : null;
			$this->copilototherphone = ($row[$startcol + 102] !== null) ? (string) $row[$startcol + 102] : null;
			$this->copilotothercomment = ($row[$startcol + 103] !== null) ? (string) $row[$startcol + 103] : null;
			$this->copilotfaxphone = ($row[$startcol + 104] !== null) ? (string) $row[$startcol + 104] : null;
			$this->copilotfaxcomment = ($row[$startcol + 105] !== null) ? (string) $row[$startcol + 105] : null;
			$this->copilotemail = ($row[$startcol + 106] !== null) ? (string) $row[$startcol + 106] : null;
			$this->bupilotfirstname = ($row[$startcol + 107] !== null) ? (string) $row[$startcol + 107] : null;
			$this->bupilotlastname = ($row[$startcol + 108] !== null) ? (string) $row[$startcol + 108] : null;
			$this->bupilotdayphone = ($row[$startcol + 109] !== null) ? (string) $row[$startcol + 109] : null;
			$this->bupilotdaycomment = ($row[$startcol + 110] !== null) ? (string) $row[$startcol + 110] : null;
			$this->bupilotevephone = ($row[$startcol + 111] !== null) ? (string) $row[$startcol + 111] : null;
			$this->bupilotevecomment = ($row[$startcol + 112] !== null) ? (string) $row[$startcol + 112] : null;
			$this->bupilotmobilephone = ($row[$startcol + 113] !== null) ? (string) $row[$startcol + 113] : null;
			$this->bupilotmobilecomment = ($row[$startcol + 114] !== null) ? (string) $row[$startcol + 114] : null;
			$this->bupilotpagerphone = ($row[$startcol + 115] !== null) ? (string) $row[$startcol + 115] : null;
			$this->bupilotpagercomment = ($row[$startcol + 116] !== null) ? (string) $row[$startcol + 116] : null;
			$this->bupilototherphone = ($row[$startcol + 117] !== null) ? (string) $row[$startcol + 117] : null;
			$this->bupilotothercomment = ($row[$startcol + 118] !== null) ? (string) $row[$startcol + 118] : null;
			$this->bupilotfaxphone = ($row[$startcol + 119] !== null) ? (string) $row[$startcol + 119] : null;
			$this->bupilotfaxcomment = ($row[$startcol + 120] !== null) ? (string) $row[$startcol + 120] : null;
			$this->bupilotemail = ($row[$startcol + 121] !== null) ? (string) $row[$startcol + 121] : null;
			$this->coordfirstname = ($row[$startcol + 122] !== null) ? (string) $row[$startcol + 122] : null;
			$this->coordlastname = ($row[$startcol + 123] !== null) ? (string) $row[$startcol + 123] : null;
			$this->coorddayphone = ($row[$startcol + 124] !== null) ? (string) $row[$startcol + 124] : null;
			$this->coorddaycomment = ($row[$startcol + 125] !== null) ? (string) $row[$startcol + 125] : null;
			$this->coordevephone = ($row[$startcol + 126] !== null) ? (string) $row[$startcol + 126] : null;
			$this->coordevecomment = ($row[$startcol + 127] !== null) ? (string) $row[$startcol + 127] : null;
			$this->coordmobilephone = ($row[$startcol + 128] !== null) ? (string) $row[$startcol + 128] : null;
			$this->coordmobilecomment = ($row[$startcol + 129] !== null) ? (string) $row[$startcol + 129] : null;
			$this->coordpagerphone = ($row[$startcol + 130] !== null) ? (string) $row[$startcol + 130] : null;
			$this->coordpagercomment = ($row[$startcol + 131] !== null) ? (string) $row[$startcol + 131] : null;
			$this->coordotherphone = ($row[$startcol + 132] !== null) ? (string) $row[$startcol + 132] : null;
			$this->coordothercomment = ($row[$startcol + 133] !== null) ? (string) $row[$startcol + 133] : null;
			$this->coordfaxphone = ($row[$startcol + 134] !== null) ? (string) $row[$startcol + 134] : null;
			$this->coordfaxcomment = ($row[$startcol + 135] !== null) ? (string) $row[$startcol + 135] : null;
			$this->coordemail = ($row[$startcol + 136] !== null) ? (string) $row[$startcol + 136] : null;
			$this->requestername = ($row[$startcol + 137] !== null) ? (string) $row[$startcol + 137] : null;
			$this->reqfirstname = ($row[$startcol + 138] !== null) ? (string) $row[$startcol + 138] : null;
			$this->reqlastname = ($row[$startcol + 139] !== null) ? (string) $row[$startcol + 139] : null;
			$this->reqdayphone = ($row[$startcol + 140] !== null) ? (string) $row[$startcol + 140] : null;
			$this->reqevephone = ($row[$startcol + 141] !== null) ? (string) $row[$startcol + 141] : null;
			$this->reqmobilephone = ($row[$startcol + 142] !== null) ? (string) $row[$startcol + 142] : null;
			$this->reqpagerphone = ($row[$startcol + 143] !== null) ? (string) $row[$startcol + 143] : null;
			$this->reqotherphone = ($row[$startcol + 144] !== null) ? (string) $row[$startcol + 144] : null;
			$this->reqfaxphone = ($row[$startcol + 145] !== null) ? (string) $row[$startcol + 145] : null;
			$this->reqdaycomment = ($row[$startcol + 146] !== null) ? (string) $row[$startcol + 146] : null;
			$this->reqevecomment = ($row[$startcol + 147] !== null) ? (string) $row[$startcol + 147] : null;
			$this->reqpagercomment = ($row[$startcol + 148] !== null) ? (string) $row[$startcol + 148] : null;
			$this->reqmobilecomment = ($row[$startcol + 149] !== null) ? (string) $row[$startcol + 149] : null;
			$this->reqfaxcomment = ($row[$startcol + 150] !== null) ? (string) $row[$startcol + 150] : null;
			$this->reqothercomment = ($row[$startcol + 151] !== null) ? (string) $row[$startcol + 151] : null;
			$this->reqemail = ($row[$startcol + 152] !== null) ? (string) $row[$startcol + 152] : null;
			$this->companionname = ($row[$startcol + 153] !== null) ? (string) $row[$startcol + 153] : null;
			$this->companionrelationship = ($row[$startcol + 154] !== null) ? (string) $row[$startcol + 154] : null;
			$this->companiondob = ($row[$startcol + 155] !== null) ? (string) $row[$startcol + 155] : null;
			$this->companionage = ($row[$startcol + 156] !== null) ? (string) $row[$startcol + 156] : null;
			$this->companionweight = ($row[$startcol + 157] !== null) ? (int) $row[$startcol + 157] : null;
			$this->companionphone = ($row[$startcol + 158] !== null) ? (string) $row[$startcol + 158] : null;
			$this->companionphonecomment = ($row[$startcol + 159] !== null) ? (string) $row[$startcol + 159] : null;
			$this->pilotname = ($row[$startcol + 160] !== null) ? (string) $row[$startcol + 160] : null;
			$this->afadayphone = ($row[$startcol + 161] !== null) ? (string) $row[$startcol + 161] : null;
			$this->afanightphone = ($row[$startcol + 162] !== null) ? (string) $row[$startcol + 162] : null;
			$this->afafaxphone = ($row[$startcol + 163] !== null) ? (string) $row[$startcol + 163] : null;
			$this->afapilotmobilephone = ($row[$startcol + 164] !== null) ? (int) $row[$startcol + 164] : null;
			$this->afaaircraft = ($row[$startcol + 165] !== null) ? (string) $row[$startcol + 165] : null;
			$this->afannumber = ($row[$startcol + 166] !== null) ? (string) $row[$startcol + 166] : null;
			$this->aircraftcolor = ($row[$startcol + 167] !== null) ? (string) $row[$startcol + 167] : null;
			$this->etd = ($row[$startcol + 168] !== null) ? (string) $row[$startcol + 168] : null;
			$this->eta = ($row[$startcol + 169] !== null) ? (string) $row[$startcol + 169] : null;
			$this->afaorgname = ($row[$startcol + 170] !== null) ? (string) $row[$startcol + 170] : null;
			$this->afaorgphone = ($row[$startcol + 171] !== null) ? (string) $row[$startcol + 171] : null;
			$this->fboname = ($row[$startcol + 172] !== null) ? (string) $row[$startcol + 172] : null;
			$this->fbophone = ($row[$startcol + 173] !== null) ? (string) $row[$startcol + 173] : null;
			$this->fbofax = ($row[$startcol + 174] !== null) ? (string) $row[$startcol + 174] : null;
			$this->fbofueldiscount = ($row[$startcol + 175] !== null) ? (double) $row[$startcol + 175] : null;
			$this->fboairportident = ($row[$startcol + 176] !== null) ? (string) $row[$startcol + 176] : null;
			$this->aircraftseats = ($row[$startcol + 177] !== null) ? (int) $row[$startcol + 177] : null;
			$this->aircraftnnumber = ($row[$startcol + 178] !== null) ? (string) $row[$startcol + 178] : null;
			$this->aircraftknownice = ($row[$startcol + 179] !== null) ? (int) $row[$startcol + 179] : null;
			$this->aircraftmake = ($row[$startcol + 180] !== null) ? (string) $row[$startcol + 180] : null;
			$this->aircraftmodel = ($row[$startcol + 181] !== null) ? (string) $row[$startcol + 181] : null;
			$this->campname = ($row[$startcol + 182] !== null) ? (string) $row[$startcol + 182] : null;
			$this->campphone = ($row[$startcol + 183] !== null) ? (string) $row[$startcol + 183] : null;
			$this->campphonecomment = ($row[$startcol + 184] !== null) ? (string) $row[$startcol + 184] : null;
			$this->camplodgingname = ($row[$startcol + 185] !== null) ? (string) $row[$startcol + 185] : null;
			$this->camplodgingphone = ($row[$startcol + 186] !== null) ? (string) $row[$startcol + 186] : null;
			$this->camplodgingphonecomment = ($row[$startcol + 187] !== null) ? (string) $row[$startcol + 187] : null;
			$this->campcomment = ($row[$startcol + 188] !== null) ? (string) $row[$startcol + 188] : null;
			$this->flightinformation = ($row[$startcol + 189] !== null) ? (string) $row[$startcol + 189] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 190; // 190 = RpMissionItineraryPeer::NUM_COLUMNS - RpMissionItineraryPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating RpMissionItinerary object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(RpMissionItineraryPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = RpMissionItineraryPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseRpMissionItinerary:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(RpMissionItineraryPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			RpMissionItineraryPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseRpMissionItinerary:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseRpMissionItinerary:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(RpMissionItineraryPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseRpMissionItinerary:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			RpMissionItineraryPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = RpMissionItineraryPeer::ID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = RpMissionItineraryPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setId($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += RpMissionItineraryPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = RpMissionItineraryPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = RpMissionItineraryPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getNow();
				break;
			case 1:
				return $this->getMissionid();
				break;
			case 2:
				return $this->getExternalid();
				break;
			case 3:
				return $this->getMissiontypeid();
				break;
			case 4:
				return $this->getMissiondate();
				break;
			case 5:
				return $this->getApptdate();
				break;
			case 6:
				return $this->getFlighttime();
				break;
			case 7:
				return $this->getReleasingphysician();
				break;
			case 8:
				return $this->getReleasingphone();
				break;
			case 9:
				return $this->getReleasingfax();
				break;
			case 10:
				return $this->getReleasingfaxcomment();
				break;
			case 11:
				return $this->getReleasingemail();
				break;
			case 12:
				return $this->getLodging();
				break;
			case 13:
				return $this->getLodgingphone();
				break;
			case 14:
				return $this->getLodgingPhoneComment();
				break;
			case 15:
				return $this->getFacilityname();
				break;
			case 16:
				return $this->getFacilityphone();
				break;
			case 17:
				return $this->getFacilityphonecomment();
				break;
			case 18:
				return $this->getPublicconsiderations();
				break;
			case 19:
				return $this->getPrivateconsiderations();
				break;
			case 20:
				return $this->getIllness();
				break;
			case 21:
				return $this->getGroundtransportationcomment();
				break;
			case 22:
				return $this->getTreatingphysician();
				break;
			case 23:
				return $this->getTreatingphone();
				break;
			case 24:
				return $this->getTreatingfax();
				break;
			case 25:
				return $this->getTreatingfaxcomment();
				break;
			case 26:
				return $this->getTreatingemail();
				break;
			case 27:
				return $this->getLanguagespoken();
				break;
			case 28:
				return $this->getBestcontactmethod();
				break;
			case 29:
				return $this->getEmergencycontactname();
				break;
			case 30:
				return $this->getEmergencycontactprimaryphone();
				break;
			case 31:
				return $this->getEmergencycontactsecondaryphone();
				break;
			case 32:
				return $this->getEmergencycontactprimarycomment();
				break;
			case 33:
				return $this->getEmergencycontactsecondarycomment();
				break;
			case 34:
				return $this->getPassfirstname();
				break;
			case 35:
				return $this->getPasslastname();
				break;
			case 36:
				return $this->getPasscity();
				break;
			case 37:
				return $this->getPassstate();
				break;
			case 38:
				return $this->getPasszipcode();
				break;
			case 39:
				return $this->getPassage();
				break;
			case 40:
				return $this->getPassweight();
				break;
			case 41:
				return $this->getPassdayphone();
				break;
			case 42:
				return $this->getPassdaycomment();
				break;
			case 43:
				return $this->getPassevephone();
				break;
			case 44:
				return $this->getPassevecomment();
				break;
			case 45:
				return $this->getPasspagerphone();
				break;
			case 46:
				return $this->getPasspagercomment();
				break;
			case 47:
				return $this->getPassmobilephone();
				break;
			case 48:
				return $this->getPassmobilecomment();
				break;
			case 49:
				return $this->getPassotherphone();
				break;
			case 50:
				return $this->getPassothercomment();
				break;
			case 51:
				return $this->getPassfaxphone1();
				break;
			case 52:
				return $this->getPassfax1comment();
				break;
			case 53:
				return $this->getPassemail();
				break;
			case 54:
				return $this->getPassaddressone();
				break;
			case 55:
				return $this->getPassaddresstwo();
				break;
			case 56:
				return $this->getComment();
				break;
			case 57:
				return $this->getId();
				break;
			case 58:
				return $this->getLegnumber();
				break;
			case 59:
				return $this->getPassonboard();
				break;
			case 60:
				return $this->getBaggageweight();
				break;
			case 61:
				return $this->getBaggagedesc();
				break;
			case 62:
				return $this->getPubliccnote();
				break;
			case 63:
				return $this->getPrivatecnote();
				break;
			case 64:
				return $this->getCopilotwanted();
				break;
			case 65:
				return $this->getFromairportident();
				break;
			case 66:
				return $this->getFromairportname();
				break;
			case 67:
				return $this->getFromairportcity();
				break;
			case 68:
				return $this->getFromairportstate();
				break;
			case 69:
				return $this->getFromairportgmtoffset();
				break;
			case 70:
				return $this->getFromairportdstoffset();
				break;
			case 71:
				return $this->getToairportident();
				break;
			case 72:
				return $this->getToairportname();
				break;
			case 73:
				return $this->getToairportcity();
				break;
			case 74:
				return $this->getToairportstate();
				break;
			case 75:
				return $this->getToairportgmtoffset();
				break;
			case 76:
				return $this->getToairportdstoffset();
				break;
			case 77:
				return $this->getPilotfirstname();
				break;
			case 78:
				return $this->getPilotlastname();
				break;
			case 79:
				return $this->getPilotdayphone();
				break;
			case 80:
				return $this->getPilotdaycomment();
				break;
			case 81:
				return $this->getPilotevephone();
				break;
			case 82:
				return $this->getPilotevecomment();
				break;
			case 83:
				return $this->getPilotfaxphone();
				break;
			case 84:
				return $this->getPilotfaxcomment();
				break;
			case 85:
				return $this->getPilotmobilephone();
				break;
			case 86:
				return $this->getPilotmobilecomment();
				break;
			case 87:
				return $this->getPilotpagerphone();
				break;
			case 88:
				return $this->getPilotpagercomment();
				break;
			case 89:
				return $this->getPilototherphone();
				break;
			case 90:
				return $this->getPilotothercomment();
				break;
			case 91:
				return $this->getPilotemail();
				break;
			case 92:
				return $this->getCopilotfirstname();
				break;
			case 93:
				return $this->getCopilotlastname();
				break;
			case 94:
				return $this->getCopilotdayphone();
				break;
			case 95:
				return $this->getCopilotdaycomment();
				break;
			case 96:
				return $this->getCopilotevephone();
				break;
			case 97:
				return $this->getCopilotevecomment();
				break;
			case 98:
				return $this->getCopilotmobilephone();
				break;
			case 99:
				return $this->getCopilotmobilecomment();
				break;
			case 100:
				return $this->getCopilotpagerphone();
				break;
			case 101:
				return $this->getCopilotpagercomment();
				break;
			case 102:
				return $this->getCopilototherphone();
				break;
			case 103:
				return $this->getCopilotothercomment();
				break;
			case 104:
				return $this->getCopilotfaxphone();
				break;
			case 105:
				return $this->getCopilotfaxcomment();
				break;
			case 106:
				return $this->getCopilotemail();
				break;
			case 107:
				return $this->getBupilotfirstname();
				break;
			case 108:
				return $this->getBupilotlastname();
				break;
			case 109:
				return $this->getBupilotdayphone();
				break;
			case 110:
				return $this->getBupilotdaycomment();
				break;
			case 111:
				return $this->getBupilotevephone();
				break;
			case 112:
				return $this->getBupilotevecomment();
				break;
			case 113:
				return $this->getBupilotmobilephone();
				break;
			case 114:
				return $this->getBupilotmobilecomment();
				break;
			case 115:
				return $this->getBupilotpagerphone();
				break;
			case 116:
				return $this->getBupilotpagercomment();
				break;
			case 117:
				return $this->getBupilototherphone();
				break;
			case 118:
				return $this->getBupilotothercomment();
				break;
			case 119:
				return $this->getBupilotfaxphone();
				break;
			case 120:
				return $this->getBupilotfaxcomment();
				break;
			case 121:
				return $this->getBupilotemail();
				break;
			case 122:
				return $this->getCoordfirstname();
				break;
			case 123:
				return $this->getCoordlastname();
				break;
			case 124:
				return $this->getCoorddayphone();
				break;
			case 125:
				return $this->getCoorddaycomment();
				break;
			case 126:
				return $this->getCoordevephone();
				break;
			case 127:
				return $this->getCoordevecomment();
				break;
			case 128:
				return $this->getCoordmobilephone();
				break;
			case 129:
				return $this->getCoordmobilecomment();
				break;
			case 130:
				return $this->getCoordpagerphone();
				break;
			case 131:
				return $this->getCoordpagercomment();
				break;
			case 132:
				return $this->getCoordotherphone();
				break;
			case 133:
				return $this->getCoordothercomment();
				break;
			case 134:
				return $this->getCoordfaxphone();
				break;
			case 135:
				return $this->getCoordfaxcomment();
				break;
			case 136:
				return $this->getCoordemail();
				break;
			case 137:
				return $this->getRequestername();
				break;
			case 138:
				return $this->getReqfirstname();
				break;
			case 139:
				return $this->getReqlastname();
				break;
			case 140:
				return $this->getReqdayphone();
				break;
			case 141:
				return $this->getReqevephone();
				break;
			case 142:
				return $this->getReqmobilephone();
				break;
			case 143:
				return $this->getReqpagerphone();
				break;
			case 144:
				return $this->getReqotherphone();
				break;
			case 145:
				return $this->getReqfaxphone();
				break;
			case 146:
				return $this->getReqdaycomment();
				break;
			case 147:
				return $this->getReqevecomment();
				break;
			case 148:
				return $this->getReqpagercomment();
				break;
			case 149:
				return $this->getReqmobilecomment();
				break;
			case 150:
				return $this->getReqfaxcomment();
				break;
			case 151:
				return $this->getReqothercomment();
				break;
			case 152:
				return $this->getReqemail();
				break;
			case 153:
				return $this->getCompanionname();
				break;
			case 154:
				return $this->getCompanionrelationship();
				break;
			case 155:
				return $this->getCompaniondob();
				break;
			case 156:
				return $this->getCompanionage();
				break;
			case 157:
				return $this->getCompanionweight();
				break;
			case 158:
				return $this->getCompanionphone();
				break;
			case 159:
				return $this->getCompanionphonecomment();
				break;
			case 160:
				return $this->getPilotname();
				break;
			case 161:
				return $this->getAfadayphone();
				break;
			case 162:
				return $this->getAfanightphone();
				break;
			case 163:
				return $this->getAfafaxphone();
				break;
			case 164:
				return $this->getAfapilotmobilephone();
				break;
			case 165:
				return $this->getAfaaircraft();
				break;
			case 166:
				return $this->getAfannumber();
				break;
			case 167:
				return $this->getAircraftcolor();
				break;
			case 168:
				return $this->getEtd();
				break;
			case 169:
				return $this->getEta();
				break;
			case 170:
				return $this->getAfaorgname();
				break;
			case 171:
				return $this->getAfaorgphone();
				break;
			case 172:
				return $this->getFboname();
				break;
			case 173:
				return $this->getFbophone();
				break;
			case 174:
				return $this->getFbofax();
				break;
			case 175:
				return $this->getFbofueldiscount();
				break;
			case 176:
				return $this->getFboairportident();
				break;
			case 177:
				return $this->getAircraftseats();
				break;
			case 178:
				return $this->getAircraftnnumber();
				break;
			case 179:
				return $this->getAircraftknownice();
				break;
			case 180:
				return $this->getAircraftmake();
				break;
			case 181:
				return $this->getAircraftmodel();
				break;
			case 182:
				return $this->getCampname();
				break;
			case 183:
				return $this->getCampphone();
				break;
			case 184:
				return $this->getCampphonecomment();
				break;
			case 185:
				return $this->getCamplodgingname();
				break;
			case 186:
				return $this->getCamplodgingphone();
				break;
			case 187:
				return $this->getCamplodgingphonecomment();
				break;
			case 188:
				return $this->getCampcomment();
				break;
			case 189:
				return $this->getFlightinformation();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = RpMissionItineraryPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getNow(),
			$keys[1] => $this->getMissionid(),
			$keys[2] => $this->getExternalid(),
			$keys[3] => $this->getMissiontypeid(),
			$keys[4] => $this->getMissiondate(),
			$keys[5] => $this->getApptdate(),
			$keys[6] => $this->getFlighttime(),
			$keys[7] => $this->getReleasingphysician(),
			$keys[8] => $this->getReleasingphone(),
			$keys[9] => $this->getReleasingfax(),
			$keys[10] => $this->getReleasingfaxcomment(),
			$keys[11] => $this->getReleasingemail(),
			$keys[12] => $this->getLodging(),
			$keys[13] => $this->getLodgingphone(),
			$keys[14] => $this->getLodgingPhoneComment(),
			$keys[15] => $this->getFacilityname(),
			$keys[16] => $this->getFacilityphone(),
			$keys[17] => $this->getFacilityphonecomment(),
			$keys[18] => $this->getPublicconsiderations(),
			$keys[19] => $this->getPrivateconsiderations(),
			$keys[20] => $this->getIllness(),
			$keys[21] => $this->getGroundtransportationcomment(),
			$keys[22] => $this->getTreatingphysician(),
			$keys[23] => $this->getTreatingphone(),
			$keys[24] => $this->getTreatingfax(),
			$keys[25] => $this->getTreatingfaxcomment(),
			$keys[26] => $this->getTreatingemail(),
			$keys[27] => $this->getLanguagespoken(),
			$keys[28] => $this->getBestcontactmethod(),
			$keys[29] => $this->getEmergencycontactname(),
			$keys[30] => $this->getEmergencycontactprimaryphone(),
			$keys[31] => $this->getEmergencycontactsecondaryphone(),
			$keys[32] => $this->getEmergencycontactprimarycomment(),
			$keys[33] => $this->getEmergencycontactsecondarycomment(),
			$keys[34] => $this->getPassfirstname(),
			$keys[35] => $this->getPasslastname(),
			$keys[36] => $this->getPasscity(),
			$keys[37] => $this->getPassstate(),
			$keys[38] => $this->getPasszipcode(),
			$keys[39] => $this->getPassage(),
			$keys[40] => $this->getPassweight(),
			$keys[41] => $this->getPassdayphone(),
			$keys[42] => $this->getPassdaycomment(),
			$keys[43] => $this->getPassevephone(),
			$keys[44] => $this->getPassevecomment(),
			$keys[45] => $this->getPasspagerphone(),
			$keys[46] => $this->getPasspagercomment(),
			$keys[47] => $this->getPassmobilephone(),
			$keys[48] => $this->getPassmobilecomment(),
			$keys[49] => $this->getPassotherphone(),
			$keys[50] => $this->getPassothercomment(),
			$keys[51] => $this->getPassfaxphone1(),
			$keys[52] => $this->getPassfax1comment(),
			$keys[53] => $this->getPassemail(),
			$keys[54] => $this->getPassaddressone(),
			$keys[55] => $this->getPassaddresstwo(),
			$keys[56] => $this->getComment(),
			$keys[57] => $this->getId(),
			$keys[58] => $this->getLegnumber(),
			$keys[59] => $this->getPassonboard(),
			$keys[60] => $this->getBaggageweight(),
			$keys[61] => $this->getBaggagedesc(),
			$keys[62] => $this->getPubliccnote(),
			$keys[63] => $this->getPrivatecnote(),
			$keys[64] => $this->getCopilotwanted(),
			$keys[65] => $this->getFromairportident(),
			$keys[66] => $this->getFromairportname(),
			$keys[67] => $this->getFromairportcity(),
			$keys[68] => $this->getFromairportstate(),
			$keys[69] => $this->getFromairportgmtoffset(),
			$keys[70] => $this->getFromairportdstoffset(),
			$keys[71] => $this->getToairportident(),
			$keys[72] => $this->getToairportname(),
			$keys[73] => $this->getToairportcity(),
			$keys[74] => $this->getToairportstate(),
			$keys[75] => $this->getToairportgmtoffset(),
			$keys[76] => $this->getToairportdstoffset(),
			$keys[77] => $this->getPilotfirstname(),
			$keys[78] => $this->getPilotlastname(),
			$keys[79] => $this->getPilotdayphone(),
			$keys[80] => $this->getPilotdaycomment(),
			$keys[81] => $this->getPilotevephone(),
			$keys[82] => $this->getPilotevecomment(),
			$keys[83] => $this->getPilotfaxphone(),
			$keys[84] => $this->getPilotfaxcomment(),
			$keys[85] => $this->getPilotmobilephone(),
			$keys[86] => $this->getPilotmobilecomment(),
			$keys[87] => $this->getPilotpagerphone(),
			$keys[88] => $this->getPilotpagercomment(),
			$keys[89] => $this->getPilototherphone(),
			$keys[90] => $this->getPilotothercomment(),
			$keys[91] => $this->getPilotemail(),
			$keys[92] => $this->getCopilotfirstname(),
			$keys[93] => $this->getCopilotlastname(),
			$keys[94] => $this->getCopilotdayphone(),
			$keys[95] => $this->getCopilotdaycomment(),
			$keys[96] => $this->getCopilotevephone(),
			$keys[97] => $this->getCopilotevecomment(),
			$keys[98] => $this->getCopilotmobilephone(),
			$keys[99] => $this->getCopilotmobilecomment(),
			$keys[100] => $this->getCopilotpagerphone(),
			$keys[101] => $this->getCopilotpagercomment(),
			$keys[102] => $this->getCopilototherphone(),
			$keys[103] => $this->getCopilotothercomment(),
			$keys[104] => $this->getCopilotfaxphone(),
			$keys[105] => $this->getCopilotfaxcomment(),
			$keys[106] => $this->getCopilotemail(),
			$keys[107] => $this->getBupilotfirstname(),
			$keys[108] => $this->getBupilotlastname(),
			$keys[109] => $this->getBupilotdayphone(),
			$keys[110] => $this->getBupilotdaycomment(),
			$keys[111] => $this->getBupilotevephone(),
			$keys[112] => $this->getBupilotevecomment(),
			$keys[113] => $this->getBupilotmobilephone(),
			$keys[114] => $this->getBupilotmobilecomment(),
			$keys[115] => $this->getBupilotpagerphone(),
			$keys[116] => $this->getBupilotpagercomment(),
			$keys[117] => $this->getBupilototherphone(),
			$keys[118] => $this->getBupilotothercomment(),
			$keys[119] => $this->getBupilotfaxphone(),
			$keys[120] => $this->getBupilotfaxcomment(),
			$keys[121] => $this->getBupilotemail(),
			$keys[122] => $this->getCoordfirstname(),
			$keys[123] => $this->getCoordlastname(),
			$keys[124] => $this->getCoorddayphone(),
			$keys[125] => $this->getCoorddaycomment(),
			$keys[126] => $this->getCoordevephone(),
			$keys[127] => $this->getCoordevecomment(),
			$keys[128] => $this->getCoordmobilephone(),
			$keys[129] => $this->getCoordmobilecomment(),
			$keys[130] => $this->getCoordpagerphone(),
			$keys[131] => $this->getCoordpagercomment(),
			$keys[132] => $this->getCoordotherphone(),
			$keys[133] => $this->getCoordothercomment(),
			$keys[134] => $this->getCoordfaxphone(),
			$keys[135] => $this->getCoordfaxcomment(),
			$keys[136] => $this->getCoordemail(),
			$keys[137] => $this->getRequestername(),
			$keys[138] => $this->getReqfirstname(),
			$keys[139] => $this->getReqlastname(),
			$keys[140] => $this->getReqdayphone(),
			$keys[141] => $this->getReqevephone(),
			$keys[142] => $this->getReqmobilephone(),
			$keys[143] => $this->getReqpagerphone(),
			$keys[144] => $this->getReqotherphone(),
			$keys[145] => $this->getReqfaxphone(),
			$keys[146] => $this->getReqdaycomment(),
			$keys[147] => $this->getReqevecomment(),
			$keys[148] => $this->getReqpagercomment(),
			$keys[149] => $this->getReqmobilecomment(),
			$keys[150] => $this->getReqfaxcomment(),
			$keys[151] => $this->getReqothercomment(),
			$keys[152] => $this->getReqemail(),
			$keys[153] => $this->getCompanionname(),
			$keys[154] => $this->getCompanionrelationship(),
			$keys[155] => $this->getCompaniondob(),
			$keys[156] => $this->getCompanionage(),
			$keys[157] => $this->getCompanionweight(),
			$keys[158] => $this->getCompanionphone(),
			$keys[159] => $this->getCompanionphonecomment(),
			$keys[160] => $this->getPilotname(),
			$keys[161] => $this->getAfadayphone(),
			$keys[162] => $this->getAfanightphone(),
			$keys[163] => $this->getAfafaxphone(),
			$keys[164] => $this->getAfapilotmobilephone(),
			$keys[165] => $this->getAfaaircraft(),
			$keys[166] => $this->getAfannumber(),
			$keys[167] => $this->getAircraftcolor(),
			$keys[168] => $this->getEtd(),
			$keys[169] => $this->getEta(),
			$keys[170] => $this->getAfaorgname(),
			$keys[171] => $this->getAfaorgphone(),
			$keys[172] => $this->getFboname(),
			$keys[173] => $this->getFbophone(),
			$keys[174] => $this->getFbofax(),
			$keys[175] => $this->getFbofueldiscount(),
			$keys[176] => $this->getFboairportident(),
			$keys[177] => $this->getAircraftseats(),
			$keys[178] => $this->getAircraftnnumber(),
			$keys[179] => $this->getAircraftknownice(),
			$keys[180] => $this->getAircraftmake(),
			$keys[181] => $this->getAircraftmodel(),
			$keys[182] => $this->getCampname(),
			$keys[183] => $this->getCampphone(),
			$keys[184] => $this->getCampphonecomment(),
			$keys[185] => $this->getCamplodgingname(),
			$keys[186] => $this->getCamplodgingphone(),
			$keys[187] => $this->getCamplodgingphonecomment(),
			$keys[188] => $this->getCampcomment(),
			$keys[189] => $this->getFlightinformation(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = RpMissionItineraryPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setNow($value);
				break;
			case 1:
				$this->setMissionid($value);
				break;
			case 2:
				$this->setExternalid($value);
				break;
			case 3:
				$this->setMissiontypeid($value);
				break;
			case 4:
				$this->setMissiondate($value);
				break;
			case 5:
				$this->setApptdate($value);
				break;
			case 6:
				$this->setFlighttime($value);
				break;
			case 7:
				$this->setReleasingphysician($value);
				break;
			case 8:
				$this->setReleasingphone($value);
				break;
			case 9:
				$this->setReleasingfax($value);
				break;
			case 10:
				$this->setReleasingfaxcomment($value);
				break;
			case 11:
				$this->setReleasingemail($value);
				break;
			case 12:
				$this->setLodging($value);
				break;
			case 13:
				$this->setLodgingphone($value);
				break;
			case 14:
				$this->setLodgingPhoneComment($value);
				break;
			case 15:
				$this->setFacilityname($value);
				break;
			case 16:
				$this->setFacilityphone($value);
				break;
			case 17:
				$this->setFacilityphonecomment($value);
				break;
			case 18:
				$this->setPublicconsiderations($value);
				break;
			case 19:
				$this->setPrivateconsiderations($value);
				break;
			case 20:
				$this->setIllness($value);
				break;
			case 21:
				$this->setGroundtransportationcomment($value);
				break;
			case 22:
				$this->setTreatingphysician($value);
				break;
			case 23:
				$this->setTreatingphone($value);
				break;
			case 24:
				$this->setTreatingfax($value);
				break;
			case 25:
				$this->setTreatingfaxcomment($value);
				break;
			case 26:
				$this->setTreatingemail($value);
				break;
			case 27:
				$this->setLanguagespoken($value);
				break;
			case 28:
				$this->setBestcontactmethod($value);
				break;
			case 29:
				$this->setEmergencycontactname($value);
				break;
			case 30:
				$this->setEmergencycontactprimaryphone($value);
				break;
			case 31:
				$this->setEmergencycontactsecondaryphone($value);
				break;
			case 32:
				$this->setEmergencycontactprimarycomment($value);
				break;
			case 33:
				$this->setEmergencycontactsecondarycomment($value);
				break;
			case 34:
				$this->setPassfirstname($value);
				break;
			case 35:
				$this->setPasslastname($value);
				break;
			case 36:
				$this->setPasscity($value);
				break;
			case 37:
				$this->setPassstate($value);
				break;
			case 38:
				$this->setPasszipcode($value);
				break;
			case 39:
				$this->setPassage($value);
				break;
			case 40:
				$this->setPassweight($value);
				break;
			case 41:
				$this->setPassdayphone($value);
				break;
			case 42:
				$this->setPassdaycomment($value);
				break;
			case 43:
				$this->setPassevephone($value);
				break;
			case 44:
				$this->setPassevecomment($value);
				break;
			case 45:
				$this->setPasspagerphone($value);
				break;
			case 46:
				$this->setPasspagercomment($value);
				break;
			case 47:
				$this->setPassmobilephone($value);
				break;
			case 48:
				$this->setPassmobilecomment($value);
				break;
			case 49:
				$this->setPassotherphone($value);
				break;
			case 50:
				$this->setPassothercomment($value);
				break;
			case 51:
				$this->setPassfaxphone1($value);
				break;
			case 52:
				$this->setPassfax1comment($value);
				break;
			case 53:
				$this->setPassemail($value);
				break;
			case 54:
				$this->setPassaddressone($value);
				break;
			case 55:
				$this->setPassaddresstwo($value);
				break;
			case 56:
				$this->setComment($value);
				break;
			case 57:
				$this->setId($value);
				break;
			case 58:
				$this->setLegnumber($value);
				break;
			case 59:
				$this->setPassonboard($value);
				break;
			case 60:
				$this->setBaggageweight($value);
				break;
			case 61:
				$this->setBaggagedesc($value);
				break;
			case 62:
				$this->setPubliccnote($value);
				break;
			case 63:
				$this->setPrivatecnote($value);
				break;
			case 64:
				$this->setCopilotwanted($value);
				break;
			case 65:
				$this->setFromairportident($value);
				break;
			case 66:
				$this->setFromairportname($value);
				break;
			case 67:
				$this->setFromairportcity($value);
				break;
			case 68:
				$this->setFromairportstate($value);
				break;
			case 69:
				$this->setFromairportgmtoffset($value);
				break;
			case 70:
				$this->setFromairportdstoffset($value);
				break;
			case 71:
				$this->setToairportident($value);
				break;
			case 72:
				$this->setToairportname($value);
				break;
			case 73:
				$this->setToairportcity($value);
				break;
			case 74:
				$this->setToairportstate($value);
				break;
			case 75:
				$this->setToairportgmtoffset($value);
				break;
			case 76:
				$this->setToairportdstoffset($value);
				break;
			case 77:
				$this->setPilotfirstname($value);
				break;
			case 78:
				$this->setPilotlastname($value);
				break;
			case 79:
				$this->setPilotdayphone($value);
				break;
			case 80:
				$this->setPilotdaycomment($value);
				break;
			case 81:
				$this->setPilotevephone($value);
				break;
			case 82:
				$this->setPilotevecomment($value);
				break;
			case 83:
				$this->setPilotfaxphone($value);
				break;
			case 84:
				$this->setPilotfaxcomment($value);
				break;
			case 85:
				$this->setPilotmobilephone($value);
				break;
			case 86:
				$this->setPilotmobilecomment($value);
				break;
			case 87:
				$this->setPilotpagerphone($value);
				break;
			case 88:
				$this->setPilotpagercomment($value);
				break;
			case 89:
				$this->setPilototherphone($value);
				break;
			case 90:
				$this->setPilotothercomment($value);
				break;
			case 91:
				$this->setPilotemail($value);
				break;
			case 92:
				$this->setCopilotfirstname($value);
				break;
			case 93:
				$this->setCopilotlastname($value);
				break;
			case 94:
				$this->setCopilotdayphone($value);
				break;
			case 95:
				$this->setCopilotdaycomment($value);
				break;
			case 96:
				$this->setCopilotevephone($value);
				break;
			case 97:
				$this->setCopilotevecomment($value);
				break;
			case 98:
				$this->setCopilotmobilephone($value);
				break;
			case 99:
				$this->setCopilotmobilecomment($value);
				break;
			case 100:
				$this->setCopilotpagerphone($value);
				break;
			case 101:
				$this->setCopilotpagercomment($value);
				break;
			case 102:
				$this->setCopilototherphone($value);
				break;
			case 103:
				$this->setCopilotothercomment($value);
				break;
			case 104:
				$this->setCopilotfaxphone($value);
				break;
			case 105:
				$this->setCopilotfaxcomment($value);
				break;
			case 106:
				$this->setCopilotemail($value);
				break;
			case 107:
				$this->setBupilotfirstname($value);
				break;
			case 108:
				$this->setBupilotlastname($value);
				break;
			case 109:
				$this->setBupilotdayphone($value);
				break;
			case 110:
				$this->setBupilotdaycomment($value);
				break;
			case 111:
				$this->setBupilotevephone($value);
				break;
			case 112:
				$this->setBupilotevecomment($value);
				break;
			case 113:
				$this->setBupilotmobilephone($value);
				break;
			case 114:
				$this->setBupilotmobilecomment($value);
				break;
			case 115:
				$this->setBupilotpagerphone($value);
				break;
			case 116:
				$this->setBupilotpagercomment($value);
				break;
			case 117:
				$this->setBupilototherphone($value);
				break;
			case 118:
				$this->setBupilotothercomment($value);
				break;
			case 119:
				$this->setBupilotfaxphone($value);
				break;
			case 120:
				$this->setBupilotfaxcomment($value);
				break;
			case 121:
				$this->setBupilotemail($value);
				break;
			case 122:
				$this->setCoordfirstname($value);
				break;
			case 123:
				$this->setCoordlastname($value);
				break;
			case 124:
				$this->setCoorddayphone($value);
				break;
			case 125:
				$this->setCoorddaycomment($value);
				break;
			case 126:
				$this->setCoordevephone($value);
				break;
			case 127:
				$this->setCoordevecomment($value);
				break;
			case 128:
				$this->setCoordmobilephone($value);
				break;
			case 129:
				$this->setCoordmobilecomment($value);
				break;
			case 130:
				$this->setCoordpagerphone($value);
				break;
			case 131:
				$this->setCoordpagercomment($value);
				break;
			case 132:
				$this->setCoordotherphone($value);
				break;
			case 133:
				$this->setCoordothercomment($value);
				break;
			case 134:
				$this->setCoordfaxphone($value);
				break;
			case 135:
				$this->setCoordfaxcomment($value);
				break;
			case 136:
				$this->setCoordemail($value);
				break;
			case 137:
				$this->setRequestername($value);
				break;
			case 138:
				$this->setReqfirstname($value);
				break;
			case 139:
				$this->setReqlastname($value);
				break;
			case 140:
				$this->setReqdayphone($value);
				break;
			case 141:
				$this->setReqevephone($value);
				break;
			case 142:
				$this->setReqmobilephone($value);
				break;
			case 143:
				$this->setReqpagerphone($value);
				break;
			case 144:
				$this->setReqotherphone($value);
				break;
			case 145:
				$this->setReqfaxphone($value);
				break;
			case 146:
				$this->setReqdaycomment($value);
				break;
			case 147:
				$this->setReqevecomment($value);
				break;
			case 148:
				$this->setReqpagercomment($value);
				break;
			case 149:
				$this->setReqmobilecomment($value);
				break;
			case 150:
				$this->setReqfaxcomment($value);
				break;
			case 151:
				$this->setReqothercomment($value);
				break;
			case 152:
				$this->setReqemail($value);
				break;
			case 153:
				$this->setCompanionname($value);
				break;
			case 154:
				$this->setCompanionrelationship($value);
				break;
			case 155:
				$this->setCompaniondob($value);
				break;
			case 156:
				$this->setCompanionage($value);
				break;
			case 157:
				$this->setCompanionweight($value);
				break;
			case 158:
				$this->setCompanionphone($value);
				break;
			case 159:
				$this->setCompanionphonecomment($value);
				break;
			case 160:
				$this->setPilotname($value);
				break;
			case 161:
				$this->setAfadayphone($value);
				break;
			case 162:
				$this->setAfanightphone($value);
				break;
			case 163:
				$this->setAfafaxphone($value);
				break;
			case 164:
				$this->setAfapilotmobilephone($value);
				break;
			case 165:
				$this->setAfaaircraft($value);
				break;
			case 166:
				$this->setAfannumber($value);
				break;
			case 167:
				$this->setAircraftcolor($value);
				break;
			case 168:
				$this->setEtd($value);
				break;
			case 169:
				$this->setEta($value);
				break;
			case 170:
				$this->setAfaorgname($value);
				break;
			case 171:
				$this->setAfaorgphone($value);
				break;
			case 172:
				$this->setFboname($value);
				break;
			case 173:
				$this->setFbophone($value);
				break;
			case 174:
				$this->setFbofax($value);
				break;
			case 175:
				$this->setFbofueldiscount($value);
				break;
			case 176:
				$this->setFboairportident($value);
				break;
			case 177:
				$this->setAircraftseats($value);
				break;
			case 178:
				$this->setAircraftnnumber($value);
				break;
			case 179:
				$this->setAircraftknownice($value);
				break;
			case 180:
				$this->setAircraftmake($value);
				break;
			case 181:
				$this->setAircraftmodel($value);
				break;
			case 182:
				$this->setCampname($value);
				break;
			case 183:
				$this->setCampphone($value);
				break;
			case 184:
				$this->setCampphonecomment($value);
				break;
			case 185:
				$this->setCamplodgingname($value);
				break;
			case 186:
				$this->setCamplodgingphone($value);
				break;
			case 187:
				$this->setCamplodgingphonecomment($value);
				break;
			case 188:
				$this->setCampcomment($value);
				break;
			case 189:
				$this->setFlightinformation($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = RpMissionItineraryPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setNow($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setMissionid($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setExternalid($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setMissiontypeid($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setMissiondate($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setApptdate($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setFlighttime($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setReleasingphysician($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setReleasingphone($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setReleasingfax($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setReleasingfaxcomment($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setReleasingemail($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setLodging($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setLodgingphone($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setLodgingPhoneComment($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setFacilityname($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setFacilityphone($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setFacilityphonecomment($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setPublicconsiderations($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setPrivateconsiderations($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setIllness($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setGroundtransportationcomment($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setTreatingphysician($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setTreatingphone($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setTreatingfax($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setTreatingfaxcomment($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setTreatingemail($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setLanguagespoken($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setBestcontactmethod($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setEmergencycontactname($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setEmergencycontactprimaryphone($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setEmergencycontactsecondaryphone($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setEmergencycontactprimarycomment($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setEmergencycontactsecondarycomment($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setPassfirstname($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setPasslastname($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setPasscity($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setPassstate($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setPasszipcode($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setPassage($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setPassweight($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setPassdayphone($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setPassdaycomment($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setPassevephone($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setPassevecomment($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setPasspagerphone($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setPasspagercomment($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setPassmobilephone($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setPassmobilecomment($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setPassotherphone($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setPassothercomment($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setPassfaxphone1($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setPassfax1comment($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setPassemail($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setPassaddressone($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setPassaddresstwo($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setComment($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setId($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setLegnumber($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setPassonboard($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setBaggageweight($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setBaggagedesc($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setPubliccnote($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setPrivatecnote($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setCopilotwanted($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setFromairportident($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setFromairportname($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setFromairportcity($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setFromairportstate($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setFromairportgmtoffset($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setFromairportdstoffset($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setToairportident($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setToairportname($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setToairportcity($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setToairportstate($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setToairportgmtoffset($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setToairportdstoffset($arr[$keys[76]]);
		if (array_key_exists($keys[77], $arr)) $this->setPilotfirstname($arr[$keys[77]]);
		if (array_key_exists($keys[78], $arr)) $this->setPilotlastname($arr[$keys[78]]);
		if (array_key_exists($keys[79], $arr)) $this->setPilotdayphone($arr[$keys[79]]);
		if (array_key_exists($keys[80], $arr)) $this->setPilotdaycomment($arr[$keys[80]]);
		if (array_key_exists($keys[81], $arr)) $this->setPilotevephone($arr[$keys[81]]);
		if (array_key_exists($keys[82], $arr)) $this->setPilotevecomment($arr[$keys[82]]);
		if (array_key_exists($keys[83], $arr)) $this->setPilotfaxphone($arr[$keys[83]]);
		if (array_key_exists($keys[84], $arr)) $this->setPilotfaxcomment($arr[$keys[84]]);
		if (array_key_exists($keys[85], $arr)) $this->setPilotmobilephone($arr[$keys[85]]);
		if (array_key_exists($keys[86], $arr)) $this->setPilotmobilecomment($arr[$keys[86]]);
		if (array_key_exists($keys[87], $arr)) $this->setPilotpagerphone($arr[$keys[87]]);
		if (array_key_exists($keys[88], $arr)) $this->setPilotpagercomment($arr[$keys[88]]);
		if (array_key_exists($keys[89], $arr)) $this->setPilototherphone($arr[$keys[89]]);
		if (array_key_exists($keys[90], $arr)) $this->setPilotothercomment($arr[$keys[90]]);
		if (array_key_exists($keys[91], $arr)) $this->setPilotemail($arr[$keys[91]]);
		if (array_key_exists($keys[92], $arr)) $this->setCopilotfirstname($arr[$keys[92]]);
		if (array_key_exists($keys[93], $arr)) $this->setCopilotlastname($arr[$keys[93]]);
		if (array_key_exists($keys[94], $arr)) $this->setCopilotdayphone($arr[$keys[94]]);
		if (array_key_exists($keys[95], $arr)) $this->setCopilotdaycomment($arr[$keys[95]]);
		if (array_key_exists($keys[96], $arr)) $this->setCopilotevephone($arr[$keys[96]]);
		if (array_key_exists($keys[97], $arr)) $this->setCopilotevecomment($arr[$keys[97]]);
		if (array_key_exists($keys[98], $arr)) $this->setCopilotmobilephone($arr[$keys[98]]);
		if (array_key_exists($keys[99], $arr)) $this->setCopilotmobilecomment($arr[$keys[99]]);
		if (array_key_exists($keys[100], $arr)) $this->setCopilotpagerphone($arr[$keys[100]]);
		if (array_key_exists($keys[101], $arr)) $this->setCopilotpagercomment($arr[$keys[101]]);
		if (array_key_exists($keys[102], $arr)) $this->setCopilototherphone($arr[$keys[102]]);
		if (array_key_exists($keys[103], $arr)) $this->setCopilotothercomment($arr[$keys[103]]);
		if (array_key_exists($keys[104], $arr)) $this->setCopilotfaxphone($arr[$keys[104]]);
		if (array_key_exists($keys[105], $arr)) $this->setCopilotfaxcomment($arr[$keys[105]]);
		if (array_key_exists($keys[106], $arr)) $this->setCopilotemail($arr[$keys[106]]);
		if (array_key_exists($keys[107], $arr)) $this->setBupilotfirstname($arr[$keys[107]]);
		if (array_key_exists($keys[108], $arr)) $this->setBupilotlastname($arr[$keys[108]]);
		if (array_key_exists($keys[109], $arr)) $this->setBupilotdayphone($arr[$keys[109]]);
		if (array_key_exists($keys[110], $arr)) $this->setBupilotdaycomment($arr[$keys[110]]);
		if (array_key_exists($keys[111], $arr)) $this->setBupilotevephone($arr[$keys[111]]);
		if (array_key_exists($keys[112], $arr)) $this->setBupilotevecomment($arr[$keys[112]]);
		if (array_key_exists($keys[113], $arr)) $this->setBupilotmobilephone($arr[$keys[113]]);
		if (array_key_exists($keys[114], $arr)) $this->setBupilotmobilecomment($arr[$keys[114]]);
		if (array_key_exists($keys[115], $arr)) $this->setBupilotpagerphone($arr[$keys[115]]);
		if (array_key_exists($keys[116], $arr)) $this->setBupilotpagercomment($arr[$keys[116]]);
		if (array_key_exists($keys[117], $arr)) $this->setBupilototherphone($arr[$keys[117]]);
		if (array_key_exists($keys[118], $arr)) $this->setBupilotothercomment($arr[$keys[118]]);
		if (array_key_exists($keys[119], $arr)) $this->setBupilotfaxphone($arr[$keys[119]]);
		if (array_key_exists($keys[120], $arr)) $this->setBupilotfaxcomment($arr[$keys[120]]);
		if (array_key_exists($keys[121], $arr)) $this->setBupilotemail($arr[$keys[121]]);
		if (array_key_exists($keys[122], $arr)) $this->setCoordfirstname($arr[$keys[122]]);
		if (array_key_exists($keys[123], $arr)) $this->setCoordlastname($arr[$keys[123]]);
		if (array_key_exists($keys[124], $arr)) $this->setCoorddayphone($arr[$keys[124]]);
		if (array_key_exists($keys[125], $arr)) $this->setCoorddaycomment($arr[$keys[125]]);
		if (array_key_exists($keys[126], $arr)) $this->setCoordevephone($arr[$keys[126]]);
		if (array_key_exists($keys[127], $arr)) $this->setCoordevecomment($arr[$keys[127]]);
		if (array_key_exists($keys[128], $arr)) $this->setCoordmobilephone($arr[$keys[128]]);
		if (array_key_exists($keys[129], $arr)) $this->setCoordmobilecomment($arr[$keys[129]]);
		if (array_key_exists($keys[130], $arr)) $this->setCoordpagerphone($arr[$keys[130]]);
		if (array_key_exists($keys[131], $arr)) $this->setCoordpagercomment($arr[$keys[131]]);
		if (array_key_exists($keys[132], $arr)) $this->setCoordotherphone($arr[$keys[132]]);
		if (array_key_exists($keys[133], $arr)) $this->setCoordothercomment($arr[$keys[133]]);
		if (array_key_exists($keys[134], $arr)) $this->setCoordfaxphone($arr[$keys[134]]);
		if (array_key_exists($keys[135], $arr)) $this->setCoordfaxcomment($arr[$keys[135]]);
		if (array_key_exists($keys[136], $arr)) $this->setCoordemail($arr[$keys[136]]);
		if (array_key_exists($keys[137], $arr)) $this->setRequestername($arr[$keys[137]]);
		if (array_key_exists($keys[138], $arr)) $this->setReqfirstname($arr[$keys[138]]);
		if (array_key_exists($keys[139], $arr)) $this->setReqlastname($arr[$keys[139]]);
		if (array_key_exists($keys[140], $arr)) $this->setReqdayphone($arr[$keys[140]]);
		if (array_key_exists($keys[141], $arr)) $this->setReqevephone($arr[$keys[141]]);
		if (array_key_exists($keys[142], $arr)) $this->setReqmobilephone($arr[$keys[142]]);
		if (array_key_exists($keys[143], $arr)) $this->setReqpagerphone($arr[$keys[143]]);
		if (array_key_exists($keys[144], $arr)) $this->setReqotherphone($arr[$keys[144]]);
		if (array_key_exists($keys[145], $arr)) $this->setReqfaxphone($arr[$keys[145]]);
		if (array_key_exists($keys[146], $arr)) $this->setReqdaycomment($arr[$keys[146]]);
		if (array_key_exists($keys[147], $arr)) $this->setReqevecomment($arr[$keys[147]]);
		if (array_key_exists($keys[148], $arr)) $this->setReqpagercomment($arr[$keys[148]]);
		if (array_key_exists($keys[149], $arr)) $this->setReqmobilecomment($arr[$keys[149]]);
		if (array_key_exists($keys[150], $arr)) $this->setReqfaxcomment($arr[$keys[150]]);
		if (array_key_exists($keys[151], $arr)) $this->setReqothercomment($arr[$keys[151]]);
		if (array_key_exists($keys[152], $arr)) $this->setReqemail($arr[$keys[152]]);
		if (array_key_exists($keys[153], $arr)) $this->setCompanionname($arr[$keys[153]]);
		if (array_key_exists($keys[154], $arr)) $this->setCompanionrelationship($arr[$keys[154]]);
		if (array_key_exists($keys[155], $arr)) $this->setCompaniondob($arr[$keys[155]]);
		if (array_key_exists($keys[156], $arr)) $this->setCompanionage($arr[$keys[156]]);
		if (array_key_exists($keys[157], $arr)) $this->setCompanionweight($arr[$keys[157]]);
		if (array_key_exists($keys[158], $arr)) $this->setCompanionphone($arr[$keys[158]]);
		if (array_key_exists($keys[159], $arr)) $this->setCompanionphonecomment($arr[$keys[159]]);
		if (array_key_exists($keys[160], $arr)) $this->setPilotname($arr[$keys[160]]);
		if (array_key_exists($keys[161], $arr)) $this->setAfadayphone($arr[$keys[161]]);
		if (array_key_exists($keys[162], $arr)) $this->setAfanightphone($arr[$keys[162]]);
		if (array_key_exists($keys[163], $arr)) $this->setAfafaxphone($arr[$keys[163]]);
		if (array_key_exists($keys[164], $arr)) $this->setAfapilotmobilephone($arr[$keys[164]]);
		if (array_key_exists($keys[165], $arr)) $this->setAfaaircraft($arr[$keys[165]]);
		if (array_key_exists($keys[166], $arr)) $this->setAfannumber($arr[$keys[166]]);
		if (array_key_exists($keys[167], $arr)) $this->setAircraftcolor($arr[$keys[167]]);
		if (array_key_exists($keys[168], $arr)) $this->setEtd($arr[$keys[168]]);
		if (array_key_exists($keys[169], $arr)) $this->setEta($arr[$keys[169]]);
		if (array_key_exists($keys[170], $arr)) $this->setAfaorgname($arr[$keys[170]]);
		if (array_key_exists($keys[171], $arr)) $this->setAfaorgphone($arr[$keys[171]]);
		if (array_key_exists($keys[172], $arr)) $this->setFboname($arr[$keys[172]]);
		if (array_key_exists($keys[173], $arr)) $this->setFbophone($arr[$keys[173]]);
		if (array_key_exists($keys[174], $arr)) $this->setFbofax($arr[$keys[174]]);
		if (array_key_exists($keys[175], $arr)) $this->setFbofueldiscount($arr[$keys[175]]);
		if (array_key_exists($keys[176], $arr)) $this->setFboairportident($arr[$keys[176]]);
		if (array_key_exists($keys[177], $arr)) $this->setAircraftseats($arr[$keys[177]]);
		if (array_key_exists($keys[178], $arr)) $this->setAircraftnnumber($arr[$keys[178]]);
		if (array_key_exists($keys[179], $arr)) $this->setAircraftknownice($arr[$keys[179]]);
		if (array_key_exists($keys[180], $arr)) $this->setAircraftmake($arr[$keys[180]]);
		if (array_key_exists($keys[181], $arr)) $this->setAircraftmodel($arr[$keys[181]]);
		if (array_key_exists($keys[182], $arr)) $this->setCampname($arr[$keys[182]]);
		if (array_key_exists($keys[183], $arr)) $this->setCampphone($arr[$keys[183]]);
		if (array_key_exists($keys[184], $arr)) $this->setCampphonecomment($arr[$keys[184]]);
		if (array_key_exists($keys[185], $arr)) $this->setCamplodgingname($arr[$keys[185]]);
		if (array_key_exists($keys[186], $arr)) $this->setCamplodgingphone($arr[$keys[186]]);
		if (array_key_exists($keys[187], $arr)) $this->setCamplodgingphonecomment($arr[$keys[187]]);
		if (array_key_exists($keys[188], $arr)) $this->setCampcomment($arr[$keys[188]]);
		if (array_key_exists($keys[189], $arr)) $this->setFlightinformation($arr[$keys[189]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(RpMissionItineraryPeer::DATABASE_NAME);

		if ($this->isColumnModified(RpMissionItineraryPeer::NOW)) $criteria->add(RpMissionItineraryPeer::NOW, $this->now);
		if ($this->isColumnModified(RpMissionItineraryPeer::MISSIONID)) $criteria->add(RpMissionItineraryPeer::MISSIONID, $this->missionid);
		if ($this->isColumnModified(RpMissionItineraryPeer::EXTERNALID)) $criteria->add(RpMissionItineraryPeer::EXTERNALID, $this->externalid);
		if ($this->isColumnModified(RpMissionItineraryPeer::MISSIONTYPEID)) $criteria->add(RpMissionItineraryPeer::MISSIONTYPEID, $this->missiontypeid);
		if ($this->isColumnModified(RpMissionItineraryPeer::MISSIONDATE)) $criteria->add(RpMissionItineraryPeer::MISSIONDATE, $this->missiondate);
		if ($this->isColumnModified(RpMissionItineraryPeer::APPTDATE)) $criteria->add(RpMissionItineraryPeer::APPTDATE, $this->apptdate);
		if ($this->isColumnModified(RpMissionItineraryPeer::FLIGHTTIME)) $criteria->add(RpMissionItineraryPeer::FLIGHTTIME, $this->flighttime);
		if ($this->isColumnModified(RpMissionItineraryPeer::RELEASINGPHYSICIAN)) $criteria->add(RpMissionItineraryPeer::RELEASINGPHYSICIAN, $this->releasingphysician);
		if ($this->isColumnModified(RpMissionItineraryPeer::RELEASINGPHONE)) $criteria->add(RpMissionItineraryPeer::RELEASINGPHONE, $this->releasingphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::RELEASINGFAX)) $criteria->add(RpMissionItineraryPeer::RELEASINGFAX, $this->releasingfax);
		if ($this->isColumnModified(RpMissionItineraryPeer::RELEASINGFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::RELEASINGFAXCOMMENT, $this->releasingfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::RELEASINGEMAIL)) $criteria->add(RpMissionItineraryPeer::RELEASINGEMAIL, $this->releasingemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::LODGING)) $criteria->add(RpMissionItineraryPeer::LODGING, $this->lodging);
		if ($this->isColumnModified(RpMissionItineraryPeer::LODGINGPHONE)) $criteria->add(RpMissionItineraryPeer::LODGINGPHONE, $this->lodgingphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::LODGING_PHONE_COMMENT)) $criteria->add(RpMissionItineraryPeer::LODGING_PHONE_COMMENT, $this->lodging_phone_comment);
		if ($this->isColumnModified(RpMissionItineraryPeer::FACILITYNAME)) $criteria->add(RpMissionItineraryPeer::FACILITYNAME, $this->facilityname);
		if ($this->isColumnModified(RpMissionItineraryPeer::FACILITYPHONE)) $criteria->add(RpMissionItineraryPeer::FACILITYPHONE, $this->facilityphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::FACILITYPHONECOMMENT)) $criteria->add(RpMissionItineraryPeer::FACILITYPHONECOMMENT, $this->facilityphonecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PUBLICCONSIDERATIONS)) $criteria->add(RpMissionItineraryPeer::PUBLICCONSIDERATIONS, $this->publicconsiderations);
		if ($this->isColumnModified(RpMissionItineraryPeer::PRIVATECONSIDERATIONS)) $criteria->add(RpMissionItineraryPeer::PRIVATECONSIDERATIONS, $this->privateconsiderations);
		if ($this->isColumnModified(RpMissionItineraryPeer::ILLNESS)) $criteria->add(RpMissionItineraryPeer::ILLNESS, $this->illness);
		if ($this->isColumnModified(RpMissionItineraryPeer::GROUNDTRANSPORTATIONCOMMENT)) $criteria->add(RpMissionItineraryPeer::GROUNDTRANSPORTATIONCOMMENT, $this->groundtransportationcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::TREATINGPHYSICIAN)) $criteria->add(RpMissionItineraryPeer::TREATINGPHYSICIAN, $this->treatingphysician);
		if ($this->isColumnModified(RpMissionItineraryPeer::TREATINGPHONE)) $criteria->add(RpMissionItineraryPeer::TREATINGPHONE, $this->treatingphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::TREATINGFAX)) $criteria->add(RpMissionItineraryPeer::TREATINGFAX, $this->treatingfax);
		if ($this->isColumnModified(RpMissionItineraryPeer::TREATINGFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::TREATINGFAXCOMMENT, $this->treatingfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::TREATINGEMAIL)) $criteria->add(RpMissionItineraryPeer::TREATINGEMAIL, $this->treatingemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::LANGUAGESPOKEN)) $criteria->add(RpMissionItineraryPeer::LANGUAGESPOKEN, $this->languagespoken);
		if ($this->isColumnModified(RpMissionItineraryPeer::BESTCONTACTMETHOD)) $criteria->add(RpMissionItineraryPeer::BESTCONTACTMETHOD, $this->bestcontactmethod);
		if ($this->isColumnModified(RpMissionItineraryPeer::EMERGENCYCONTACTNAME)) $criteria->add(RpMissionItineraryPeer::EMERGENCYCONTACTNAME, $this->emergencycontactname);
		if ($this->isColumnModified(RpMissionItineraryPeer::EMERGENCYCONTACTPRIMARYPHONE)) $criteria->add(RpMissionItineraryPeer::EMERGENCYCONTACTPRIMARYPHONE, $this->emergencycontactprimaryphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::EMERGENCYCONTACTSECONDARYPHONE)) $criteria->add(RpMissionItineraryPeer::EMERGENCYCONTACTSECONDARYPHONE, $this->emergencycontactsecondaryphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::EMERGENCYCONTACTPRIMARYCOMMENT)) $criteria->add(RpMissionItineraryPeer::EMERGENCYCONTACTPRIMARYCOMMENT, $this->emergencycontactprimarycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::EMERGENCYCONTACTSECONDARYCOMMENT)) $criteria->add(RpMissionItineraryPeer::EMERGENCYCONTACTSECONDARYCOMMENT, $this->emergencycontactsecondarycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSFIRSTNAME)) $criteria->add(RpMissionItineraryPeer::PASSFIRSTNAME, $this->passfirstname);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSLASTNAME)) $criteria->add(RpMissionItineraryPeer::PASSLASTNAME, $this->passlastname);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSCITY)) $criteria->add(RpMissionItineraryPeer::PASSCITY, $this->passcity);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSSTATE)) $criteria->add(RpMissionItineraryPeer::PASSSTATE, $this->passstate);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSZIPCODE)) $criteria->add(RpMissionItineraryPeer::PASSZIPCODE, $this->passzipcode);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSAGE)) $criteria->add(RpMissionItineraryPeer::PASSAGE, $this->passage);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSWEIGHT)) $criteria->add(RpMissionItineraryPeer::PASSWEIGHT, $this->passweight);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSDAYPHONE)) $criteria->add(RpMissionItineraryPeer::PASSDAYPHONE, $this->passdayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSDAYCOMMENT)) $criteria->add(RpMissionItineraryPeer::PASSDAYCOMMENT, $this->passdaycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSEVEPHONE)) $criteria->add(RpMissionItineraryPeer::PASSEVEPHONE, $this->passevephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSEVECOMMENT)) $criteria->add(RpMissionItineraryPeer::PASSEVECOMMENT, $this->passevecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSPAGERPHONE)) $criteria->add(RpMissionItineraryPeer::PASSPAGERPHONE, $this->passpagerphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSPAGERCOMMENT)) $criteria->add(RpMissionItineraryPeer::PASSPAGERCOMMENT, $this->passpagercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::PASSMOBILEPHONE, $this->passmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSMOBILECOMMENT)) $criteria->add(RpMissionItineraryPeer::PASSMOBILECOMMENT, $this->passmobilecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSOTHERPHONE)) $criteria->add(RpMissionItineraryPeer::PASSOTHERPHONE, $this->passotherphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSOTHERCOMMENT)) $criteria->add(RpMissionItineraryPeer::PASSOTHERCOMMENT, $this->passothercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSFAXPHONE1)) $criteria->add(RpMissionItineraryPeer::PASSFAXPHONE1, $this->passfaxphone1);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSFAX1COMMENT)) $criteria->add(RpMissionItineraryPeer::PASSFAX1COMMENT, $this->passfax1comment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSEMAIL)) $criteria->add(RpMissionItineraryPeer::PASSEMAIL, $this->passemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSADDRESSONE)) $criteria->add(RpMissionItineraryPeer::PASSADDRESSONE, $this->passaddressone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSADDRESSTWO)) $criteria->add(RpMissionItineraryPeer::PASSADDRESSTWO, $this->passaddresstwo);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMMENT)) $criteria->add(RpMissionItineraryPeer::COMMENT, $this->comment);
		if ($this->isColumnModified(RpMissionItineraryPeer::ID)) $criteria->add(RpMissionItineraryPeer::ID, $this->id);
		if ($this->isColumnModified(RpMissionItineraryPeer::LEGNUMBER)) $criteria->add(RpMissionItineraryPeer::LEGNUMBER, $this->legnumber);
		if ($this->isColumnModified(RpMissionItineraryPeer::PASSONBOARD)) $criteria->add(RpMissionItineraryPeer::PASSONBOARD, $this->passonboard);
		if ($this->isColumnModified(RpMissionItineraryPeer::BAGGAGEWEIGHT)) $criteria->add(RpMissionItineraryPeer::BAGGAGEWEIGHT, $this->baggageweight);
		if ($this->isColumnModified(RpMissionItineraryPeer::BAGGAGEDESC)) $criteria->add(RpMissionItineraryPeer::BAGGAGEDESC, $this->baggagedesc);
		if ($this->isColumnModified(RpMissionItineraryPeer::PUBLICCNOTE)) $criteria->add(RpMissionItineraryPeer::PUBLICCNOTE, $this->publiccnote);
		if ($this->isColumnModified(RpMissionItineraryPeer::PRIVATECNOTE)) $criteria->add(RpMissionItineraryPeer::PRIVATECNOTE, $this->privatecnote);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTWANTED)) $criteria->add(RpMissionItineraryPeer::COPILOTWANTED, $this->copilotwanted);
		if ($this->isColumnModified(RpMissionItineraryPeer::FROMAIRPORTIDENT)) $criteria->add(RpMissionItineraryPeer::FROMAIRPORTIDENT, $this->fromairportident);
		if ($this->isColumnModified(RpMissionItineraryPeer::FROMAIRPORTNAME)) $criteria->add(RpMissionItineraryPeer::FROMAIRPORTNAME, $this->fromairportname);
		if ($this->isColumnModified(RpMissionItineraryPeer::FROMAIRPORTCITY)) $criteria->add(RpMissionItineraryPeer::FROMAIRPORTCITY, $this->fromairportcity);
		if ($this->isColumnModified(RpMissionItineraryPeer::FROMAIRPORTSTATE)) $criteria->add(RpMissionItineraryPeer::FROMAIRPORTSTATE, $this->fromairportstate);
		if ($this->isColumnModified(RpMissionItineraryPeer::FROMAIRPORTGMTOFFSET)) $criteria->add(RpMissionItineraryPeer::FROMAIRPORTGMTOFFSET, $this->fromairportgmtoffset);
		if ($this->isColumnModified(RpMissionItineraryPeer::FROMAIRPORTDSTOFFSET)) $criteria->add(RpMissionItineraryPeer::FROMAIRPORTDSTOFFSET, $this->fromairportdstoffset);
		if ($this->isColumnModified(RpMissionItineraryPeer::TOAIRPORTIDENT)) $criteria->add(RpMissionItineraryPeer::TOAIRPORTIDENT, $this->toairportident);
		if ($this->isColumnModified(RpMissionItineraryPeer::TOAIRPORTNAME)) $criteria->add(RpMissionItineraryPeer::TOAIRPORTNAME, $this->toairportname);
		if ($this->isColumnModified(RpMissionItineraryPeer::TOAIRPORTCITY)) $criteria->add(RpMissionItineraryPeer::TOAIRPORTCITY, $this->toairportcity);
		if ($this->isColumnModified(RpMissionItineraryPeer::TOAIRPORTSTATE)) $criteria->add(RpMissionItineraryPeer::TOAIRPORTSTATE, $this->toairportstate);
		if ($this->isColumnModified(RpMissionItineraryPeer::TOAIRPORTGMTOFFSET)) $criteria->add(RpMissionItineraryPeer::TOAIRPORTGMTOFFSET, $this->toairportgmtoffset);
		if ($this->isColumnModified(RpMissionItineraryPeer::TOAIRPORTDSTOFFSET)) $criteria->add(RpMissionItineraryPeer::TOAIRPORTDSTOFFSET, $this->toairportdstoffset);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTFIRSTNAME)) $criteria->add(RpMissionItineraryPeer::PILOTFIRSTNAME, $this->pilotfirstname);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTLASTNAME)) $criteria->add(RpMissionItineraryPeer::PILOTLASTNAME, $this->pilotlastname);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTDAYPHONE)) $criteria->add(RpMissionItineraryPeer::PILOTDAYPHONE, $this->pilotdayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTDAYCOMMENT)) $criteria->add(RpMissionItineraryPeer::PILOTDAYCOMMENT, $this->pilotdaycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTEVEPHONE)) $criteria->add(RpMissionItineraryPeer::PILOTEVEPHONE, $this->pilotevephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTEVECOMMENT)) $criteria->add(RpMissionItineraryPeer::PILOTEVECOMMENT, $this->pilotevecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTFAXPHONE)) $criteria->add(RpMissionItineraryPeer::PILOTFAXPHONE, $this->pilotfaxphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::PILOTFAXCOMMENT, $this->pilotfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::PILOTMOBILEPHONE, $this->pilotmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTMOBILECOMMENT)) $criteria->add(RpMissionItineraryPeer::PILOTMOBILECOMMENT, $this->pilotmobilecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTPAGERPHONE)) $criteria->add(RpMissionItineraryPeer::PILOTPAGERPHONE, $this->pilotpagerphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTPAGERCOMMENT)) $criteria->add(RpMissionItineraryPeer::PILOTPAGERCOMMENT, $this->pilotpagercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTOTHERPHONE)) $criteria->add(RpMissionItineraryPeer::PILOTOTHERPHONE, $this->pilototherphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTOTHERCOMMENT)) $criteria->add(RpMissionItineraryPeer::PILOTOTHERCOMMENT, $this->pilotothercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTEMAIL)) $criteria->add(RpMissionItineraryPeer::PILOTEMAIL, $this->pilotemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTFIRSTNAME)) $criteria->add(RpMissionItineraryPeer::COPILOTFIRSTNAME, $this->copilotfirstname);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTLASTNAME)) $criteria->add(RpMissionItineraryPeer::COPILOTLASTNAME, $this->copilotlastname);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTDAYPHONE)) $criteria->add(RpMissionItineraryPeer::COPILOTDAYPHONE, $this->copilotdayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTDAYCOMMENT)) $criteria->add(RpMissionItineraryPeer::COPILOTDAYCOMMENT, $this->copilotdaycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTEVEPHONE)) $criteria->add(RpMissionItineraryPeer::COPILOTEVEPHONE, $this->copilotevephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTEVECOMMENT)) $criteria->add(RpMissionItineraryPeer::COPILOTEVECOMMENT, $this->copilotevecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::COPILOTMOBILEPHONE, $this->copilotmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTMOBILECOMMENT)) $criteria->add(RpMissionItineraryPeer::COPILOTMOBILECOMMENT, $this->copilotmobilecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTPAGERPHONE)) $criteria->add(RpMissionItineraryPeer::COPILOTPAGERPHONE, $this->copilotpagerphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTPAGERCOMMENT)) $criteria->add(RpMissionItineraryPeer::COPILOTPAGERCOMMENT, $this->copilotpagercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTOTHERPHONE)) $criteria->add(RpMissionItineraryPeer::COPILOTOTHERPHONE, $this->copilototherphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTOTHERCOMMENT)) $criteria->add(RpMissionItineraryPeer::COPILOTOTHERCOMMENT, $this->copilotothercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTFAXPHONE)) $criteria->add(RpMissionItineraryPeer::COPILOTFAXPHONE, $this->copilotfaxphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::COPILOTFAXCOMMENT, $this->copilotfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COPILOTEMAIL)) $criteria->add(RpMissionItineraryPeer::COPILOTEMAIL, $this->copilotemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTFIRSTNAME)) $criteria->add(RpMissionItineraryPeer::BUPILOTFIRSTNAME, $this->bupilotfirstname);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTLASTNAME)) $criteria->add(RpMissionItineraryPeer::BUPILOTLASTNAME, $this->bupilotlastname);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTDAYPHONE)) $criteria->add(RpMissionItineraryPeer::BUPILOTDAYPHONE, $this->bupilotdayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTDAYCOMMENT)) $criteria->add(RpMissionItineraryPeer::BUPILOTDAYCOMMENT, $this->bupilotdaycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTEVEPHONE)) $criteria->add(RpMissionItineraryPeer::BUPILOTEVEPHONE, $this->bupilotevephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTEVECOMMENT)) $criteria->add(RpMissionItineraryPeer::BUPILOTEVECOMMENT, $this->bupilotevecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::BUPILOTMOBILEPHONE, $this->bupilotmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTMOBILECOMMENT)) $criteria->add(RpMissionItineraryPeer::BUPILOTMOBILECOMMENT, $this->bupilotmobilecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTPAGERPHONE)) $criteria->add(RpMissionItineraryPeer::BUPILOTPAGERPHONE, $this->bupilotpagerphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTPAGERCOMMENT)) $criteria->add(RpMissionItineraryPeer::BUPILOTPAGERCOMMENT, $this->bupilotpagercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTOTHERPHONE)) $criteria->add(RpMissionItineraryPeer::BUPILOTOTHERPHONE, $this->bupilototherphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTOTHERCOMMENT)) $criteria->add(RpMissionItineraryPeer::BUPILOTOTHERCOMMENT, $this->bupilotothercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTFAXPHONE)) $criteria->add(RpMissionItineraryPeer::BUPILOTFAXPHONE, $this->bupilotfaxphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::BUPILOTFAXCOMMENT, $this->bupilotfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::BUPILOTEMAIL)) $criteria->add(RpMissionItineraryPeer::BUPILOTEMAIL, $this->bupilotemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDFIRSTNAME)) $criteria->add(RpMissionItineraryPeer::COORDFIRSTNAME, $this->coordfirstname);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDLASTNAME)) $criteria->add(RpMissionItineraryPeer::COORDLASTNAME, $this->coordlastname);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDDAYPHONE)) $criteria->add(RpMissionItineraryPeer::COORDDAYPHONE, $this->coorddayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDDAYCOMMENT)) $criteria->add(RpMissionItineraryPeer::COORDDAYCOMMENT, $this->coorddaycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDEVEPHONE)) $criteria->add(RpMissionItineraryPeer::COORDEVEPHONE, $this->coordevephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDEVECOMMENT)) $criteria->add(RpMissionItineraryPeer::COORDEVECOMMENT, $this->coordevecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::COORDMOBILEPHONE, $this->coordmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDMOBILECOMMENT)) $criteria->add(RpMissionItineraryPeer::COORDMOBILECOMMENT, $this->coordmobilecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDPAGERPHONE)) $criteria->add(RpMissionItineraryPeer::COORDPAGERPHONE, $this->coordpagerphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDPAGERCOMMENT)) $criteria->add(RpMissionItineraryPeer::COORDPAGERCOMMENT, $this->coordpagercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDOTHERPHONE)) $criteria->add(RpMissionItineraryPeer::COORDOTHERPHONE, $this->coordotherphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDOTHERCOMMENT)) $criteria->add(RpMissionItineraryPeer::COORDOTHERCOMMENT, $this->coordothercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDFAXPHONE)) $criteria->add(RpMissionItineraryPeer::COORDFAXPHONE, $this->coordfaxphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::COORDFAXCOMMENT, $this->coordfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::COORDEMAIL)) $criteria->add(RpMissionItineraryPeer::COORDEMAIL, $this->coordemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQUESTERNAME)) $criteria->add(RpMissionItineraryPeer::REQUESTERNAME, $this->requestername);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQFIRSTNAME)) $criteria->add(RpMissionItineraryPeer::REQFIRSTNAME, $this->reqfirstname);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQLASTNAME)) $criteria->add(RpMissionItineraryPeer::REQLASTNAME, $this->reqlastname);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQDAYPHONE)) $criteria->add(RpMissionItineraryPeer::REQDAYPHONE, $this->reqdayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQEVEPHONE)) $criteria->add(RpMissionItineraryPeer::REQEVEPHONE, $this->reqevephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::REQMOBILEPHONE, $this->reqmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQPAGERPHONE)) $criteria->add(RpMissionItineraryPeer::REQPAGERPHONE, $this->reqpagerphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQOTHERPHONE)) $criteria->add(RpMissionItineraryPeer::REQOTHERPHONE, $this->reqotherphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQFAXPHONE)) $criteria->add(RpMissionItineraryPeer::REQFAXPHONE, $this->reqfaxphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQDAYCOMMENT)) $criteria->add(RpMissionItineraryPeer::REQDAYCOMMENT, $this->reqdaycomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQEVECOMMENT)) $criteria->add(RpMissionItineraryPeer::REQEVECOMMENT, $this->reqevecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQPAGERCOMMENT)) $criteria->add(RpMissionItineraryPeer::REQPAGERCOMMENT, $this->reqpagercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQMOBILECOMMENT)) $criteria->add(RpMissionItineraryPeer::REQMOBILECOMMENT, $this->reqmobilecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQFAXCOMMENT)) $criteria->add(RpMissionItineraryPeer::REQFAXCOMMENT, $this->reqfaxcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQOTHERCOMMENT)) $criteria->add(RpMissionItineraryPeer::REQOTHERCOMMENT, $this->reqothercomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::REQEMAIL)) $criteria->add(RpMissionItineraryPeer::REQEMAIL, $this->reqemail);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONNAME)) $criteria->add(RpMissionItineraryPeer::COMPANIONNAME, $this->companionname);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONRELATIONSHIP)) $criteria->add(RpMissionItineraryPeer::COMPANIONRELATIONSHIP, $this->companionrelationship);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONDOB)) $criteria->add(RpMissionItineraryPeer::COMPANIONDOB, $this->companiondob);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONAGE)) $criteria->add(RpMissionItineraryPeer::COMPANIONAGE, $this->companionage);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONWEIGHT)) $criteria->add(RpMissionItineraryPeer::COMPANIONWEIGHT, $this->companionweight);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONPHONE)) $criteria->add(RpMissionItineraryPeer::COMPANIONPHONE, $this->companionphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::COMPANIONPHONECOMMENT)) $criteria->add(RpMissionItineraryPeer::COMPANIONPHONECOMMENT, $this->companionphonecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::PILOTNAME)) $criteria->add(RpMissionItineraryPeer::PILOTNAME, $this->pilotname);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFADAYPHONE)) $criteria->add(RpMissionItineraryPeer::AFADAYPHONE, $this->afadayphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFANIGHTPHONE)) $criteria->add(RpMissionItineraryPeer::AFANIGHTPHONE, $this->afanightphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFAFAXPHONE)) $criteria->add(RpMissionItineraryPeer::AFAFAXPHONE, $this->afafaxphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFAPILOTMOBILEPHONE)) $criteria->add(RpMissionItineraryPeer::AFAPILOTMOBILEPHONE, $this->afapilotmobilephone);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFAAIRCRAFT)) $criteria->add(RpMissionItineraryPeer::AFAAIRCRAFT, $this->afaaircraft);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFANNUMBER)) $criteria->add(RpMissionItineraryPeer::AFANNUMBER, $this->afannumber);
		if ($this->isColumnModified(RpMissionItineraryPeer::AIRCRAFTCOLOR)) $criteria->add(RpMissionItineraryPeer::AIRCRAFTCOLOR, $this->aircraftcolor);
		if ($this->isColumnModified(RpMissionItineraryPeer::ETD)) $criteria->add(RpMissionItineraryPeer::ETD, $this->etd);
		if ($this->isColumnModified(RpMissionItineraryPeer::ETA)) $criteria->add(RpMissionItineraryPeer::ETA, $this->eta);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFAORGNAME)) $criteria->add(RpMissionItineraryPeer::AFAORGNAME, $this->afaorgname);
		if ($this->isColumnModified(RpMissionItineraryPeer::AFAORGPHONE)) $criteria->add(RpMissionItineraryPeer::AFAORGPHONE, $this->afaorgphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::FBONAME)) $criteria->add(RpMissionItineraryPeer::FBONAME, $this->fboname);
		if ($this->isColumnModified(RpMissionItineraryPeer::FBOPHONE)) $criteria->add(RpMissionItineraryPeer::FBOPHONE, $this->fbophone);
		if ($this->isColumnModified(RpMissionItineraryPeer::FBOFAX)) $criteria->add(RpMissionItineraryPeer::FBOFAX, $this->fbofax);
		if ($this->isColumnModified(RpMissionItineraryPeer::FBOFUELDISCOUNT)) $criteria->add(RpMissionItineraryPeer::FBOFUELDISCOUNT, $this->fbofueldiscount);
		if ($this->isColumnModified(RpMissionItineraryPeer::FBOAIRPORTIDENT)) $criteria->add(RpMissionItineraryPeer::FBOAIRPORTIDENT, $this->fboairportident);
		if ($this->isColumnModified(RpMissionItineraryPeer::AIRCRAFTSEATS)) $criteria->add(RpMissionItineraryPeer::AIRCRAFTSEATS, $this->aircraftseats);
		if ($this->isColumnModified(RpMissionItineraryPeer::AIRCRAFTNNUMBER)) $criteria->add(RpMissionItineraryPeer::AIRCRAFTNNUMBER, $this->aircraftnnumber);
		if ($this->isColumnModified(RpMissionItineraryPeer::AIRCRAFTKNOWNICE)) $criteria->add(RpMissionItineraryPeer::AIRCRAFTKNOWNICE, $this->aircraftknownice);
		if ($this->isColumnModified(RpMissionItineraryPeer::AIRCRAFTMAKE)) $criteria->add(RpMissionItineraryPeer::AIRCRAFTMAKE, $this->aircraftmake);
		if ($this->isColumnModified(RpMissionItineraryPeer::AIRCRAFTMODEL)) $criteria->add(RpMissionItineraryPeer::AIRCRAFTMODEL, $this->aircraftmodel);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPNAME)) $criteria->add(RpMissionItineraryPeer::CAMPNAME, $this->campname);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPPHONE)) $criteria->add(RpMissionItineraryPeer::CAMPPHONE, $this->campphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPPHONECOMMENT)) $criteria->add(RpMissionItineraryPeer::CAMPPHONECOMMENT, $this->campphonecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPLODGINGNAME)) $criteria->add(RpMissionItineraryPeer::CAMPLODGINGNAME, $this->camplodgingname);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPLODGINGPHONE)) $criteria->add(RpMissionItineraryPeer::CAMPLODGINGPHONE, $this->camplodgingphone);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPLODGINGPHONECOMMENT)) $criteria->add(RpMissionItineraryPeer::CAMPLODGINGPHONECOMMENT, $this->camplodgingphonecomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::CAMPCOMMENT)) $criteria->add(RpMissionItineraryPeer::CAMPCOMMENT, $this->campcomment);
		if ($this->isColumnModified(RpMissionItineraryPeer::FLIGHTINFORMATION)) $criteria->add(RpMissionItineraryPeer::FLIGHTINFORMATION, $this->flightinformation);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(RpMissionItineraryPeer::DATABASE_NAME);

		$criteria->add(RpMissionItineraryPeer::ID, $this->id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getId();
	}

	/**
	 * Generic method to set the primary key (id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of RpMissionItinerary (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setNow($this->now);

		$copyObj->setMissionid($this->missionid);

		$copyObj->setExternalid($this->externalid);

		$copyObj->setMissiontypeid($this->missiontypeid);

		$copyObj->setMissiondate($this->missiondate);

		$copyObj->setApptdate($this->apptdate);

		$copyObj->setFlighttime($this->flighttime);

		$copyObj->setReleasingphysician($this->releasingphysician);

		$copyObj->setReleasingphone($this->releasingphone);

		$copyObj->setReleasingfax($this->releasingfax);

		$copyObj->setReleasingfaxcomment($this->releasingfaxcomment);

		$copyObj->setReleasingemail($this->releasingemail);

		$copyObj->setLodging($this->lodging);

		$copyObj->setLodgingphone($this->lodgingphone);

		$copyObj->setLodgingPhoneComment($this->lodging_phone_comment);

		$copyObj->setFacilityname($this->facilityname);

		$copyObj->setFacilityphone($this->facilityphone);

		$copyObj->setFacilityphonecomment($this->facilityphonecomment);

		$copyObj->setPublicconsiderations($this->publicconsiderations);

		$copyObj->setPrivateconsiderations($this->privateconsiderations);

		$copyObj->setIllness($this->illness);

		$copyObj->setGroundtransportationcomment($this->groundtransportationcomment);

		$copyObj->setTreatingphysician($this->treatingphysician);

		$copyObj->setTreatingphone($this->treatingphone);

		$copyObj->setTreatingfax($this->treatingfax);

		$copyObj->setTreatingfaxcomment($this->treatingfaxcomment);

		$copyObj->setTreatingemail($this->treatingemail);

		$copyObj->setLanguagespoken($this->languagespoken);

		$copyObj->setBestcontactmethod($this->bestcontactmethod);

		$copyObj->setEmergencycontactname($this->emergencycontactname);

		$copyObj->setEmergencycontactprimaryphone($this->emergencycontactprimaryphone);

		$copyObj->setEmergencycontactsecondaryphone($this->emergencycontactsecondaryphone);

		$copyObj->setEmergencycontactprimarycomment($this->emergencycontactprimarycomment);

		$copyObj->setEmergencycontactsecondarycomment($this->emergencycontactsecondarycomment);

		$copyObj->setPassfirstname($this->passfirstname);

		$copyObj->setPasslastname($this->passlastname);

		$copyObj->setPasscity($this->passcity);

		$copyObj->setPassstate($this->passstate);

		$copyObj->setPasszipcode($this->passzipcode);

		$copyObj->setPassage($this->passage);

		$copyObj->setPassweight($this->passweight);

		$copyObj->setPassdayphone($this->passdayphone);

		$copyObj->setPassdaycomment($this->passdaycomment);

		$copyObj->setPassevephone($this->passevephone);

		$copyObj->setPassevecomment($this->passevecomment);

		$copyObj->setPasspagerphone($this->passpagerphone);

		$copyObj->setPasspagercomment($this->passpagercomment);

		$copyObj->setPassmobilephone($this->passmobilephone);

		$copyObj->setPassmobilecomment($this->passmobilecomment);

		$copyObj->setPassotherphone($this->passotherphone);

		$copyObj->setPassothercomment($this->passothercomment);

		$copyObj->setPassfaxphone1($this->passfaxphone1);

		$copyObj->setPassfax1comment($this->passfax1comment);

		$copyObj->setPassemail($this->passemail);

		$copyObj->setPassaddressone($this->passaddressone);

		$copyObj->setPassaddresstwo($this->passaddresstwo);

		$copyObj->setComment($this->comment);

		$copyObj->setLegnumber($this->legnumber);

		$copyObj->setPassonboard($this->passonboard);

		$copyObj->setBaggageweight($this->baggageweight);

		$copyObj->setBaggagedesc($this->baggagedesc);

		$copyObj->setPubliccnote($this->publiccnote);

		$copyObj->setPrivatecnote($this->privatecnote);

		$copyObj->setCopilotwanted($this->copilotwanted);

		$copyObj->setFromairportident($this->fromairportident);

		$copyObj->setFromairportname($this->fromairportname);

		$copyObj->setFromairportcity($this->fromairportcity);

		$copyObj->setFromairportstate($this->fromairportstate);

		$copyObj->setFromairportgmtoffset($this->fromairportgmtoffset);

		$copyObj->setFromairportdstoffset($this->fromairportdstoffset);

		$copyObj->setToairportident($this->toairportident);

		$copyObj->setToairportname($this->toairportname);

		$copyObj->setToairportcity($this->toairportcity);

		$copyObj->setToairportstate($this->toairportstate);

		$copyObj->setToairportgmtoffset($this->toairportgmtoffset);

		$copyObj->setToairportdstoffset($this->toairportdstoffset);

		$copyObj->setPilotfirstname($this->pilotfirstname);

		$copyObj->setPilotlastname($this->pilotlastname);

		$copyObj->setPilotdayphone($this->pilotdayphone);

		$copyObj->setPilotdaycomment($this->pilotdaycomment);

		$copyObj->setPilotevephone($this->pilotevephone);

		$copyObj->setPilotevecomment($this->pilotevecomment);

		$copyObj->setPilotfaxphone($this->pilotfaxphone);

		$copyObj->setPilotfaxcomment($this->pilotfaxcomment);

		$copyObj->setPilotmobilephone($this->pilotmobilephone);

		$copyObj->setPilotmobilecomment($this->pilotmobilecomment);

		$copyObj->setPilotpagerphone($this->pilotpagerphone);

		$copyObj->setPilotpagercomment($this->pilotpagercomment);

		$copyObj->setPilototherphone($this->pilototherphone);

		$copyObj->setPilotothercomment($this->pilotothercomment);

		$copyObj->setPilotemail($this->pilotemail);

		$copyObj->setCopilotfirstname($this->copilotfirstname);

		$copyObj->setCopilotlastname($this->copilotlastname);

		$copyObj->setCopilotdayphone($this->copilotdayphone);

		$copyObj->setCopilotdaycomment($this->copilotdaycomment);

		$copyObj->setCopilotevephone($this->copilotevephone);

		$copyObj->setCopilotevecomment($this->copilotevecomment);

		$copyObj->setCopilotmobilephone($this->copilotmobilephone);

		$copyObj->setCopilotmobilecomment($this->copilotmobilecomment);

		$copyObj->setCopilotpagerphone($this->copilotpagerphone);

		$copyObj->setCopilotpagercomment($this->copilotpagercomment);

		$copyObj->setCopilototherphone($this->copilototherphone);

		$copyObj->setCopilotothercomment($this->copilotothercomment);

		$copyObj->setCopilotfaxphone($this->copilotfaxphone);

		$copyObj->setCopilotfaxcomment($this->copilotfaxcomment);

		$copyObj->setCopilotemail($this->copilotemail);

		$copyObj->setBupilotfirstname($this->bupilotfirstname);

		$copyObj->setBupilotlastname($this->bupilotlastname);

		$copyObj->setBupilotdayphone($this->bupilotdayphone);

		$copyObj->setBupilotdaycomment($this->bupilotdaycomment);

		$copyObj->setBupilotevephone($this->bupilotevephone);

		$copyObj->setBupilotevecomment($this->bupilotevecomment);

		$copyObj->setBupilotmobilephone($this->bupilotmobilephone);

		$copyObj->setBupilotmobilecomment($this->bupilotmobilecomment);

		$copyObj->setBupilotpagerphone($this->bupilotpagerphone);

		$copyObj->setBupilotpagercomment($this->bupilotpagercomment);

		$copyObj->setBupilototherphone($this->bupilototherphone);

		$copyObj->setBupilotothercomment($this->bupilotothercomment);

		$copyObj->setBupilotfaxphone($this->bupilotfaxphone);

		$copyObj->setBupilotfaxcomment($this->bupilotfaxcomment);

		$copyObj->setBupilotemail($this->bupilotemail);

		$copyObj->setCoordfirstname($this->coordfirstname);

		$copyObj->setCoordlastname($this->coordlastname);

		$copyObj->setCoorddayphone($this->coorddayphone);

		$copyObj->setCoorddaycomment($this->coorddaycomment);

		$copyObj->setCoordevephone($this->coordevephone);

		$copyObj->setCoordevecomment($this->coordevecomment);

		$copyObj->setCoordmobilephone($this->coordmobilephone);

		$copyObj->setCoordmobilecomment($this->coordmobilecomment);

		$copyObj->setCoordpagerphone($this->coordpagerphone);

		$copyObj->setCoordpagercomment($this->coordpagercomment);

		$copyObj->setCoordotherphone($this->coordotherphone);

		$copyObj->setCoordothercomment($this->coordothercomment);

		$copyObj->setCoordfaxphone($this->coordfaxphone);

		$copyObj->setCoordfaxcomment($this->coordfaxcomment);

		$copyObj->setCoordemail($this->coordemail);

		$copyObj->setRequestername($this->requestername);

		$copyObj->setReqfirstname($this->reqfirstname);

		$copyObj->setReqlastname($this->reqlastname);

		$copyObj->setReqdayphone($this->reqdayphone);

		$copyObj->setReqevephone($this->reqevephone);

		$copyObj->setReqmobilephone($this->reqmobilephone);

		$copyObj->setReqpagerphone($this->reqpagerphone);

		$copyObj->setReqotherphone($this->reqotherphone);

		$copyObj->setReqfaxphone($this->reqfaxphone);

		$copyObj->setReqdaycomment($this->reqdaycomment);

		$copyObj->setReqevecomment($this->reqevecomment);

		$copyObj->setReqpagercomment($this->reqpagercomment);

		$copyObj->setReqmobilecomment($this->reqmobilecomment);

		$copyObj->setReqfaxcomment($this->reqfaxcomment);

		$copyObj->setReqothercomment($this->reqothercomment);

		$copyObj->setReqemail($this->reqemail);

		$copyObj->setCompanionname($this->companionname);

		$copyObj->setCompanionrelationship($this->companionrelationship);

		$copyObj->setCompaniondob($this->companiondob);

		$copyObj->setCompanionage($this->companionage);

		$copyObj->setCompanionweight($this->companionweight);

		$copyObj->setCompanionphone($this->companionphone);

		$copyObj->setCompanionphonecomment($this->companionphonecomment);

		$copyObj->setPilotname($this->pilotname);

		$copyObj->setAfadayphone($this->afadayphone);

		$copyObj->setAfanightphone($this->afanightphone);

		$copyObj->setAfafaxphone($this->afafaxphone);

		$copyObj->setAfapilotmobilephone($this->afapilotmobilephone);

		$copyObj->setAfaaircraft($this->afaaircraft);

		$copyObj->setAfannumber($this->afannumber);

		$copyObj->setAircraftcolor($this->aircraftcolor);

		$copyObj->setEtd($this->etd);

		$copyObj->setEta($this->eta);

		$copyObj->setAfaorgname($this->afaorgname);

		$copyObj->setAfaorgphone($this->afaorgphone);

		$copyObj->setFboname($this->fboname);

		$copyObj->setFbophone($this->fbophone);

		$copyObj->setFbofax($this->fbofax);

		$copyObj->setFbofueldiscount($this->fbofueldiscount);

		$copyObj->setFboairportident($this->fboairportident);

		$copyObj->setAircraftseats($this->aircraftseats);

		$copyObj->setAircraftnnumber($this->aircraftnnumber);

		$copyObj->setAircraftknownice($this->aircraftknownice);

		$copyObj->setAircraftmake($this->aircraftmake);

		$copyObj->setAircraftmodel($this->aircraftmodel);

		$copyObj->setCampname($this->campname);

		$copyObj->setCampphone($this->campphone);

		$copyObj->setCampphonecomment($this->campphonecomment);

		$copyObj->setCamplodgingname($this->camplodgingname);

		$copyObj->setCamplodgingphone($this->camplodgingphone);

		$copyObj->setCamplodgingphonecomment($this->camplodgingphonecomment);

		$copyObj->setCampcomment($this->campcomment);

		$copyObj->setFlightinformation($this->flightinformation);


		$copyObj->setNew(true);

		$copyObj->setId(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     RpMissionItinerary Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     RpMissionItineraryPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new RpMissionItineraryPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseRpMissionItinerary:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseRpMissionItinerary::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseRpMissionItinerary
