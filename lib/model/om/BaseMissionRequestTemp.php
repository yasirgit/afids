<?php

/**
 * Base class that represents a row from the 'mission_request_temp' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue May 24 06:33:28 2011
 *
 * @package    lib.model.om
 */
abstract class BaseMissionRequestTemp extends BaseObject  implements Persistent {


  const PEER = 'MissionRequestTempPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        MissionRequestTempPeer
	 */
	protected static $peer;

	/**
	 * The value for the id field.
	 * @var        int
	 */
	protected $id;

	/**
	 * The value for the request_date field.
	 * @var        string
	 */
	protected $request_date;

	/**
	 * The value for the request_by field.
	 * @var        int
	 */
	protected $request_by;

	/**
	 * The value for the request_on_behalf field.
	 * @var        int
	 */
	protected $request_on_behalf;

	/**
	 * The value for the appt_date field.
	 * @var        string
	 */
	protected $appt_date;

	/**
	 * The value for the return_date field.
	 * @var        string
	 */
	protected $return_date;

	/**
	 * The value for the baggage_weight field.
	 * @var        int
	 */
	protected $baggage_weight;

	/**
	 * The value for the baggage_desc field.
	 * @var        string
	 */
	protected $baggage_desc;

	/**
	 * The value for the pass_title field.
	 * @var        string
	 */
	protected $pass_title;

	/**
	 * The value for the pass_first_name field.
	 * @var        string
	 */
	protected $pass_first_name;

	/**
	 * The value for the pass_last_name field.
	 * @var        string
	 */
	protected $pass_last_name;

	/**
	 * The value for the pass_address1 field.
	 * @var        string
	 */
	protected $pass_address1;

	/**
	 * The value for the pass_address2 field.
	 * @var        string
	 */
	protected $pass_address2;

	/**
	 * The value for the pass_city field.
	 * @var        string
	 */
	protected $pass_city;

	/**
	 * The value for the pass_county field.
	 * @var        string
	 */
	protected $pass_county;

	/**
	 * The value for the pass_state field.
	 * @var        string
	 */
	protected $pass_state;

	/**
	 * The value for the pass_country field.
	 * @var        string
	 */
	protected $pass_country;

	/**
	 * The value for the pass_zipcode field.
	 * @var        string
	 */
	protected $pass_zipcode;

	/**
	 * The value for the pass_day_phone field.
	 * @var        string
	 */
	protected $pass_day_phone;

	/**
	 * The value for the pass_day_comment field.
	 * @var        string
	 */
	protected $pass_day_comment;

	/**
	 * The value for the pass_eve_phone field.
	 * @var        string
	 */
	protected $pass_eve_phone;

	/**
	 * The value for the pass_eve_comment field.
	 * @var        string
	 */
	protected $pass_eve_comment;

	/**
	 * The value for the pass_mobile_phone field.
	 * @var        string
	 */
	protected $pass_mobile_phone;

	/**
	 * The value for the pass_mobile_comment field.
	 * @var        string
	 */
	protected $pass_mobile_comment;

	/**
	 * The value for the pass_pager_phone field.
	 * @var        string
	 */
	protected $pass_pager_phone;

	/**
	 * The value for the pass_pager_comment field.
	 * @var        string
	 */
	protected $pass_pager_comment;

	/**
	 * The value for the pass_other_phone field.
	 * @var        string
	 */
	protected $pass_other_phone;

	/**
	 * The value for the pass_other_comment field.
	 * @var        string
	 */
	protected $pass_other_comment;

	/**
	 * The value for the pass_email field.
	 * @var        string
	 */
	protected $pass_email;

	/**
	 * The value for the pass_date_of_birth field.
	 * @var        string
	 */
	protected $pass_date_of_birth;

	/**
	 * The value for the illness field.
	 * @var        string
	 */
	protected $illness;

	/**
	 * The value for the financial field.
	 * @var        string
	 */
	protected $financial;

	/**
	 * The value for the pass_weight field.
	 * @var        int
	 */
	protected $pass_weight;

	/**
	 * The value for the releasing_physician field.
	 * @var        string
	 */
	protected $releasing_physician;

	/**
	 * The value for the release_phone field.
	 * @var        string
	 */
	protected $release_phone;

	/**
	 * The value for the release_phone_comment field.
	 * @var        string
	 */
	protected $release_phone_comment;

	/**
	 * The value for the release_fax field.
	 * @var        string
	 */
	protected $release_fax;

	/**
	 * The value for the release_fax_comment field.
	 * @var        string
	 */
	protected $release_fax_comment;

	/**
	 * The value for the release_email field.
	 * @var        string
	 */
	protected $release_email;

	/**
	 * The value for the treating_physician field.
	 * @var        string
	 */
	protected $treating_physician;

	/**
	 * The value for the treating_phone field.
	 * @var        string
	 */
	protected $treating_phone;

	/**
	 * The value for the treating_phone_comment field.
	 * @var        string
	 */
	protected $treating_phone_comment;

	/**
	 * The value for the treating_fax field.
	 * @var        string
	 */
	protected $treating_fax;

	/**
	 * The value for the treating_fax_comment field.
	 * @var        string
	 */
	protected $treating_fax_comment;

	/**
	 * The value for the req_title field.
	 * @var        string
	 */
	protected $req_title;

	/**
	 * The value for the req_first_name field.
	 * @var        string
	 */
	protected $req_first_name;

	/**
	 * The value for the req_last_name field.
	 * @var        string
	 */
	protected $req_last_name;

	/**
	 * The value for the agency_name field.
	 * @var        string
	 */
	protected $agency_name;

	/**
	 * The value for the req_address1 field.
	 * @var        string
	 */
	protected $req_address1;

	/**
	 * The value for the req_address2 field.
	 * @var        string
	 */
	protected $req_address2;

	/**
	 * The value for the req_city field.
	 * @var        string
	 */
	protected $req_city;

	/**
	 * The value for the req_county field.
	 * @var        string
	 */
	protected $req_county;

	/**
	 * The value for the req_state field.
	 * @var        string
	 */
	protected $req_state;

	/**
	 * The value for the req_country field.
	 * @var        string
	 */
	protected $req_country;

	/**
	 * The value for the req_zipcode field.
	 * @var        string
	 */
	protected $req_zipcode;

	/**
	 * The value for the req_day_phone field.
	 * @var        string
	 */
	protected $req_day_phone;

	/**
	 * The value for the req_day_comment field.
	 * @var        string
	 */
	protected $req_day_comment;

	/**
	 * The value for the req_eve_phone field.
	 * @var        string
	 */
	protected $req_eve_phone;

	/**
	 * The value for the req_eve_comment field.
	 * @var        string
	 */
	protected $req_eve_comment;

	/**
	 * The value for the req_mobile_phone field.
	 * @var        string
	 */
	protected $req_mobile_phone;

	/**
	 * The value for the req_mobile_comment field.
	 * @var        string
	 */
	protected $req_mobile_comment;

	/**
	 * The value for the req_pager_phone field.
	 * @var        string
	 */
	protected $req_pager_phone;

	/**
	 * The value for the req_pager_comment field.
	 * @var        string
	 */
	protected $req_pager_comment;

	/**
	 * The value for the req_other_phone field.
	 * @var        string
	 */
	protected $req_other_phone;

	/**
	 * The value for the req_other_comment field.
	 * @var        string
	 */
	protected $req_other_comment;

	/**
	 * The value for the req_email field.
	 * @var        string
	 */
	protected $req_email;

	/**
	 * The value for the origin_ident field.
	 * @var        string
	 */
	protected $origin_ident;

	/**
	 * The value for the origin_id field.
	 * @var        int
	 */
	protected $origin_id;

	/**
	 * The value for the origin_city field.
	 * @var        string
	 */
	protected $origin_city;

	/**
	 * The value for the origin_state field.
	 * @var        string
	 */
	protected $origin_state;

	/**
	 * The value for the origin_zipcode field.
	 * @var        string
	 */
	protected $origin_zipcode;

	/**
	 * The value for the dest_ident field.
	 * @var        string
	 */
	protected $dest_ident;

	/**
	 * The value for the dest_id field.
	 * @var        int
	 */
	protected $dest_id;

	/**
	 * The value for the dest_city field.
	 * @var        string
	 */
	protected $dest_city;

	/**
	 * The value for the dest_state field.
	 * @var        string
	 */
	protected $dest_state;

	/**
	 * The value for the dest_zipcode field.
	 * @var        string
	 */
	protected $dest_zipcode;

	/**
	 * The value for the com1_name field.
	 * @var        string
	 */
	protected $com1_name;

	/**
	 * The value for the com1_relationship field.
	 * @var        string
	 */
	protected $com1_relationship;

	/**
	 * The value for the com1_date_of_birth field.
	 * @var        string
	 */
	protected $com1_date_of_birth;

	/**
	 * The value for the com1_weight field.
	 * @var        int
	 */
	protected $com1_weight;

	/**
	 * The value for the com1_phone field.
	 * @var        string
	 */
	protected $com1_phone;

	/**
	 * The value for the com1_comment field.
	 * @var        string
	 */
	protected $com1_comment;

	/**
	 * The value for the com2_name field.
	 * @var        string
	 */
	protected $com2_name;

	/**
	 * The value for the com2_relationship field.
	 * @var        string
	 */
	protected $com2_relationship;

	/**
	 * The value for the com2_date_of_birth field.
	 * @var        string
	 */
	protected $com2_date_of_birth;

	/**
	 * The value for the com2_weight field.
	 * @var        int
	 */
	protected $com2_weight;

	/**
	 * The value for the com2_phone field.
	 * @var        string
	 */
	protected $com2_phone;

	/**
	 * The value for the com2_comment field.
	 * @var        string
	 */
	protected $com2_comment;

	/**
	 * The value for the com3_name field.
	 * @var        string
	 */
	protected $com3_name;

	/**
	 * The value for the com3_relationship field.
	 * @var        string
	 */
	protected $com3_relationship;

	/**
	 * The value for the com3_date_of_birth field.
	 * @var        string
	 */
	protected $com3_date_of_birth;

	/**
	 * The value for the com3_weight field.
	 * @var        int
	 */
	protected $com3_weight;

	/**
	 * The value for the com3_phone field.
	 * @var        string
	 */
	protected $com3_phone;

	/**
	 * The value for the com3_comment field.
	 * @var        string
	 */
	protected $com3_comment;

	/**
	 * The value for the com4_name field.
	 * @var        string
	 */
	protected $com4_name;

	/**
	 * The value for the com4_relationship field.
	 * @var        string
	 */
	protected $com4_relationship;

	/**
	 * The value for the com4_date_of_birth field.
	 * @var        string
	 */
	protected $com4_date_of_birth;

	/**
	 * The value for the com4_weight field.
	 * @var        int
	 */
	protected $com4_weight;

	/**
	 * The value for the com4_phone field.
	 * @var        string
	 */
	protected $com4_phone;

	/**
	 * The value for the com4_comment field.
	 * @var        string
	 */
	protected $com4_comment;

	/**
	 * The value for the lodging_name field.
	 * @var        string
	 */
	protected $lodging_name;

	/**
	 * The value for the lodging_phone field.
	 * @var        string
	 */
	protected $lodging_phone;

	/**
	 * The value for the facility_name field.
	 * @var        string
	 */
	protected $facility_name;

	/**
	 * The value for the facility_phone field.
	 * @var        string
	 */
	protected $facility_phone;

	/**
	 * The value for the facility_phone_comment field.
	 * @var        string
	 */
	protected $facility_phone_comment;

	/**
	 * The value for the req_language_spoken field.
	 * @var        string
	 */
	protected $req_language_spoken;

	/**
	 * The value for the best_contact field.
	 * @var        string
	 */
	protected $best_contact;

	/**
	 * The value for the emergency_name field.
	 * @var        string
	 */
	protected $emergency_name;

	/**
	 * The value for the emergency_phone1 field.
	 * @var        string
	 */
	protected $emergency_phone1;

	/**
	 * The value for the emergency_phone2 field.
	 * @var        string
	 */
	protected $emergency_phone2;

	/**
	 * The value for the emergency_phone1_comment field.
	 * @var        string
	 */
	protected $emergency_phone1_comment;

	/**
	 * The value for the emergency_phone2_comment field.
	 * @var        string
	 */
	protected $emergency_phone2_comment;

	/**
	 * The value for the comment field.
	 * @var        string
	 */
	protected $comment;

	/**
	 * The value for the processed_date field.
	 * @var        string
	 */
	protected $processed_date;

	/**
	 * The value for the session_id field.
	 * @var        int
	 */
	protected $session_id;

	/**
	 * The value for the ip_address field.
	 * @var        string
	 */
	protected $ip_address;

	/**
	 * The value for the pass_fax_phone1 field.
	 * @var        string
	 */
	protected $pass_fax_phone1;

	/**
	 * The value for the pass_fax_comment1 field.
	 * @var        string
	 */
	protected $pass_fax_comment1;

	/**
	 * The value for the guar_first_name field.
	 * @var        string
	 */
	protected $guar_first_name;

	/**
	 * The value for the guar_last_name field.
	 * @var        string
	 */
	protected $guar_last_name;

	/**
	 * The value for the guar_address1 field.
	 * @var        string
	 */
	protected $guar_address1;

	/**
	 * The value for the guar_address2 field.
	 * @var        string
	 */
	protected $guar_address2;

	/**
	 * The value for the guar_city field.
	 * @var        string
	 */
	protected $guar_city;

	/**
	 * The value for the guar_state field.
	 * @var        string
	 */
	protected $guar_state;

	/**
	 * The value for the guar_zipcode field.
	 * @var        string
	 */
	protected $guar_zipcode;

	/**
	 * The value for the guar_day_phone field.
	 * @var        string
	 */
	protected $guar_day_phone;

	/**
	 * The value for the guar_day_comment field.
	 * @var        string
	 */
	protected $guar_day_comment;

	/**
	 * The value for the guar_eve_phone field.
	 * @var        string
	 */
	protected $guar_eve_phone;

	/**
	 * The value for the guar_eve_comment field.
	 * @var        string
	 */
	protected $guar_eve_comment;

	/**
	 * The value for the guar_fax_phone1 field.
	 * @var        string
	 */
	protected $guar_fax_phone1;

	/**
	 * The value for the guar_fax_comment1 field.
	 * @var        string
	 */
	protected $guar_fax_comment1;

	/**
	 * The value for the guar_mobile_phone field.
	 * @var        string
	 */
	protected $guar_mobile_phone;

	/**
	 * The value for the guar_mobile_comment field.
	 * @var        string
	 */
	protected $guar_mobile_comment;

	/**
	 * The value for the guar_pager_phone field.
	 * @var        string
	 */
	protected $guar_pager_phone;

	/**
	 * The value for the guar_pager_comment field.
	 * @var        string
	 */
	protected $guar_pager_comment;

	/**
	 * The value for the guar_other_phone field.
	 * @var        string
	 */
	protected $guar_other_phone;

	/**
	 * The value for the guar_other_comment field.
	 * @var        string
	 */
	protected $guar_other_comment;

	/**
	 * The value for the guar_guar_email field.
	 * @var        string
	 */
	protected $guar_guar_email;

	/**
	 * The value for the req_fax_phone1 field.
	 * @var        string
	 */
	protected $req_fax_phone1;

	/**
	 * The value for the req_fax_comment1 field.
	 * @var        string
	 */
	protected $req_fax_comment1;

	/**
	 * The value for the pass_english field.
	 * @var        int
	 */
	protected $pass_english;

	/**
	 * The value for the pass_language field.
	 * @var        string
	 */
	protected $pass_language;

	/**
	 * The value for the appt_time field.
	 * @var        string
	 */
	protected $appt_time;

	/**
	 * The value for the requester_id field.
	 * @var        int
	 */
	protected $requester_id;

	/**
	 * The value for the passenger_id field.
	 * @var        int
	 */
	protected $passenger_id;

	/**
	 * The value for the mission_id field.
	 * @var        int
	 */
	protected $mission_id;

	/**
	 * The value for the treating_email field.
	 * @var        string
	 */
	protected $treating_email;

	/**
	 * The value for the pass_height field.
	 * @var        int
	 */
	protected $pass_height;

	/**
	 * The value for the return_time field.
	 * @var        string
	 */
	protected $return_time;

	/**
	 * The value for the pass_oxygen field.
	 * @var        int
	 */
	protected $pass_oxygen;

	/**
	 * The value for the pass_medical field.
	 * @var        int
	 */
	protected $pass_medical;

	/**
	 * The value for the referral_source_id field.
	 * @var        int
	 */
	protected $referral_source_id;

	/**
	 * The value for the follow_up_contact_name field.
	 * @var        string
	 */
	protected $follow_up_contact_name;

	/**
	 * The value for the follow_up_contact_phone field.
	 * @var        string
	 */
	protected $follow_up_contact_phone;

	/**
	 * The value for the follow_up_email field.
	 * @var        string
	 */
	protected $follow_up_email;

	/**
	 * The value for the miss_req_originator_afa_org_id field.
	 * @var        int
	 */
	protected $miss_req_originator_afa_org_id;

	/**
	 * The value for the afa_org_id field.
	 * @var        int
	 */
	protected $afa_org_id;

	/**
	 * The value for the afa_org_mission_id field.
	 * @var        int
	 */
	protected $afa_org_mission_id;

	/**
	 * The value for the mission_request_type field.
	 * @var        int
	 */
	protected $mission_request_type;

	/**
	 * The value for the last_page_processed field.
	 * @var        int
	 */
	protected $last_page_processed;

	/**
	 * The value for the guardian_middle_name field.
	 * @var        string
	 */
	protected $guardian_middle_name;

	/**
	 * The value for the guardian_nickname field.
	 * @var        string
	 */
	protected $guardian_nickname;

	/**
	 * The value for the guardian_pager_email field.
	 * @var        string
	 */
	protected $guardian_pager_email;

	/**
	 * The value for the guardian_secondary_email field.
	 * @var        string
	 */
	protected $guardian_secondary_email;

	/**
	 * The value for the guardian_suffix field.
	 * @var        string
	 */
	protected $guardian_suffix;

	/**
	 * The value for the guardian_title field.
	 * @var        string
	 */
	protected $guardian_title;

	/**
	 * The value for the guardian_veteran field.
	 * @var        int
	 */
	protected $guardian_veteran;

	/**
	 * The value for the pass_gender field.
	 * @var        string
	 */
	protected $pass_gender;

	/**
	 * The value for the pass_middle_name field.
	 * @var        string
	 */
	protected $pass_middle_name;

	/**
	 * The value for the pass_nickname field.
	 * @var        string
	 */
	protected $pass_nickname;

	/**
	 * The value for the pass_pager_email field.
	 * @var        string
	 */
	protected $pass_pager_email;

	/**
	 * The value for the pass_secondary_email field.
	 * @var        string
	 */
	protected $pass_secondary_email;

	/**
	 * The value for the pass_suffix field.
	 * @var        string
	 */
	protected $pass_suffix;

	/**
	 * The value for the pass_veteran field.
	 * @var        int
	 */
	protected $pass_veteran;

	/**
	 * The value for the req_middle_name field.
	 * @var        string
	 */
	protected $req_middle_name;

	/**
	 * The value for the req_nickname field.
	 * @var        string
	 */
	protected $req_nickname;

	/**
	 * The value for the req_pager_email field.
	 * @var        string
	 */
	protected $req_pager_email;

	/**
	 * The value for the req_secondary_email field.
	 * @var        string
	 */
	protected $req_secondary_email;

	/**
	 * The value for the req_suffix field.
	 * @var        string
	 */
	protected $req_suffix;

	/**
	 * The value for the req_veteran field.
	 * @var        int
	 */
	protected $req_veteran;

	/**
	 * The value for the lodging_phone_comment field.
	 * @var        string
	 */
	protected $lodging_phone_comment;

	/**
	 * The value for the req_gender field.
	 * @var        string
	 */
	protected $req_gender;

	/**
	 * The value for the guardian_gender field.
	 * @var        string
	 */
	protected $guardian_gender;

	/**
	 * The value for the agency_position field.
	 * @var        string
	 */
	protected $agency_position;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseMissionRequestTemp object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
	}

	/**
	 * Get the [id] column value.
	 * 
	 * @return     int
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Get the [optionally formatted] temporal [request_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getRequestDate($format = 'Y-m-d H:i:s')
	{
		if ($this->request_date === null) {
			return null;
		}


		if ($this->request_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->request_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->request_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [request_by] column value.
	 * 
	 * @return     int
	 */
	public function getRequestBy()
	{
		return $this->request_by;
	}

	/**
	 * Get the [request_on_behalf] column value.
	 * 
	 * @return     int
	 */
	public function getRequestOnBehalf()
	{
		return $this->request_on_behalf;
	}

	/**
	 * Get the [optionally formatted] temporal [appt_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getApptDate($format = 'Y-m-d H:i:s')
	{
		if ($this->appt_date === null) {
			return null;
		}


		if ($this->appt_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->appt_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->appt_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [optionally formatted] temporal [return_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getReturnDate($format = 'Y-m-d H:i:s')
	{
		if ($this->return_date === null) {
			return null;
		}


		if ($this->return_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->return_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->return_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [baggage_weight] column value.
	 * 
	 * @return     int
	 */
	public function getBaggageWeight()
	{
		return $this->baggage_weight;
	}

	/**
	 * Get the [baggage_desc] column value.
	 * 
	 * @return     string
	 */
	public function getBaggageDesc()
	{
		return $this->baggage_desc;
	}

	/**
	 * Get the [pass_title] column value.
	 * 
	 * @return     string
	 */
	public function getPassTitle()
	{
		return $this->pass_title;
	}

	/**
	 * Get the [pass_first_name] column value.
	 * 
	 * @return     string
	 */
	public function getPassFirstName()
	{
		return $this->pass_first_name;
	}

	/**
	 * Get the [pass_last_name] column value.
	 * 
	 * @return     string
	 */
	public function getPassLastName()
	{
		return $this->pass_last_name;
	}

	/**
	 * Get the [pass_address1] column value.
	 * 
	 * @return     string
	 */
	public function getPassAddress1()
	{
		return $this->pass_address1;
	}

	/**
	 * Get the [pass_address2] column value.
	 * 
	 * @return     string
	 */
	public function getPassAddress2()
	{
		return $this->pass_address2;
	}

	/**
	 * Get the [pass_city] column value.
	 * 
	 * @return     string
	 */
	public function getPassCity()
	{
		return $this->pass_city;
	}

	/**
	 * Get the [pass_county] column value.
	 * 
	 * @return     string
	 */
	public function getPassCounty()
	{
		return $this->pass_county;
	}

	/**
	 * Get the [pass_state] column value.
	 * 
	 * @return     string
	 */
	public function getPassState()
	{
		return $this->pass_state;
	}

	/**
	 * Get the [pass_country] column value.
	 * 
	 * @return     string
	 */
	public function getPassCountry()
	{
		return $this->pass_country;
	}

	/**
	 * Get the [pass_zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getPassZipcode()
	{
		return $this->pass_zipcode;
	}

	/**
	 * Get the [pass_day_phone] column value.
	 * 
	 * @return     string
	 */
	public function getPassDayPhone()
	{
		return $this->pass_day_phone;
	}

	/**
	 * Get the [pass_day_comment] column value.
	 * 
	 * @return     string
	 */
	public function getPassDayComment()
	{
		return $this->pass_day_comment;
	}

	/**
	 * Get the [pass_eve_phone] column value.
	 * 
	 * @return     string
	 */
	public function getPassEvePhone()
	{
		return $this->pass_eve_phone;
	}

	/**
	 * Get the [pass_eve_comment] column value.
	 * 
	 * @return     string
	 */
	public function getPassEveComment()
	{
		return $this->pass_eve_comment;
	}

	/**
	 * Get the [pass_mobile_phone] column value.
	 * 
	 * @return     string
	 */
	public function getPassMobilePhone()
	{
		return $this->pass_mobile_phone;
	}

	/**
	 * Get the [pass_mobile_comment] column value.
	 * 
	 * @return     string
	 */
	public function getPassMobileComment()
	{
		return $this->pass_mobile_comment;
	}

	/**
	 * Get the [pass_pager_phone] column value.
	 * 
	 * @return     string
	 */
	public function getPassPagerPhone()
	{
		return $this->pass_pager_phone;
	}

	/**
	 * Get the [pass_pager_comment] column value.
	 * 
	 * @return     string
	 */
	public function getPassPagerComment()
	{
		return $this->pass_pager_comment;
	}

	/**
	 * Get the [pass_other_phone] column value.
	 * 
	 * @return     string
	 */
	public function getPassOtherPhone()
	{
		return $this->pass_other_phone;
	}

	/**
	 * Get the [pass_other_comment] column value.
	 * 
	 * @return     string
	 */
	public function getPassOtherComment()
	{
		return $this->pass_other_comment;
	}

	/**
	 * Get the [pass_email] column value.
	 * 
	 * @return     string
	 */
	public function getPassEmail()
	{
		return $this->pass_email;
	}

	/**
	 * Get the [optionally formatted] temporal [pass_date_of_birth] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getPassDateOfBirth($format = 'Y-m-d H:i:s')
	{
		if ($this->pass_date_of_birth === null) {
			return null;
		}


		if ($this->pass_date_of_birth === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->pass_date_of_birth);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->pass_date_of_birth, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [illness] column value.
	 * 
	 * @return     string
	 */
	public function getIllness()
	{
		return $this->illness;
	}

	/**
	 * Get the [financial] column value.
	 * 
	 * @return     string
	 */
	public function getFinancial()
	{
		return $this->financial;
	}

	/**
	 * Get the [pass_weight] column value.
	 * 
	 * @return     int
	 */
	public function getPassWeight()
	{
		return $this->pass_weight;
	}

	/**
	 * Get the [releasing_physician] column value.
	 * 
	 * @return     string
	 */
	public function getReleasingPhysician()
	{
		return $this->releasing_physician;
	}

	/**
	 * Get the [release_phone] column value.
	 * 
	 * @return     string
	 */
	public function getReleasePhone()
	{
		return $this->release_phone;
	}

	/**
	 * Get the [release_phone_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReleasePhoneComment()
	{
		return $this->release_phone_comment;
	}

	/**
	 * Get the [release_fax] column value.
	 * 
	 * @return     string
	 */
	public function getReleaseFax()
	{
		return $this->release_fax;
	}

	/**
	 * Get the [release_fax_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReleaseFaxComment()
	{
		return $this->release_fax_comment;
	}

	/**
	 * Get the [release_email] column value.
	 * 
	 * @return     string
	 */
	public function getReleaseEmail()
	{
		return $this->release_email;
	}

	/**
	 * Get the [treating_physician] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingPhysician()
	{
		return $this->treating_physician;
	}

	/**
	 * Get the [treating_phone] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingPhone()
	{
		return $this->treating_phone;
	}

	/**
	 * Get the [treating_phone_comment] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingPhoneComment()
	{
		return $this->treating_phone_comment;
	}

	/**
	 * Get the [treating_fax] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingFax()
	{
		return $this->treating_fax;
	}

	/**
	 * Get the [treating_fax_comment] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingFaxComment()
	{
		return $this->treating_fax_comment;
	}

	/**
	 * Get the [req_title] column value.
	 * 
	 * @return     string
	 */
	public function getReqTitle()
	{
		return $this->req_title;
	}

	/**
	 * Get the [req_first_name] column value.
	 * 
	 * @return     string
	 */
	public function getReqFirstName()
	{
		return $this->req_first_name;
	}

	/**
	 * Get the [req_last_name] column value.
	 * 
	 * @return     string
	 */
	public function getReqLastName()
	{
		return $this->req_last_name;
	}

	/**
	 * Get the [agency_name] column value.
	 * 
	 * @return     string
	 */
	public function getAgencyName()
	{
		return $this->agency_name;
	}

	/**
	 * Get the [req_address1] column value.
	 * 
	 * @return     string
	 */
	public function getReqAddress1()
	{
		return $this->req_address1;
	}

	/**
	 * Get the [req_address2] column value.
	 * 
	 * @return     string
	 */
	public function getReqAddress2()
	{
		return $this->req_address2;
	}

	/**
	 * Get the [req_city] column value.
	 * 
	 * @return     string
	 */
	public function getReqCity()
	{
		return $this->req_city;
	}

	/**
	 * Get the [req_county] column value.
	 * 
	 * @return     string
	 */
	public function getReqCounty()
	{
		return $this->req_county;
	}

	/**
	 * Get the [req_state] column value.
	 * 
	 * @return     string
	 */
	public function getReqState()
	{
		return $this->req_state;
	}

	/**
	 * Get the [req_country] column value.
	 * 
	 * @return     string
	 */
	public function getReqCountry()
	{
		return $this->req_country;
	}

	/**
	 * Get the [req_zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getReqZipcode()
	{
		return $this->req_zipcode;
	}

	/**
	 * Get the [req_day_phone] column value.
	 * 
	 * @return     string
	 */
	public function getReqDayPhone()
	{
		return $this->req_day_phone;
	}

	/**
	 * Get the [req_day_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReqDayComment()
	{
		return $this->req_day_comment;
	}

	/**
	 * Get the [req_eve_phone] column value.
	 * 
	 * @return     string
	 */
	public function getReqEvePhone()
	{
		return $this->req_eve_phone;
	}

	/**
	 * Get the [req_eve_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReqEveComment()
	{
		return $this->req_eve_comment;
	}

	/**
	 * Get the [req_mobile_phone] column value.
	 * 
	 * @return     string
	 */
	public function getReqMobilePhone()
	{
		return $this->req_mobile_phone;
	}

	/**
	 * Get the [req_mobile_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReqMobileComment()
	{
		return $this->req_mobile_comment;
	}

	/**
	 * Get the [req_pager_phone] column value.
	 * 
	 * @return     string
	 */
	public function getReqPagerPhone()
	{
		return $this->req_pager_phone;
	}

	/**
	 * Get the [req_pager_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReqPagerComment()
	{
		return $this->req_pager_comment;
	}

	/**
	 * Get the [req_other_phone] column value.
	 * 
	 * @return     string
	 */
	public function getReqOtherPhone()
	{
		return $this->req_other_phone;
	}

	/**
	 * Get the [req_other_comment] column value.
	 * 
	 * @return     string
	 */
	public function getReqOtherComment()
	{
		return $this->req_other_comment;
	}

	/**
	 * Get the [req_email] column value.
	 * 
	 * @return     string
	 */
	public function getReqEmail()
	{
		return $this->req_email;
	}

	/**
	 * Get the [origin_ident] column value.
	 * 
	 * @return     string
	 */
	public function getOriginIdent()
	{
		return $this->origin_ident;
	}

	/**
	 * Get the [origin_id] column value.
	 * 
	 * @return     int
	 */
	public function getOriginId()
	{
		return $this->origin_id;
	}

	/**
	 * Get the [origin_city] column value.
	 * 
	 * @return     string
	 */
	public function getOriginCity()
	{
		return $this->origin_city;
	}

	/**
	 * Get the [origin_state] column value.
	 * 
	 * @return     string
	 */
	public function getOriginState()
	{
		return $this->origin_state;
	}

	/**
	 * Get the [origin_zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getOriginZipcode()
	{
		return $this->origin_zipcode;
	}

	/**
	 * Get the [dest_ident] column value.
	 * 
	 * @return     string
	 */
	public function getDestIdent()
	{
		return $this->dest_ident;
	}

	/**
	 * Get the [dest_id] column value.
	 * 
	 * @return     int
	 */
	public function getDestId()
	{
		return $this->dest_id;
	}

	/**
	 * Get the [dest_city] column value.
	 * 
	 * @return     string
	 */
	public function getDestCity()
	{
		return $this->dest_city;
	}

	/**
	 * Get the [dest_state] column value.
	 * 
	 * @return     string
	 */
	public function getDestState()
	{
		return $this->dest_state;
	}

	/**
	 * Get the [dest_zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getDestZipcode()
	{
		return $this->dest_zipcode;
	}

	/**
	 * Get the [com1_name] column value.
	 * 
	 * @return     string
	 */
	public function getCom1Name()
	{
		return $this->com1_name;
	}

	/**
	 * Get the [com1_relationship] column value.
	 * 
	 * @return     string
	 */
	public function getCom1Relationship()
	{
		return $this->com1_relationship;
	}

	/**
	 * Get the [optionally formatted] temporal [com1_date_of_birth] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getCom1DateOfBirth($format = 'Y-m-d H:i:s')
	{
		if ($this->com1_date_of_birth === null) {
			return null;
		}


		if ($this->com1_date_of_birth === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->com1_date_of_birth);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->com1_date_of_birth, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [com1_weight] column value.
	 * 
	 * @return     int
	 */
	public function getCom1Weight()
	{
		return $this->com1_weight;
	}

	/**
	 * Get the [com1_phone] column value.
	 * 
	 * @return     string
	 */
	public function getCom1Phone()
	{
		return $this->com1_phone;
	}

	/**
	 * Get the [com1_comment] column value.
	 * 
	 * @return     string
	 */
	public function getCom1Comment()
	{
		return $this->com1_comment;
	}

	/**
	 * Get the [com2_name] column value.
	 * 
	 * @return     string
	 */
	public function getCom2Name()
	{
		return $this->com2_name;
	}

	/**
	 * Get the [com2_relationship] column value.
	 * 
	 * @return     string
	 */
	public function getCom2Relationship()
	{
		return $this->com2_relationship;
	}

	/**
	 * Get the [optionally formatted] temporal [com2_date_of_birth] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getCom2DateOfBirth($format = 'Y-m-d H:i:s')
	{
		if ($this->com2_date_of_birth === null) {
			return null;
		}


		if ($this->com2_date_of_birth === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->com2_date_of_birth);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->com2_date_of_birth, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [com2_weight] column value.
	 * 
	 * @return     int
	 */
	public function getCom2Weight()
	{
		return $this->com2_weight;
	}

	/**
	 * Get the [com2_phone] column value.
	 * 
	 * @return     string
	 */
	public function getCom2Phone()
	{
		return $this->com2_phone;
	}

	/**
	 * Get the [com2_comment] column value.
	 * 
	 * @return     string
	 */
	public function getCom2Comment()
	{
		return $this->com2_comment;
	}

	/**
	 * Get the [com3_name] column value.
	 * 
	 * @return     string
	 */
	public function getCom3Name()
	{
		return $this->com3_name;
	}

	/**
	 * Get the [com3_relationship] column value.
	 * 
	 * @return     string
	 */
	public function getCom3Relationship()
	{
		return $this->com3_relationship;
	}

	/**
	 * Get the [optionally formatted] temporal [com3_date_of_birth] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getCom3DateOfBirth($format = 'Y-m-d H:i:s')
	{
		if ($this->com3_date_of_birth === null) {
			return null;
		}


		if ($this->com3_date_of_birth === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->com3_date_of_birth);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->com3_date_of_birth, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [com3_weight] column value.
	 * 
	 * @return     int
	 */
	public function getCom3Weight()
	{
		return $this->com3_weight;
	}

	/**
	 * Get the [com3_phone] column value.
	 * 
	 * @return     string
	 */
	public function getCom3Phone()
	{
		return $this->com3_phone;
	}

	/**
	 * Get the [com3_comment] column value.
	 * 
	 * @return     string
	 */
	public function getCom3Comment()
	{
		return $this->com3_comment;
	}

	/**
	 * Get the [com4_name] column value.
	 * 
	 * @return     string
	 */
	public function getCom4Name()
	{
		return $this->com4_name;
	}

	/**
	 * Get the [com4_relationship] column value.
	 * 
	 * @return     string
	 */
	public function getCom4Relationship()
	{
		return $this->com4_relationship;
	}

	/**
	 * Get the [optionally formatted] temporal [com4_date_of_birth] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getCom4DateOfBirth($format = 'Y-m-d H:i:s')
	{
		if ($this->com4_date_of_birth === null) {
			return null;
		}


		if ($this->com4_date_of_birth === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->com4_date_of_birth);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->com4_date_of_birth, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [com4_weight] column value.
	 * 
	 * @return     int
	 */
	public function getCom4Weight()
	{
		return $this->com4_weight;
	}

	/**
	 * Get the [com4_phone] column value.
	 * 
	 * @return     string
	 */
	public function getCom4Phone()
	{
		return $this->com4_phone;
	}

	/**
	 * Get the [com4_comment] column value.
	 * 
	 * @return     string
	 */
	public function getCom4Comment()
	{
		return $this->com4_comment;
	}

	/**
	 * Get the [lodging_name] column value.
	 * 
	 * @return     string
	 */
	public function getLodgingName()
	{
		return $this->lodging_name;
	}

	/**
	 * Get the [lodging_phone] column value.
	 * 
	 * @return     string
	 */
	public function getLodgingPhone()
	{
		return $this->lodging_phone;
	}

	/**
	 * Get the [facility_name] column value.
	 * 
	 * @return     string
	 */
	public function getFacilityName()
	{
		return $this->facility_name;
	}

	/**
	 * Get the [facility_phone] column value.
	 * 
	 * @return     string
	 */
	public function getFacilityPhone()
	{
		return $this->facility_phone;
	}

	/**
	 * Get the [facility_phone_comment] column value.
	 * 
	 * @return     string
	 */
	public function getFacilityPhoneComment()
	{
		return $this->facility_phone_comment;
	}

	/**
	 * Get the [req_language_spoken] column value.
	 * 
	 * @return     string
	 */
	public function getReqLanguageSpoken()
	{
		return $this->req_language_spoken;
	}

	/**
	 * Get the [best_contact] column value.
	 * 
	 * @return     string
	 */
	public function getBestContact()
	{
		return $this->best_contact;
	}

	/**
	 * Get the [emergency_name] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyName()
	{
		return $this->emergency_name;
	}

	/**
	 * Get the [emergency_phone1] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyPhone1()
	{
		return $this->emergency_phone1;
	}

	/**
	 * Get the [emergency_phone2] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyPhone2()
	{
		return $this->emergency_phone2;
	}

	/**
	 * Get the [emergency_phone1_comment] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyPhone1Comment()
	{
		return $this->emergency_phone1_comment;
	}

	/**
	 * Get the [emergency_phone2_comment] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyPhone2Comment()
	{
		return $this->emergency_phone2_comment;
	}

	/**
	 * Get the [comment] column value.
	 * 
	 * @return     string
	 */
	public function getComment()
	{
		return $this->comment;
	}

	/**
	 * Get the [optionally formatted] temporal [processed_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getProcessedDate($format = 'Y-m-d H:i:s')
	{
		if ($this->processed_date === null) {
			return null;
		}


		if ($this->processed_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->processed_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->processed_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [session_id] column value.
	 * 
	 * @return     int
	 */
	public function getSessionId()
	{
		return $this->session_id;
	}

	/**
	 * Get the [ip_address] column value.
	 * 
	 * @return     string
	 */
	public function getIpAddress()
	{
		return $this->ip_address;
	}

	/**
	 * Get the [pass_fax_phone1] column value.
	 * 
	 * @return     string
	 */
	public function getPassFaxPhone1()
	{
		return $this->pass_fax_phone1;
	}

	/**
	 * Get the [pass_fax_comment1] column value.
	 * 
	 * @return     string
	 */
	public function getPassFaxComment1()
	{
		return $this->pass_fax_comment1;
	}

	/**
	 * Get the [guar_first_name] column value.
	 * 
	 * @return     string
	 */
	public function getGuarFirstName()
	{
		return $this->guar_first_name;
	}

	/**
	 * Get the [guar_last_name] column value.
	 * 
	 * @return     string
	 */
	public function getGuarLastName()
	{
		return $this->guar_last_name;
	}

	/**
	 * Get the [guar_address1] column value.
	 * 
	 * @return     string
	 */
	public function getGuarAddress1()
	{
		return $this->guar_address1;
	}

	/**
	 * Get the [guar_address2] column value.
	 * 
	 * @return     string
	 */
	public function getGuarAddress2()
	{
		return $this->guar_address2;
	}

	/**
	 * Get the [guar_city] column value.
	 * 
	 * @return     string
	 */
	public function getGuarCity()
	{
		return $this->guar_city;
	}

	/**
	 * Get the [guar_state] column value.
	 * 
	 * @return     string
	 */
	public function getGuarState()
	{
		return $this->guar_state;
	}

	/**
	 * Get the [guar_zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getGuarZipcode()
	{
		return $this->guar_zipcode;
	}

	/**
	 * Get the [guar_day_phone] column value.
	 * 
	 * @return     string
	 */
	public function getGuarDayPhone()
	{
		return $this->guar_day_phone;
	}

	/**
	 * Get the [guar_day_comment] column value.
	 * 
	 * @return     string
	 */
	public function getGuarDayComment()
	{
		return $this->guar_day_comment;
	}

	/**
	 * Get the [guar_eve_phone] column value.
	 * 
	 * @return     string
	 */
	public function getGuarEvePhone()
	{
		return $this->guar_eve_phone;
	}

	/**
	 * Get the [guar_eve_comment] column value.
	 * 
	 * @return     string
	 */
	public function getGuarEveComment()
	{
		return $this->guar_eve_comment;
	}

	/**
	 * Get the [guar_fax_phone1] column value.
	 * 
	 * @return     string
	 */
	public function getGuarFaxPhone1()
	{
		return $this->guar_fax_phone1;
	}

	/**
	 * Get the [guar_fax_comment1] column value.
	 * 
	 * @return     string
	 */
	public function getGuarFaxComment1()
	{
		return $this->guar_fax_comment1;
	}

	/**
	 * Get the [guar_mobile_phone] column value.
	 * 
	 * @return     string
	 */
	public function getGuarMobilePhone()
	{
		return $this->guar_mobile_phone;
	}

	/**
	 * Get the [guar_mobile_comment] column value.
	 * 
	 * @return     string
	 */
	public function getGuarMobileComment()
	{
		return $this->guar_mobile_comment;
	}

	/**
	 * Get the [guar_pager_phone] column value.
	 * 
	 * @return     string
	 */
	public function getGuarPagerPhone()
	{
		return $this->guar_pager_phone;
	}

	/**
	 * Get the [guar_pager_comment] column value.
	 * 
	 * @return     string
	 */
	public function getGuarPagerComment()
	{
		return $this->guar_pager_comment;
	}

	/**
	 * Get the [guar_other_phone] column value.
	 * 
	 * @return     string
	 */
	public function getGuarOtherPhone()
	{
		return $this->guar_other_phone;
	}

	/**
	 * Get the [guar_other_comment] column value.
	 * 
	 * @return     string
	 */
	public function getGuarOtherComment()
	{
		return $this->guar_other_comment;
	}

	/**
	 * Get the [guar_guar_email] column value.
	 * 
	 * @return     string
	 */
	public function getGuarGuarEmail()
	{
		return $this->guar_guar_email;
	}

	/**
	 * Get the [req_fax_phone1] column value.
	 * 
	 * @return     string
	 */
	public function getReqFaxPhone1()
	{
		return $this->req_fax_phone1;
	}

	/**
	 * Get the [req_fax_comment1] column value.
	 * 
	 * @return     string
	 */
	public function getReqFaxComment1()
	{
		return $this->req_fax_comment1;
	}

	/**
	 * Get the [pass_english] column value.
	 * 
	 * @return     int
	 */
	public function getPassEnglish()
	{
		return $this->pass_english;
	}

	/**
	 * Get the [pass_language] column value.
	 * 
	 * @return     string
	 */
	public function getPassLanguage()
	{
		return $this->pass_language;
	}

	/**
	 * Get the [appt_time] column value.
	 * 
	 * @return     string
	 */
	public function getApptTime()
	{
		return $this->appt_time;
	}

	/**
	 * Get the [requester_id] column value.
	 * 
	 * @return     int
	 */
	public function getRequesterId()
	{
		return $this->requester_id;
	}

	/**
	 * Get the [passenger_id] column value.
	 * 
	 * @return     int
	 */
	public function getPassengerId()
	{
		return $this->passenger_id;
	}

	/**
	 * Get the [mission_id] column value.
	 * 
	 * @return     int
	 */
	public function getMissionId()
	{
		return $this->mission_id;
	}

	/**
	 * Get the [treating_email] column value.
	 * 
	 * @return     string
	 */
	public function getTreatingEmail()
	{
		return $this->treating_email;
	}

	/**
	 * Get the [pass_height] column value.
	 * 
	 * @return     int
	 */
	public function getPassHeight()
	{
		return $this->pass_height;
	}

	/**
	 * Get the [return_time] column value.
	 * 
	 * @return     string
	 */
	public function getReturnTime()
	{
		return $this->return_time;
	}

	/**
	 * Get the [pass_oxygen] column value.
	 * 
	 * @return     int
	 */
	public function getPassOxygen()
	{
		return $this->pass_oxygen;
	}

	/**
	 * Get the [pass_medical] column value.
	 * 
	 * @return     int
	 */
	public function getPassMedical()
	{
		return $this->pass_medical;
	}

	/**
	 * Get the [referral_source_id] column value.
	 * 
	 * @return     int
	 */
	public function getReferralSourceId()
	{
		return $this->referral_source_id;
	}

	/**
	 * Get the [follow_up_contact_name] column value.
	 * 
	 * @return     string
	 */
	public function getFollowUpContactName()
	{
		return $this->follow_up_contact_name;
	}

	/**
	 * Get the [follow_up_contact_phone] column value.
	 * 
	 * @return     string
	 */
	public function getFollowUpContactPhone()
	{
		return $this->follow_up_contact_phone;
	}

	/**
	 * Get the [follow_up_email] column value.
	 * 
	 * @return     string
	 */
	public function getFollowUpEmail()
	{
		return $this->follow_up_email;
	}

	/**
	 * Get the [miss_req_originator_afa_org_id] column value.
	 * 
	 * @return     int
	 */
	public function getMissReqOriginatorAfaOrgId()
	{
		return $this->miss_req_originator_afa_org_id;
	}

	/**
	 * Get the [afa_org_id] column value.
	 * 
	 * @return     int
	 */
	public function getAfaOrgId()
	{
		return $this->afa_org_id;
	}

	/**
	 * Get the [afa_org_mission_id] column value.
	 * 
	 * @return     int
	 */
	public function getAfaOrgMissionId()
	{
		return $this->afa_org_mission_id;
	}

	/**
	 * Get the [mission_request_type] column value.
	 * 
	 * @return     int
	 */
	public function getMissionRequestType()
	{
		return $this->mission_request_type;
	}

	/**
	 * Get the [last_page_processed] column value.
	 * 
	 * @return     int
	 */
	public function getLastPageProcessed()
	{
		return $this->last_page_processed;
	}

	/**
	 * Get the [guardian_middle_name] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianMiddleName()
	{
		return $this->guardian_middle_name;
	}

	/**
	 * Get the [guardian_nickname] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianNickname()
	{
		return $this->guardian_nickname;
	}

	/**
	 * Get the [guardian_pager_email] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianPagerEmail()
	{
		return $this->guardian_pager_email;
	}

	/**
	 * Get the [guardian_secondary_email] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianSecondaryEmail()
	{
		return $this->guardian_secondary_email;
	}

	/**
	 * Get the [guardian_suffix] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianSuffix()
	{
		return $this->guardian_suffix;
	}

	/**
	 * Get the [guardian_title] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianTitle()
	{
		return $this->guardian_title;
	}

	/**
	 * Get the [guardian_veteran] column value.
	 * 
	 * @return     int
	 */
	public function getGuardianVeteran()
	{
		return $this->guardian_veteran;
	}

	/**
	 * Get the [pass_gender] column value.
	 * 
	 * @return     string
	 */
	public function getPassGender()
	{
		return $this->pass_gender;
	}

	/**
	 * Get the [pass_middle_name] column value.
	 * 
	 * @return     string
	 */
	public function getPassMiddleName()
	{
		return $this->pass_middle_name;
	}

	/**
	 * Get the [pass_nickname] column value.
	 * 
	 * @return     string
	 */
	public function getPassNickname()
	{
		return $this->pass_nickname;
	}

	/**
	 * Get the [pass_pager_email] column value.
	 * 
	 * @return     string
	 */
	public function getPassPagerEmail()
	{
		return $this->pass_pager_email;
	}

	/**
	 * Get the [pass_secondary_email] column value.
	 * 
	 * @return     string
	 */
	public function getPassSecondaryEmail()
	{
		return $this->pass_secondary_email;
	}

	/**
	 * Get the [pass_suffix] column value.
	 * 
	 * @return     string
	 */
	public function getPassSuffix()
	{
		return $this->pass_suffix;
	}

	/**
	 * Get the [pass_veteran] column value.
	 * 
	 * @return     int
	 */
	public function getPassVeteran()
	{
		return $this->pass_veteran;
	}

	/**
	 * Get the [req_middle_name] column value.
	 * 
	 * @return     string
	 */
	public function getReqMiddleName()
	{
		return $this->req_middle_name;
	}

	/**
	 * Get the [req_nickname] column value.
	 * 
	 * @return     string
	 */
	public function getReqNickname()
	{
		return $this->req_nickname;
	}

	/**
	 * Get the [req_pager_email] column value.
	 * 
	 * @return     string
	 */
	public function getReqPagerEmail()
	{
		return $this->req_pager_email;
	}

	/**
	 * Get the [req_secondary_email] column value.
	 * 
	 * @return     string
	 */
	public function getReqSecondaryEmail()
	{
		return $this->req_secondary_email;
	}

	/**
	 * Get the [req_suffix] column value.
	 * 
	 * @return     string
	 */
	public function getReqSuffix()
	{
		return $this->req_suffix;
	}

	/**
	 * Get the [req_veteran] column value.
	 * 
	 * @return     int
	 */
	public function getReqVeteran()
	{
		return $this->req_veteran;
	}

	/**
	 * Get the [lodging_phone_comment] column value.
	 * 
	 * @return     string
	 */
	public function getLodgingPhoneComment()
	{
		return $this->lodging_phone_comment;
	}

	/**
	 * Get the [req_gender] column value.
	 * 
	 * @return     string
	 */
	public function getReqGender()
	{
		return $this->req_gender;
	}

	/**
	 * Get the [guardian_gender] column value.
	 * 
	 * @return     string
	 */
	public function getGuardianGender()
	{
		return $this->guardian_gender;
	}

	/**
	 * Get the [agency_position] column value.
	 * 
	 * @return     string
	 */
	public function getAgencyPosition()
	{
		return $this->agency_position;
	}

	/**
	 * Set the value of [id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id !== $v) {
			$this->id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ID;
		}

		return $this;
	} // setId()

	/**
	 * Sets the value of [request_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setRequestDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->request_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->request_date !== null && $tmpDt = new DateTime($this->request_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->request_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::REQUEST_DATE;
			}
		} // if either are not null

		return $this;
	} // setRequestDate()

	/**
	 * Set the value of [request_by] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setRequestBy($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->request_by !== $v) {
			$this->request_by = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQUEST_BY;
		}

		return $this;
	} // setRequestBy()

	/**
	 * Set the value of [request_on_behalf] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setRequestOnBehalf($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->request_on_behalf !== $v) {
			$this->request_on_behalf = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQUEST_ON_BEHALF;
		}

		return $this;
	} // setRequestOnBehalf()

	/**
	 * Sets the value of [appt_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setApptDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->appt_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->appt_date !== null && $tmpDt = new DateTime($this->appt_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->appt_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::APPT_DATE;
			}
		} // if either are not null

		return $this;
	} // setApptDate()

	/**
	 * Sets the value of [return_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReturnDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->return_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->return_date !== null && $tmpDt = new DateTime($this->return_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->return_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::RETURN_DATE;
			}
		} // if either are not null

		return $this;
	} // setReturnDate()

	/**
	 * Set the value of [baggage_weight] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setBaggageWeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->baggage_weight !== $v) {
			$this->baggage_weight = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::BAGGAGE_WEIGHT;
		}

		return $this;
	} // setBaggageWeight()

	/**
	 * Set the value of [baggage_desc] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setBaggageDesc($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->baggage_desc !== $v) {
			$this->baggage_desc = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::BAGGAGE_DESC;
		}

		return $this;
	} // setBaggageDesc()

	/**
	 * Set the value of [pass_title] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassTitle($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_title !== $v) {
			$this->pass_title = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_TITLE;
		}

		return $this;
	} // setPassTitle()

	/**
	 * Set the value of [pass_first_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassFirstName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_first_name !== $v) {
			$this->pass_first_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_FIRST_NAME;
		}

		return $this;
	} // setPassFirstName()

	/**
	 * Set the value of [pass_last_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassLastName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_last_name !== $v) {
			$this->pass_last_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_LAST_NAME;
		}

		return $this;
	} // setPassLastName()

	/**
	 * Set the value of [pass_address1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassAddress1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_address1 !== $v) {
			$this->pass_address1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_ADDRESS1;
		}

		return $this;
	} // setPassAddress1()

	/**
	 * Set the value of [pass_address2] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassAddress2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_address2 !== $v) {
			$this->pass_address2 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_ADDRESS2;
		}

		return $this;
	} // setPassAddress2()

	/**
	 * Set the value of [pass_city] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_city !== $v) {
			$this->pass_city = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_CITY;
		}

		return $this;
	} // setPassCity()

	/**
	 * Set the value of [pass_county] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassCounty($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_county !== $v) {
			$this->pass_county = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_COUNTY;
		}

		return $this;
	} // setPassCounty()

	/**
	 * Set the value of [pass_state] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_state !== $v) {
			$this->pass_state = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_STATE;
		}

		return $this;
	} // setPassState()

	/**
	 * Set the value of [pass_country] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassCountry($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_country !== $v) {
			$this->pass_country = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_COUNTRY;
		}

		return $this;
	} // setPassCountry()

	/**
	 * Set the value of [pass_zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_zipcode !== $v) {
			$this->pass_zipcode = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_ZIPCODE;
		}

		return $this;
	} // setPassZipcode()

	/**
	 * Set the value of [pass_day_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassDayPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_day_phone !== $v) {
			$this->pass_day_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_DAY_PHONE;
		}

		return $this;
	} // setPassDayPhone()

	/**
	 * Set the value of [pass_day_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassDayComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_day_comment !== $v) {
			$this->pass_day_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_DAY_COMMENT;
		}

		return $this;
	} // setPassDayComment()

	/**
	 * Set the value of [pass_eve_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassEvePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_eve_phone !== $v) {
			$this->pass_eve_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_EVE_PHONE;
		}

		return $this;
	} // setPassEvePhone()

	/**
	 * Set the value of [pass_eve_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassEveComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_eve_comment !== $v) {
			$this->pass_eve_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_EVE_COMMENT;
		}

		return $this;
	} // setPassEveComment()

	/**
	 * Set the value of [pass_mobile_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassMobilePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_mobile_phone !== $v) {
			$this->pass_mobile_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_MOBILE_PHONE;
		}

		return $this;
	} // setPassMobilePhone()

	/**
	 * Set the value of [pass_mobile_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassMobileComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_mobile_comment !== $v) {
			$this->pass_mobile_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_MOBILE_COMMENT;
		}

		return $this;
	} // setPassMobileComment()

	/**
	 * Set the value of [pass_pager_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassPagerPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_pager_phone !== $v) {
			$this->pass_pager_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_PAGER_PHONE;
		}

		return $this;
	} // setPassPagerPhone()

	/**
	 * Set the value of [pass_pager_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassPagerComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_pager_comment !== $v) {
			$this->pass_pager_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_PAGER_COMMENT;
		}

		return $this;
	} // setPassPagerComment()

	/**
	 * Set the value of [pass_other_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassOtherPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_other_phone !== $v) {
			$this->pass_other_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_OTHER_PHONE;
		}

		return $this;
	} // setPassOtherPhone()

	/**
	 * Set the value of [pass_other_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassOtherComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_other_comment !== $v) {
			$this->pass_other_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_OTHER_COMMENT;
		}

		return $this;
	} // setPassOtherComment()

	/**
	 * Set the value of [pass_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_email !== $v) {
			$this->pass_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_EMAIL;
		}

		return $this;
	} // setPassEmail()

	/**
	 * Sets the value of [pass_date_of_birth] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassDateOfBirth($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->pass_date_of_birth !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->pass_date_of_birth !== null && $tmpDt = new DateTime($this->pass_date_of_birth)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->pass_date_of_birth = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::PASS_DATE_OF_BIRTH;
			}
		} // if either are not null

		return $this;
	} // setPassDateOfBirth()

	/**
	 * Set the value of [illness] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setIllness($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->illness !== $v) {
			$this->illness = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ILLNESS;
		}

		return $this;
	} // setIllness()

	/**
	 * Set the value of [financial] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFinancial($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->financial !== $v) {
			$this->financial = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FINANCIAL;
		}

		return $this;
	} // setFinancial()

	/**
	 * Set the value of [pass_weight] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassWeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pass_weight !== $v) {
			$this->pass_weight = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_WEIGHT;
		}

		return $this;
	} // setPassWeight()

	/**
	 * Set the value of [releasing_physician] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReleasingPhysician($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->releasing_physician !== $v) {
			$this->releasing_physician = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RELEASING_PHYSICIAN;
		}

		return $this;
	} // setReleasingPhysician()

	/**
	 * Set the value of [release_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReleasePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->release_phone !== $v) {
			$this->release_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RELEASE_PHONE;
		}

		return $this;
	} // setReleasePhone()

	/**
	 * Set the value of [release_phone_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReleasePhoneComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->release_phone_comment !== $v) {
			$this->release_phone_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RELEASE_PHONE_COMMENT;
		}

		return $this;
	} // setReleasePhoneComment()

	/**
	 * Set the value of [release_fax] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReleaseFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->release_fax !== $v) {
			$this->release_fax = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RELEASE_FAX;
		}

		return $this;
	} // setReleaseFax()

	/**
	 * Set the value of [release_fax_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReleaseFaxComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->release_fax_comment !== $v) {
			$this->release_fax_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RELEASE_FAX_COMMENT;
		}

		return $this;
	} // setReleaseFaxComment()

	/**
	 * Set the value of [release_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReleaseEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->release_email !== $v) {
			$this->release_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RELEASE_EMAIL;
		}

		return $this;
	} // setReleaseEmail()

	/**
	 * Set the value of [treating_physician] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setTreatingPhysician($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treating_physician !== $v) {
			$this->treating_physician = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::TREATING_PHYSICIAN;
		}

		return $this;
	} // setTreatingPhysician()

	/**
	 * Set the value of [treating_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setTreatingPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treating_phone !== $v) {
			$this->treating_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::TREATING_PHONE;
		}

		return $this;
	} // setTreatingPhone()

	/**
	 * Set the value of [treating_phone_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setTreatingPhoneComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treating_phone_comment !== $v) {
			$this->treating_phone_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::TREATING_PHONE_COMMENT;
		}

		return $this;
	} // setTreatingPhoneComment()

	/**
	 * Set the value of [treating_fax] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setTreatingFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treating_fax !== $v) {
			$this->treating_fax = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::TREATING_FAX;
		}

		return $this;
	} // setTreatingFax()

	/**
	 * Set the value of [treating_fax_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setTreatingFaxComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treating_fax_comment !== $v) {
			$this->treating_fax_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::TREATING_FAX_COMMENT;
		}

		return $this;
	} // setTreatingFaxComment()

	/**
	 * Set the value of [req_title] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqTitle($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_title !== $v) {
			$this->req_title = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_TITLE;
		}

		return $this;
	} // setReqTitle()

	/**
	 * Set the value of [req_first_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqFirstName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_first_name !== $v) {
			$this->req_first_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_FIRST_NAME;
		}

		return $this;
	} // setReqFirstName()

	/**
	 * Set the value of [req_last_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqLastName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_last_name !== $v) {
			$this->req_last_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_LAST_NAME;
		}

		return $this;
	} // setReqLastName()

	/**
	 * Set the value of [agency_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setAgencyName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->agency_name !== $v) {
			$this->agency_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::AGENCY_NAME;
		}

		return $this;
	} // setAgencyName()

	/**
	 * Set the value of [req_address1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqAddress1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_address1 !== $v) {
			$this->req_address1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_ADDRESS1;
		}

		return $this;
	} // setReqAddress1()

	/**
	 * Set the value of [req_address2] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqAddress2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_address2 !== $v) {
			$this->req_address2 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_ADDRESS2;
		}

		return $this;
	} // setReqAddress2()

	/**
	 * Set the value of [req_city] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_city !== $v) {
			$this->req_city = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_CITY;
		}

		return $this;
	} // setReqCity()

	/**
	 * Set the value of [req_county] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqCounty($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_county !== $v) {
			$this->req_county = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_COUNTY;
		}

		return $this;
	} // setReqCounty()

	/**
	 * Set the value of [req_state] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_state !== $v) {
			$this->req_state = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_STATE;
		}

		return $this;
	} // setReqState()

	/**
	 * Set the value of [req_country] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqCountry($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_country !== $v) {
			$this->req_country = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_COUNTRY;
		}

		return $this;
	} // setReqCountry()

	/**
	 * Set the value of [req_zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_zipcode !== $v) {
			$this->req_zipcode = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_ZIPCODE;
		}

		return $this;
	} // setReqZipcode()

	/**
	 * Set the value of [req_day_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqDayPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_day_phone !== $v) {
			$this->req_day_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_DAY_PHONE;
		}

		return $this;
	} // setReqDayPhone()

	/**
	 * Set the value of [req_day_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqDayComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_day_comment !== $v) {
			$this->req_day_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_DAY_COMMENT;
		}

		return $this;
	} // setReqDayComment()

	/**
	 * Set the value of [req_eve_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqEvePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_eve_phone !== $v) {
			$this->req_eve_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_EVE_PHONE;
		}

		return $this;
	} // setReqEvePhone()

	/**
	 * Set the value of [req_eve_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqEveComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_eve_comment !== $v) {
			$this->req_eve_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_EVE_COMMENT;
		}

		return $this;
	} // setReqEveComment()

	/**
	 * Set the value of [req_mobile_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqMobilePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_mobile_phone !== $v) {
			$this->req_mobile_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_MOBILE_PHONE;
		}

		return $this;
	} // setReqMobilePhone()

	/**
	 * Set the value of [req_mobile_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqMobileComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_mobile_comment !== $v) {
			$this->req_mobile_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_MOBILE_COMMENT;
		}

		return $this;
	} // setReqMobileComment()

	/**
	 * Set the value of [req_pager_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqPagerPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_pager_phone !== $v) {
			$this->req_pager_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_PAGER_PHONE;
		}

		return $this;
	} // setReqPagerPhone()

	/**
	 * Set the value of [req_pager_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqPagerComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_pager_comment !== $v) {
			$this->req_pager_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_PAGER_COMMENT;
		}

		return $this;
	} // setReqPagerComment()

	/**
	 * Set the value of [req_other_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqOtherPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_other_phone !== $v) {
			$this->req_other_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_OTHER_PHONE;
		}

		return $this;
	} // setReqOtherPhone()

	/**
	 * Set the value of [req_other_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqOtherComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_other_comment !== $v) {
			$this->req_other_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_OTHER_COMMENT;
		}

		return $this;
	} // setReqOtherComment()

	/**
	 * Set the value of [req_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_email !== $v) {
			$this->req_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_EMAIL;
		}

		return $this;
	} // setReqEmail()

	/**
	 * Set the value of [origin_ident] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setOriginIdent($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->origin_ident !== $v) {
			$this->origin_ident = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ORIGIN_IDENT;
		}

		return $this;
	} // setOriginIdent()

	/**
	 * Set the value of [origin_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setOriginId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->origin_id !== $v) {
			$this->origin_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ORIGIN_ID;
		}

		return $this;
	} // setOriginId()

	/**
	 * Set the value of [origin_city] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setOriginCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->origin_city !== $v) {
			$this->origin_city = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ORIGIN_CITY;
		}

		return $this;
	} // setOriginCity()

	/**
	 * Set the value of [origin_state] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setOriginState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->origin_state !== $v) {
			$this->origin_state = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ORIGIN_STATE;
		}

		return $this;
	} // setOriginState()

	/**
	 * Set the value of [origin_zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setOriginZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->origin_zipcode !== $v) {
			$this->origin_zipcode = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::ORIGIN_ZIPCODE;
		}

		return $this;
	} // setOriginZipcode()

	/**
	 * Set the value of [dest_ident] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setDestIdent($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dest_ident !== $v) {
			$this->dest_ident = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::DEST_IDENT;
		}

		return $this;
	} // setDestIdent()

	/**
	 * Set the value of [dest_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setDestId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dest_id !== $v) {
			$this->dest_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::DEST_ID;
		}

		return $this;
	} // setDestId()

	/**
	 * Set the value of [dest_city] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setDestCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dest_city !== $v) {
			$this->dest_city = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::DEST_CITY;
		}

		return $this;
	} // setDestCity()

	/**
	 * Set the value of [dest_state] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setDestState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dest_state !== $v) {
			$this->dest_state = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::DEST_STATE;
		}

		return $this;
	} // setDestState()

	/**
	 * Set the value of [dest_zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setDestZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dest_zipcode !== $v) {
			$this->dest_zipcode = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::DEST_ZIPCODE;
		}

		return $this;
	} // setDestZipcode()

	/**
	 * Set the value of [com1_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom1Name($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com1_name !== $v) {
			$this->com1_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM1_NAME;
		}

		return $this;
	} // setCom1Name()

	/**
	 * Set the value of [com1_relationship] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom1Relationship($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com1_relationship !== $v) {
			$this->com1_relationship = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM1_RELATIONSHIP;
		}

		return $this;
	} // setCom1Relationship()

	/**
	 * Sets the value of [com1_date_of_birth] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom1DateOfBirth($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->com1_date_of_birth !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->com1_date_of_birth !== null && $tmpDt = new DateTime($this->com1_date_of_birth)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->com1_date_of_birth = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::COM1_DATE_OF_BIRTH;
			}
		} // if either are not null

		return $this;
	} // setCom1DateOfBirth()

	/**
	 * Set the value of [com1_weight] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom1Weight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->com1_weight !== $v) {
			$this->com1_weight = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM1_WEIGHT;
		}

		return $this;
	} // setCom1Weight()

	/**
	 * Set the value of [com1_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom1Phone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com1_phone !== $v) {
			$this->com1_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM1_PHONE;
		}

		return $this;
	} // setCom1Phone()

	/**
	 * Set the value of [com1_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom1Comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com1_comment !== $v) {
			$this->com1_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM1_COMMENT;
		}

		return $this;
	} // setCom1Comment()

	/**
	 * Set the value of [com2_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom2Name($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com2_name !== $v) {
			$this->com2_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM2_NAME;
		}

		return $this;
	} // setCom2Name()

	/**
	 * Set the value of [com2_relationship] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom2Relationship($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com2_relationship !== $v) {
			$this->com2_relationship = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM2_RELATIONSHIP;
		}

		return $this;
	} // setCom2Relationship()

	/**
	 * Sets the value of [com2_date_of_birth] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom2DateOfBirth($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->com2_date_of_birth !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->com2_date_of_birth !== null && $tmpDt = new DateTime($this->com2_date_of_birth)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->com2_date_of_birth = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::COM2_DATE_OF_BIRTH;
			}
		} // if either are not null

		return $this;
	} // setCom2DateOfBirth()

	/**
	 * Set the value of [com2_weight] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom2Weight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->com2_weight !== $v) {
			$this->com2_weight = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM2_WEIGHT;
		}

		return $this;
	} // setCom2Weight()

	/**
	 * Set the value of [com2_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom2Phone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com2_phone !== $v) {
			$this->com2_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM2_PHONE;
		}

		return $this;
	} // setCom2Phone()

	/**
	 * Set the value of [com2_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom2Comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com2_comment !== $v) {
			$this->com2_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM2_COMMENT;
		}

		return $this;
	} // setCom2Comment()

	/**
	 * Set the value of [com3_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom3Name($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com3_name !== $v) {
			$this->com3_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM3_NAME;
		}

		return $this;
	} // setCom3Name()

	/**
	 * Set the value of [com3_relationship] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom3Relationship($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com3_relationship !== $v) {
			$this->com3_relationship = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM3_RELATIONSHIP;
		}

		return $this;
	} // setCom3Relationship()

	/**
	 * Sets the value of [com3_date_of_birth] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom3DateOfBirth($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->com3_date_of_birth !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->com3_date_of_birth !== null && $tmpDt = new DateTime($this->com3_date_of_birth)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->com3_date_of_birth = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::COM3_DATE_OF_BIRTH;
			}
		} // if either are not null

		return $this;
	} // setCom3DateOfBirth()

	/**
	 * Set the value of [com3_weight] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom3Weight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->com3_weight !== $v) {
			$this->com3_weight = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM3_WEIGHT;
		}

		return $this;
	} // setCom3Weight()

	/**
	 * Set the value of [com3_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom3Phone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com3_phone !== $v) {
			$this->com3_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM3_PHONE;
		}

		return $this;
	} // setCom3Phone()

	/**
	 * Set the value of [com3_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom3Comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com3_comment !== $v) {
			$this->com3_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM3_COMMENT;
		}

		return $this;
	} // setCom3Comment()

	/**
	 * Set the value of [com4_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom4Name($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com4_name !== $v) {
			$this->com4_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM4_NAME;
		}

		return $this;
	} // setCom4Name()

	/**
	 * Set the value of [com4_relationship] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom4Relationship($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com4_relationship !== $v) {
			$this->com4_relationship = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM4_RELATIONSHIP;
		}

		return $this;
	} // setCom4Relationship()

	/**
	 * Sets the value of [com4_date_of_birth] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom4DateOfBirth($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->com4_date_of_birth !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->com4_date_of_birth !== null && $tmpDt = new DateTime($this->com4_date_of_birth)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->com4_date_of_birth = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::COM4_DATE_OF_BIRTH;
			}
		} // if either are not null

		return $this;
	} // setCom4DateOfBirth()

	/**
	 * Set the value of [com4_weight] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom4Weight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->com4_weight !== $v) {
			$this->com4_weight = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM4_WEIGHT;
		}

		return $this;
	} // setCom4Weight()

	/**
	 * Set the value of [com4_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom4Phone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com4_phone !== $v) {
			$this->com4_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM4_PHONE;
		}

		return $this;
	} // setCom4Phone()

	/**
	 * Set the value of [com4_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setCom4Comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->com4_comment !== $v) {
			$this->com4_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COM4_COMMENT;
		}

		return $this;
	} // setCom4Comment()

	/**
	 * Set the value of [lodging_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setLodgingName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lodging_name !== $v) {
			$this->lodging_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::LODGING_NAME;
		}

		return $this;
	} // setLodgingName()

	/**
	 * Set the value of [lodging_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setLodgingPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lodging_phone !== $v) {
			$this->lodging_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::LODGING_PHONE;
		}

		return $this;
	} // setLodgingPhone()

	/**
	 * Set the value of [facility_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFacilityName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->facility_name !== $v) {
			$this->facility_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FACILITY_NAME;
		}

		return $this;
	} // setFacilityName()

	/**
	 * Set the value of [facility_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFacilityPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->facility_phone !== $v) {
			$this->facility_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FACILITY_PHONE;
		}

		return $this;
	} // setFacilityPhone()

	/**
	 * Set the value of [facility_phone_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFacilityPhoneComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->facility_phone_comment !== $v) {
			$this->facility_phone_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FACILITY_PHONE_COMMENT;
		}

		return $this;
	} // setFacilityPhoneComment()

	/**
	 * Set the value of [req_language_spoken] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqLanguageSpoken($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_language_spoken !== $v) {
			$this->req_language_spoken = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_LANGUAGE_SPOKEN;
		}

		return $this;
	} // setReqLanguageSpoken()

	/**
	 * Set the value of [best_contact] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setBestContact($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->best_contact !== $v) {
			$this->best_contact = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::BEST_CONTACT;
		}

		return $this;
	} // setBestContact()

	/**
	 * Set the value of [emergency_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setEmergencyName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_name !== $v) {
			$this->emergency_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::EMERGENCY_NAME;
		}

		return $this;
	} // setEmergencyName()

	/**
	 * Set the value of [emergency_phone1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setEmergencyPhone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_phone1 !== $v) {
			$this->emergency_phone1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::EMERGENCY_PHONE1;
		}

		return $this;
	} // setEmergencyPhone1()

	/**
	 * Set the value of [emergency_phone2] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setEmergencyPhone2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_phone2 !== $v) {
			$this->emergency_phone2 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::EMERGENCY_PHONE2;
		}

		return $this;
	} // setEmergencyPhone2()

	/**
	 * Set the value of [emergency_phone1_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setEmergencyPhone1Comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_phone1_comment !== $v) {
			$this->emergency_phone1_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::EMERGENCY_PHONE1_COMMENT;
		}

		return $this;
	} // setEmergencyPhone1Comment()

	/**
	 * Set the value of [emergency_phone2_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setEmergencyPhone2Comment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_phone2_comment !== $v) {
			$this->emergency_phone2_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::EMERGENCY_PHONE2_COMMENT;
		}

		return $this;
	} // setEmergencyPhone2Comment()

	/**
	 * Set the value of [comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->comment !== $v) {
			$this->comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::COMMENT;
		}

		return $this;
	} // setComment()

	/**
	 * Sets the value of [processed_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setProcessedDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->processed_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->processed_date !== null && $tmpDt = new DateTime($this->processed_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->processed_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = MissionRequestTempPeer::PROCESSED_DATE;
			}
		} // if either are not null

		return $this;
	} // setProcessedDate()

	/**
	 * Set the value of [session_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setSessionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->session_id !== $v) {
			$this->session_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::SESSION_ID;
		}

		return $this;
	} // setSessionId()

	/**
	 * Set the value of [ip_address] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setIpAddress($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ip_address !== $v) {
			$this->ip_address = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::IP_ADDRESS;
		}

		return $this;
	} // setIpAddress()

	/**
	 * Set the value of [pass_fax_phone1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassFaxPhone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_fax_phone1 !== $v) {
			$this->pass_fax_phone1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_FAX_PHONE1;
		}

		return $this;
	} // setPassFaxPhone1()

	/**
	 * Set the value of [pass_fax_comment1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassFaxComment1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_fax_comment1 !== $v) {
			$this->pass_fax_comment1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_FAX_COMMENT1;
		}

		return $this;
	} // setPassFaxComment1()

	/**
	 * Set the value of [guar_first_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarFirstName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_first_name !== $v) {
			$this->guar_first_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_FIRST_NAME;
		}

		return $this;
	} // setGuarFirstName()

	/**
	 * Set the value of [guar_last_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarLastName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_last_name !== $v) {
			$this->guar_last_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_LAST_NAME;
		}

		return $this;
	} // setGuarLastName()

	/**
	 * Set the value of [guar_address1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarAddress1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_address1 !== $v) {
			$this->guar_address1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_ADDRESS1;
		}

		return $this;
	} // setGuarAddress1()

	/**
	 * Set the value of [guar_address2] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarAddress2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_address2 !== $v) {
			$this->guar_address2 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_ADDRESS2;
		}

		return $this;
	} // setGuarAddress2()

	/**
	 * Set the value of [guar_city] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_city !== $v) {
			$this->guar_city = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_CITY;
		}

		return $this;
	} // setGuarCity()

	/**
	 * Set the value of [guar_state] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_state !== $v) {
			$this->guar_state = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_STATE;
		}

		return $this;
	} // setGuarState()

	/**
	 * Set the value of [guar_zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_zipcode !== $v) {
			$this->guar_zipcode = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_ZIPCODE;
		}

		return $this;
	} // setGuarZipcode()

	/**
	 * Set the value of [guar_day_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarDayPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_day_phone !== $v) {
			$this->guar_day_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_DAY_PHONE;
		}

		return $this;
	} // setGuarDayPhone()

	/**
	 * Set the value of [guar_day_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarDayComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_day_comment !== $v) {
			$this->guar_day_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_DAY_COMMENT;
		}

		return $this;
	} // setGuarDayComment()

	/**
	 * Set the value of [guar_eve_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarEvePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_eve_phone !== $v) {
			$this->guar_eve_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_EVE_PHONE;
		}

		return $this;
	} // setGuarEvePhone()

	/**
	 * Set the value of [guar_eve_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarEveComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_eve_comment !== $v) {
			$this->guar_eve_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_EVE_COMMENT;
		}

		return $this;
	} // setGuarEveComment()

	/**
	 * Set the value of [guar_fax_phone1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarFaxPhone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_fax_phone1 !== $v) {
			$this->guar_fax_phone1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_FAX_PHONE1;
		}

		return $this;
	} // setGuarFaxPhone1()

	/**
	 * Set the value of [guar_fax_comment1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarFaxComment1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_fax_comment1 !== $v) {
			$this->guar_fax_comment1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_FAX_COMMENT1;
		}

		return $this;
	} // setGuarFaxComment1()

	/**
	 * Set the value of [guar_mobile_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarMobilePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_mobile_phone !== $v) {
			$this->guar_mobile_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_MOBILE_PHONE;
		}

		return $this;
	} // setGuarMobilePhone()

	/**
	 * Set the value of [guar_mobile_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarMobileComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_mobile_comment !== $v) {
			$this->guar_mobile_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_MOBILE_COMMENT;
		}

		return $this;
	} // setGuarMobileComment()

	/**
	 * Set the value of [guar_pager_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarPagerPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_pager_phone !== $v) {
			$this->guar_pager_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_PAGER_PHONE;
		}

		return $this;
	} // setGuarPagerPhone()

	/**
	 * Set the value of [guar_pager_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarPagerComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_pager_comment !== $v) {
			$this->guar_pager_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_PAGER_COMMENT;
		}

		return $this;
	} // setGuarPagerComment()

	/**
	 * Set the value of [guar_other_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarOtherPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_other_phone !== $v) {
			$this->guar_other_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_OTHER_PHONE;
		}

		return $this;
	} // setGuarOtherPhone()

	/**
	 * Set the value of [guar_other_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarOtherComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_other_comment !== $v) {
			$this->guar_other_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_OTHER_COMMENT;
		}

		return $this;
	} // setGuarOtherComment()

	/**
	 * Set the value of [guar_guar_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuarGuarEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guar_guar_email !== $v) {
			$this->guar_guar_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUAR_GUAR_EMAIL;
		}

		return $this;
	} // setGuarGuarEmail()

	/**
	 * Set the value of [req_fax_phone1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqFaxPhone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_fax_phone1 !== $v) {
			$this->req_fax_phone1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_FAX_PHONE1;
		}

		return $this;
	} // setReqFaxPhone1()

	/**
	 * Set the value of [req_fax_comment1] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqFaxComment1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_fax_comment1 !== $v) {
			$this->req_fax_comment1 = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_FAX_COMMENT1;
		}

		return $this;
	} // setReqFaxComment1()

	/**
	 * Set the value of [pass_english] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassEnglish($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pass_english !== $v) {
			$this->pass_english = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_ENGLISH;
		}

		return $this;
	} // setPassEnglish()

	/**
	 * Set the value of [pass_language] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassLanguage($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_language !== $v) {
			$this->pass_language = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_LANGUAGE;
		}

		return $this;
	} // setPassLanguage()

	/**
	 * Set the value of [appt_time] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setApptTime($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->appt_time !== $v) {
			$this->appt_time = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::APPT_TIME;
		}

		return $this;
	} // setApptTime()

	/**
	 * Set the value of [requester_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setRequesterId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->requester_id !== $v) {
			$this->requester_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQUESTER_ID;
		}

		return $this;
	} // setRequesterId()

	/**
	 * Set the value of [passenger_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassengerId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->passenger_id !== $v) {
			$this->passenger_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASSENGER_ID;
		}

		return $this;
	} // setPassengerId()

	/**
	 * Set the value of [mission_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setMissionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->mission_id !== $v) {
			$this->mission_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::MISSION_ID;
		}

		return $this;
	} // setMissionId()

	/**
	 * Set the value of [treating_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setTreatingEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->treating_email !== $v) {
			$this->treating_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::TREATING_EMAIL;
		}

		return $this;
	} // setTreatingEmail()

	/**
	 * Set the value of [pass_height] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassHeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pass_height !== $v) {
			$this->pass_height = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_HEIGHT;
		}

		return $this;
	} // setPassHeight()

	/**
	 * Set the value of [return_time] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReturnTime($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->return_time !== $v) {
			$this->return_time = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::RETURN_TIME;
		}

		return $this;
	} // setReturnTime()

	/**
	 * Set the value of [pass_oxygen] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassOxygen($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pass_oxygen !== $v) {
			$this->pass_oxygen = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_OXYGEN;
		}

		return $this;
	} // setPassOxygen()

	/**
	 * Set the value of [pass_medical] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassMedical($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pass_medical !== $v) {
			$this->pass_medical = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_MEDICAL;
		}

		return $this;
	} // setPassMedical()

	/**
	 * Set the value of [referral_source_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReferralSourceId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->referral_source_id !== $v) {
			$this->referral_source_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REFERRAL_SOURCE_ID;
		}

		return $this;
	} // setReferralSourceId()

	/**
	 * Set the value of [follow_up_contact_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFollowUpContactName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->follow_up_contact_name !== $v) {
			$this->follow_up_contact_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FOLLOW_UP_CONTACT_NAME;
		}

		return $this;
	} // setFollowUpContactName()

	/**
	 * Set the value of [follow_up_contact_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFollowUpContactPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->follow_up_contact_phone !== $v) {
			$this->follow_up_contact_phone = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FOLLOW_UP_CONTACT_PHONE;
		}

		return $this;
	} // setFollowUpContactPhone()

	/**
	 * Set the value of [follow_up_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setFollowUpEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->follow_up_email !== $v) {
			$this->follow_up_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::FOLLOW_UP_EMAIL;
		}

		return $this;
	} // setFollowUpEmail()

	/**
	 * Set the value of [miss_req_originator_afa_org_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setMissReqOriginatorAfaOrgId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->miss_req_originator_afa_org_id !== $v) {
			$this->miss_req_originator_afa_org_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::MISS_REQ_ORIGINATOR_AFA_ORG_ID;
		}

		return $this;
	} // setMissReqOriginatorAfaOrgId()

	/**
	 * Set the value of [afa_org_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setAfaOrgId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->afa_org_id !== $v) {
			$this->afa_org_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::AFA_ORG_ID;
		}

		return $this;
	} // setAfaOrgId()

	/**
	 * Set the value of [afa_org_mission_id] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setAfaOrgMissionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->afa_org_mission_id !== $v) {
			$this->afa_org_mission_id = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::AFA_ORG_MISSION_ID;
		}

		return $this;
	} // setAfaOrgMissionId()

	/**
	 * Set the value of [mission_request_type] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setMissionRequestType($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->mission_request_type !== $v) {
			$this->mission_request_type = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::MISSION_REQUEST_TYPE;
		}

		return $this;
	} // setMissionRequestType()

	/**
	 * Set the value of [last_page_processed] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setLastPageProcessed($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->last_page_processed !== $v) {
			$this->last_page_processed = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::LAST_PAGE_PROCESSED;
		}

		return $this;
	} // setLastPageProcessed()

	/**
	 * Set the value of [guardian_middle_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianMiddleName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_middle_name !== $v) {
			$this->guardian_middle_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_MIDDLE_NAME;
		}

		return $this;
	} // setGuardianMiddleName()

	/**
	 * Set the value of [guardian_nickname] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianNickname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_nickname !== $v) {
			$this->guardian_nickname = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_NICKNAME;
		}

		return $this;
	} // setGuardianNickname()

	/**
	 * Set the value of [guardian_pager_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianPagerEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_pager_email !== $v) {
			$this->guardian_pager_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_PAGER_EMAIL;
		}

		return $this;
	} // setGuardianPagerEmail()

	/**
	 * Set the value of [guardian_secondary_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianSecondaryEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_secondary_email !== $v) {
			$this->guardian_secondary_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_SECONDARY_EMAIL;
		}

		return $this;
	} // setGuardianSecondaryEmail()

	/**
	 * Set the value of [guardian_suffix] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianSuffix($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_suffix !== $v) {
			$this->guardian_suffix = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_SUFFIX;
		}

		return $this;
	} // setGuardianSuffix()

	/**
	 * Set the value of [guardian_title] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianTitle($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_title !== $v) {
			$this->guardian_title = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_TITLE;
		}

		return $this;
	} // setGuardianTitle()

	/**
	 * Set the value of [guardian_veteran] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianVeteran($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->guardian_veteran !== $v) {
			$this->guardian_veteran = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_VETERAN;
		}

		return $this;
	} // setGuardianVeteran()

	/**
	 * Set the value of [pass_gender] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassGender($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_gender !== $v) {
			$this->pass_gender = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_GENDER;
		}

		return $this;
	} // setPassGender()

	/**
	 * Set the value of [pass_middle_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassMiddleName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_middle_name !== $v) {
			$this->pass_middle_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_MIDDLE_NAME;
		}

		return $this;
	} // setPassMiddleName()

	/**
	 * Set the value of [pass_nickname] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassNickname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_nickname !== $v) {
			$this->pass_nickname = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_NICKNAME;
		}

		return $this;
	} // setPassNickname()

	/**
	 * Set the value of [pass_pager_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassPagerEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_pager_email !== $v) {
			$this->pass_pager_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_PAGER_EMAIL;
		}

		return $this;
	} // setPassPagerEmail()

	/**
	 * Set the value of [pass_secondary_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassSecondaryEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_secondary_email !== $v) {
			$this->pass_secondary_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_SECONDARY_EMAIL;
		}

		return $this;
	} // setPassSecondaryEmail()

	/**
	 * Set the value of [pass_suffix] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassSuffix($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pass_suffix !== $v) {
			$this->pass_suffix = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_SUFFIX;
		}

		return $this;
	} // setPassSuffix()

	/**
	 * Set the value of [pass_veteran] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setPassVeteran($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pass_veteran !== $v) {
			$this->pass_veteran = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::PASS_VETERAN;
		}

		return $this;
	} // setPassVeteran()

	/**
	 * Set the value of [req_middle_name] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqMiddleName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_middle_name !== $v) {
			$this->req_middle_name = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_MIDDLE_NAME;
		}

		return $this;
	} // setReqMiddleName()

	/**
	 * Set the value of [req_nickname] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqNickname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_nickname !== $v) {
			$this->req_nickname = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_NICKNAME;
		}

		return $this;
	} // setReqNickname()

	/**
	 * Set the value of [req_pager_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqPagerEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_pager_email !== $v) {
			$this->req_pager_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_PAGER_EMAIL;
		}

		return $this;
	} // setReqPagerEmail()

	/**
	 * Set the value of [req_secondary_email] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqSecondaryEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_secondary_email !== $v) {
			$this->req_secondary_email = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_SECONDARY_EMAIL;
		}

		return $this;
	} // setReqSecondaryEmail()

	/**
	 * Set the value of [req_suffix] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqSuffix($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_suffix !== $v) {
			$this->req_suffix = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_SUFFIX;
		}

		return $this;
	} // setReqSuffix()

	/**
	 * Set the value of [req_veteran] column.
	 * 
	 * @param      int $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqVeteran($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->req_veteran !== $v) {
			$this->req_veteran = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_VETERAN;
		}

		return $this;
	} // setReqVeteran()

	/**
	 * Set the value of [lodging_phone_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setLodgingPhoneComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lodging_phone_comment !== $v) {
			$this->lodging_phone_comment = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::LODGING_PHONE_COMMENT;
		}

		return $this;
	} // setLodgingPhoneComment()

	/**
	 * Set the value of [req_gender] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setReqGender($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->req_gender !== $v) {
			$this->req_gender = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::REQ_GENDER;
		}

		return $this;
	} // setReqGender()

	/**
	 * Set the value of [guardian_gender] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setGuardianGender($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->guardian_gender !== $v) {
			$this->guardian_gender = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::GUARDIAN_GENDER;
		}

		return $this;
	} // setGuardianGender()

	/**
	 * Set the value of [agency_position] column.
	 * 
	 * @param      string $v new value
	 * @return     MissionRequestTemp The current object (for fluent API support)
	 */
	public function setAgencyPosition($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->agency_position !== $v) {
			$this->agency_position = $v;
			$this->modifiedColumns[] = MissionRequestTempPeer::AGENCY_POSITION;
		}

		return $this;
	} // setAgencyPosition()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array())) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->id = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->request_date = ($row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->request_by = ($row[$startcol + 2] !== null) ? (int) $row[$startcol + 2] : null;
			$this->request_on_behalf = ($row[$startcol + 3] !== null) ? (int) $row[$startcol + 3] : null;
			$this->appt_date = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->return_date = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->baggage_weight = ($row[$startcol + 6] !== null) ? (int) $row[$startcol + 6] : null;
			$this->baggage_desc = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->pass_title = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->pass_first_name = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->pass_last_name = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->pass_address1 = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->pass_address2 = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->pass_city = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->pass_county = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->pass_state = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->pass_country = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->pass_zipcode = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->pass_day_phone = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->pass_day_comment = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->pass_eve_phone = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->pass_eve_comment = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->pass_mobile_phone = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->pass_mobile_comment = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->pass_pager_phone = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->pass_pager_comment = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->pass_other_phone = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->pass_other_comment = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->pass_email = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->pass_date_of_birth = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->illness = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->financial = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->pass_weight = ($row[$startcol + 32] !== null) ? (int) $row[$startcol + 32] : null;
			$this->releasing_physician = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->release_phone = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->release_phone_comment = ($row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->release_fax = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->release_fax_comment = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->release_email = ($row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->treating_physician = ($row[$startcol + 39] !== null) ? (string) $row[$startcol + 39] : null;
			$this->treating_phone = ($row[$startcol + 40] !== null) ? (string) $row[$startcol + 40] : null;
			$this->treating_phone_comment = ($row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->treating_fax = ($row[$startcol + 42] !== null) ? (string) $row[$startcol + 42] : null;
			$this->treating_fax_comment = ($row[$startcol + 43] !== null) ? (string) $row[$startcol + 43] : null;
			$this->req_title = ($row[$startcol + 44] !== null) ? (string) $row[$startcol + 44] : null;
			$this->req_first_name = ($row[$startcol + 45] !== null) ? (string) $row[$startcol + 45] : null;
			$this->req_last_name = ($row[$startcol + 46] !== null) ? (string) $row[$startcol + 46] : null;
			$this->agency_name = ($row[$startcol + 47] !== null) ? (string) $row[$startcol + 47] : null;
			$this->req_address1 = ($row[$startcol + 48] !== null) ? (string) $row[$startcol + 48] : null;
			$this->req_address2 = ($row[$startcol + 49] !== null) ? (string) $row[$startcol + 49] : null;
			$this->req_city = ($row[$startcol + 50] !== null) ? (string) $row[$startcol + 50] : null;
			$this->req_county = ($row[$startcol + 51] !== null) ? (string) $row[$startcol + 51] : null;
			$this->req_state = ($row[$startcol + 52] !== null) ? (string) $row[$startcol + 52] : null;
			$this->req_country = ($row[$startcol + 53] !== null) ? (string) $row[$startcol + 53] : null;
			$this->req_zipcode = ($row[$startcol + 54] !== null) ? (string) $row[$startcol + 54] : null;
			$this->req_day_phone = ($row[$startcol + 55] !== null) ? (string) $row[$startcol + 55] : null;
			$this->req_day_comment = ($row[$startcol + 56] !== null) ? (string) $row[$startcol + 56] : null;
			$this->req_eve_phone = ($row[$startcol + 57] !== null) ? (string) $row[$startcol + 57] : null;
			$this->req_eve_comment = ($row[$startcol + 58] !== null) ? (string) $row[$startcol + 58] : null;
			$this->req_mobile_phone = ($row[$startcol + 59] !== null) ? (string) $row[$startcol + 59] : null;
			$this->req_mobile_comment = ($row[$startcol + 60] !== null) ? (string) $row[$startcol + 60] : null;
			$this->req_pager_phone = ($row[$startcol + 61] !== null) ? (string) $row[$startcol + 61] : null;
			$this->req_pager_comment = ($row[$startcol + 62] !== null) ? (string) $row[$startcol + 62] : null;
			$this->req_other_phone = ($row[$startcol + 63] !== null) ? (string) $row[$startcol + 63] : null;
			$this->req_other_comment = ($row[$startcol + 64] !== null) ? (string) $row[$startcol + 64] : null;
			$this->req_email = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->origin_ident = ($row[$startcol + 66] !== null) ? (string) $row[$startcol + 66] : null;
			$this->origin_id = ($row[$startcol + 67] !== null) ? (int) $row[$startcol + 67] : null;
			$this->origin_city = ($row[$startcol + 68] !== null) ? (string) $row[$startcol + 68] : null;
			$this->origin_state = ($row[$startcol + 69] !== null) ? (string) $row[$startcol + 69] : null;
			$this->origin_zipcode = ($row[$startcol + 70] !== null) ? (string) $row[$startcol + 70] : null;
			$this->dest_ident = ($row[$startcol + 71] !== null) ? (string) $row[$startcol + 71] : null;
			$this->dest_id = ($row[$startcol + 72] !== null) ? (int) $row[$startcol + 72] : null;
			$this->dest_city = ($row[$startcol + 73] !== null) ? (string) $row[$startcol + 73] : null;
			$this->dest_state = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->dest_zipcode = ($row[$startcol + 75] !== null) ? (string) $row[$startcol + 75] : null;
			$this->com1_name = ($row[$startcol + 76] !== null) ? (string) $row[$startcol + 76] : null;
			$this->com1_relationship = ($row[$startcol + 77] !== null) ? (string) $row[$startcol + 77] : null;
			$this->com1_date_of_birth = ($row[$startcol + 78] !== null) ? (string) $row[$startcol + 78] : null;
			$this->com1_weight = ($row[$startcol + 79] !== null) ? (int) $row[$startcol + 79] : null;
			$this->com1_phone = ($row[$startcol + 80] !== null) ? (string) $row[$startcol + 80] : null;
			$this->com1_comment = ($row[$startcol + 81] !== null) ? (string) $row[$startcol + 81] : null;
			$this->com2_name = ($row[$startcol + 82] !== null) ? (string) $row[$startcol + 82] : null;
			$this->com2_relationship = ($row[$startcol + 83] !== null) ? (string) $row[$startcol + 83] : null;
			$this->com2_date_of_birth = ($row[$startcol + 84] !== null) ? (string) $row[$startcol + 84] : null;
			$this->com2_weight = ($row[$startcol + 85] !== null) ? (int) $row[$startcol + 85] : null;
			$this->com2_phone = ($row[$startcol + 86] !== null) ? (string) $row[$startcol + 86] : null;
			$this->com2_comment = ($row[$startcol + 87] !== null) ? (string) $row[$startcol + 87] : null;
			$this->com3_name = ($row[$startcol + 88] !== null) ? (string) $row[$startcol + 88] : null;
			$this->com3_relationship = ($row[$startcol + 89] !== null) ? (string) $row[$startcol + 89] : null;
			$this->com3_date_of_birth = ($row[$startcol + 90] !== null) ? (string) $row[$startcol + 90] : null;
			$this->com3_weight = ($row[$startcol + 91] !== null) ? (int) $row[$startcol + 91] : null;
			$this->com3_phone = ($row[$startcol + 92] !== null) ? (string) $row[$startcol + 92] : null;
			$this->com3_comment = ($row[$startcol + 93] !== null) ? (string) $row[$startcol + 93] : null;
			$this->com4_name = ($row[$startcol + 94] !== null) ? (string) $row[$startcol + 94] : null;
			$this->com4_relationship = ($row[$startcol + 95] !== null) ? (string) $row[$startcol + 95] : null;
			$this->com4_date_of_birth = ($row[$startcol + 96] !== null) ? (string) $row[$startcol + 96] : null;
			$this->com4_weight = ($row[$startcol + 97] !== null) ? (int) $row[$startcol + 97] : null;
			$this->com4_phone = ($row[$startcol + 98] !== null) ? (string) $row[$startcol + 98] : null;
			$this->com4_comment = ($row[$startcol + 99] !== null) ? (string) $row[$startcol + 99] : null;
			$this->lodging_name = ($row[$startcol + 100] !== null) ? (string) $row[$startcol + 100] : null;
			$this->lodging_phone = ($row[$startcol + 101] !== null) ? (string) $row[$startcol + 101] : null;
			$this->facility_name = ($row[$startcol + 102] !== null) ? (string) $row[$startcol + 102] : null;
			$this->facility_phone = ($row[$startcol + 103] !== null) ? (string) $row[$startcol + 103] : null;
			$this->facility_phone_comment = ($row[$startcol + 104] !== null) ? (string) $row[$startcol + 104] : null;
			$this->req_language_spoken = ($row[$startcol + 105] !== null) ? (string) $row[$startcol + 105] : null;
			$this->best_contact = ($row[$startcol + 106] !== null) ? (string) $row[$startcol + 106] : null;
			$this->emergency_name = ($row[$startcol + 107] !== null) ? (string) $row[$startcol + 107] : null;
			$this->emergency_phone1 = ($row[$startcol + 108] !== null) ? (string) $row[$startcol + 108] : null;
			$this->emergency_phone2 = ($row[$startcol + 109] !== null) ? (string) $row[$startcol + 109] : null;
			$this->emergency_phone1_comment = ($row[$startcol + 110] !== null) ? (string) $row[$startcol + 110] : null;
			$this->emergency_phone2_comment = ($row[$startcol + 111] !== null) ? (string) $row[$startcol + 111] : null;
			$this->comment = ($row[$startcol + 112] !== null) ? (string) $row[$startcol + 112] : null;
			$this->processed_date = ($row[$startcol + 113] !== null) ? (string) $row[$startcol + 113] : null;
			$this->session_id = ($row[$startcol + 114] !== null) ? (int) $row[$startcol + 114] : null;
			$this->ip_address = ($row[$startcol + 115] !== null) ? (string) $row[$startcol + 115] : null;
			$this->pass_fax_phone1 = ($row[$startcol + 116] !== null) ? (string) $row[$startcol + 116] : null;
			$this->pass_fax_comment1 = ($row[$startcol + 117] !== null) ? (string) $row[$startcol + 117] : null;
			$this->guar_first_name = ($row[$startcol + 118] !== null) ? (string) $row[$startcol + 118] : null;
			$this->guar_last_name = ($row[$startcol + 119] !== null) ? (string) $row[$startcol + 119] : null;
			$this->guar_address1 = ($row[$startcol + 120] !== null) ? (string) $row[$startcol + 120] : null;
			$this->guar_address2 = ($row[$startcol + 121] !== null) ? (string) $row[$startcol + 121] : null;
			$this->guar_city = ($row[$startcol + 122] !== null) ? (string) $row[$startcol + 122] : null;
			$this->guar_state = ($row[$startcol + 123] !== null) ? (string) $row[$startcol + 123] : null;
			$this->guar_zipcode = ($row[$startcol + 124] !== null) ? (string) $row[$startcol + 124] : null;
			$this->guar_day_phone = ($row[$startcol + 125] !== null) ? (string) $row[$startcol + 125] : null;
			$this->guar_day_comment = ($row[$startcol + 126] !== null) ? (string) $row[$startcol + 126] : null;
			$this->guar_eve_phone = ($row[$startcol + 127] !== null) ? (string) $row[$startcol + 127] : null;
			$this->guar_eve_comment = ($row[$startcol + 128] !== null) ? (string) $row[$startcol + 128] : null;
			$this->guar_fax_phone1 = ($row[$startcol + 129] !== null) ? (string) $row[$startcol + 129] : null;
			$this->guar_fax_comment1 = ($row[$startcol + 130] !== null) ? (string) $row[$startcol + 130] : null;
			$this->guar_mobile_phone = ($row[$startcol + 131] !== null) ? (string) $row[$startcol + 131] : null;
			$this->guar_mobile_comment = ($row[$startcol + 132] !== null) ? (string) $row[$startcol + 132] : null;
			$this->guar_pager_phone = ($row[$startcol + 133] !== null) ? (string) $row[$startcol + 133] : null;
			$this->guar_pager_comment = ($row[$startcol + 134] !== null) ? (string) $row[$startcol + 134] : null;
			$this->guar_other_phone = ($row[$startcol + 135] !== null) ? (string) $row[$startcol + 135] : null;
			$this->guar_other_comment = ($row[$startcol + 136] !== null) ? (string) $row[$startcol + 136] : null;
			$this->guar_guar_email = ($row[$startcol + 137] !== null) ? (string) $row[$startcol + 137] : null;
			$this->req_fax_phone1 = ($row[$startcol + 138] !== null) ? (string) $row[$startcol + 138] : null;
			$this->req_fax_comment1 = ($row[$startcol + 139] !== null) ? (string) $row[$startcol + 139] : null;
			$this->pass_english = ($row[$startcol + 140] !== null) ? (int) $row[$startcol + 140] : null;
			$this->pass_language = ($row[$startcol + 141] !== null) ? (string) $row[$startcol + 141] : null;
			$this->appt_time = ($row[$startcol + 142] !== null) ? (string) $row[$startcol + 142] : null;
			$this->requester_id = ($row[$startcol + 143] !== null) ? (int) $row[$startcol + 143] : null;
			$this->passenger_id = ($row[$startcol + 144] !== null) ? (int) $row[$startcol + 144] : null;
			$this->mission_id = ($row[$startcol + 145] !== null) ? (int) $row[$startcol + 145] : null;
			$this->treating_email = ($row[$startcol + 146] !== null) ? (string) $row[$startcol + 146] : null;
			$this->pass_height = ($row[$startcol + 147] !== null) ? (int) $row[$startcol + 147] : null;
			$this->return_time = ($row[$startcol + 148] !== null) ? (string) $row[$startcol + 148] : null;
			$this->pass_oxygen = ($row[$startcol + 149] !== null) ? (int) $row[$startcol + 149] : null;
			$this->pass_medical = ($row[$startcol + 150] !== null) ? (int) $row[$startcol + 150] : null;
			$this->referral_source_id = ($row[$startcol + 151] !== null) ? (int) $row[$startcol + 151] : null;
			$this->follow_up_contact_name = ($row[$startcol + 152] !== null) ? (string) $row[$startcol + 152] : null;
			$this->follow_up_contact_phone = ($row[$startcol + 153] !== null) ? (string) $row[$startcol + 153] : null;
			$this->follow_up_email = ($row[$startcol + 154] !== null) ? (string) $row[$startcol + 154] : null;
			$this->miss_req_originator_afa_org_id = ($row[$startcol + 155] !== null) ? (int) $row[$startcol + 155] : null;
			$this->afa_org_id = ($row[$startcol + 156] !== null) ? (int) $row[$startcol + 156] : null;
			$this->afa_org_mission_id = ($row[$startcol + 157] !== null) ? (int) $row[$startcol + 157] : null;
			$this->mission_request_type = ($row[$startcol + 158] !== null) ? (int) $row[$startcol + 158] : null;
			$this->last_page_processed = ($row[$startcol + 159] !== null) ? (int) $row[$startcol + 159] : null;
			$this->guardian_middle_name = ($row[$startcol + 160] !== null) ? (string) $row[$startcol + 160] : null;
			$this->guardian_nickname = ($row[$startcol + 161] !== null) ? (string) $row[$startcol + 161] : null;
			$this->guardian_pager_email = ($row[$startcol + 162] !== null) ? (string) $row[$startcol + 162] : null;
			$this->guardian_secondary_email = ($row[$startcol + 163] !== null) ? (string) $row[$startcol + 163] : null;
			$this->guardian_suffix = ($row[$startcol + 164] !== null) ? (string) $row[$startcol + 164] : null;
			$this->guardian_title = ($row[$startcol + 165] !== null) ? (string) $row[$startcol + 165] : null;
			$this->guardian_veteran = ($row[$startcol + 166] !== null) ? (int) $row[$startcol + 166] : null;
			$this->pass_gender = ($row[$startcol + 167] !== null) ? (string) $row[$startcol + 167] : null;
			$this->pass_middle_name = ($row[$startcol + 168] !== null) ? (string) $row[$startcol + 168] : null;
			$this->pass_nickname = ($row[$startcol + 169] !== null) ? (string) $row[$startcol + 169] : null;
			$this->pass_pager_email = ($row[$startcol + 170] !== null) ? (string) $row[$startcol + 170] : null;
			$this->pass_secondary_email = ($row[$startcol + 171] !== null) ? (string) $row[$startcol + 171] : null;
			$this->pass_suffix = ($row[$startcol + 172] !== null) ? (string) $row[$startcol + 172] : null;
			$this->pass_veteran = ($row[$startcol + 173] !== null) ? (int) $row[$startcol + 173] : null;
			$this->req_middle_name = ($row[$startcol + 174] !== null) ? (string) $row[$startcol + 174] : null;
			$this->req_nickname = ($row[$startcol + 175] !== null) ? (string) $row[$startcol + 175] : null;
			$this->req_pager_email = ($row[$startcol + 176] !== null) ? (string) $row[$startcol + 176] : null;
			$this->req_secondary_email = ($row[$startcol + 177] !== null) ? (string) $row[$startcol + 177] : null;
			$this->req_suffix = ($row[$startcol + 178] !== null) ? (string) $row[$startcol + 178] : null;
			$this->req_veteran = ($row[$startcol + 179] !== null) ? (int) $row[$startcol + 179] : null;
			$this->lodging_phone_comment = ($row[$startcol + 180] !== null) ? (string) $row[$startcol + 180] : null;
			$this->req_gender = ($row[$startcol + 181] !== null) ? (string) $row[$startcol + 181] : null;
			$this->guardian_gender = ($row[$startcol + 182] !== null) ? (string) $row[$startcol + 182] : null;
			$this->agency_position = ($row[$startcol + 183] !== null) ? (string) $row[$startcol + 183] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 184; // 184 = MissionRequestTempPeer::NUM_COLUMNS - MissionRequestTempPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating MissionRequestTemp object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(MissionRequestTempPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = MissionRequestTempPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseMissionRequestTemp:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(MissionRequestTempPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			MissionRequestTempPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseMissionRequestTemp:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseMissionRequestTemp:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(MissionRequestTempPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseMissionRequestTemp:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			MissionRequestTempPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;


			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = MissionRequestTempPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setNew(false);
				} else {
					$affectedRows += MissionRequestTempPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = MissionRequestTempPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = MissionRequestTempPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getId();
				break;
			case 1:
				return $this->getRequestDate();
				break;
			case 2:
				return $this->getRequestBy();
				break;
			case 3:
				return $this->getRequestOnBehalf();
				break;
			case 4:
				return $this->getApptDate();
				break;
			case 5:
				return $this->getReturnDate();
				break;
			case 6:
				return $this->getBaggageWeight();
				break;
			case 7:
				return $this->getBaggageDesc();
				break;
			case 8:
				return $this->getPassTitle();
				break;
			case 9:
				return $this->getPassFirstName();
				break;
			case 10:
				return $this->getPassLastName();
				break;
			case 11:
				return $this->getPassAddress1();
				break;
			case 12:
				return $this->getPassAddress2();
				break;
			case 13:
				return $this->getPassCity();
				break;
			case 14:
				return $this->getPassCounty();
				break;
			case 15:
				return $this->getPassState();
				break;
			case 16:
				return $this->getPassCountry();
				break;
			case 17:
				return $this->getPassZipcode();
				break;
			case 18:
				return $this->getPassDayPhone();
				break;
			case 19:
				return $this->getPassDayComment();
				break;
			case 20:
				return $this->getPassEvePhone();
				break;
			case 21:
				return $this->getPassEveComment();
				break;
			case 22:
				return $this->getPassMobilePhone();
				break;
			case 23:
				return $this->getPassMobileComment();
				break;
			case 24:
				return $this->getPassPagerPhone();
				break;
			case 25:
				return $this->getPassPagerComment();
				break;
			case 26:
				return $this->getPassOtherPhone();
				break;
			case 27:
				return $this->getPassOtherComment();
				break;
			case 28:
				return $this->getPassEmail();
				break;
			case 29:
				return $this->getPassDateOfBirth();
				break;
			case 30:
				return $this->getIllness();
				break;
			case 31:
				return $this->getFinancial();
				break;
			case 32:
				return $this->getPassWeight();
				break;
			case 33:
				return $this->getReleasingPhysician();
				break;
			case 34:
				return $this->getReleasePhone();
				break;
			case 35:
				return $this->getReleasePhoneComment();
				break;
			case 36:
				return $this->getReleaseFax();
				break;
			case 37:
				return $this->getReleaseFaxComment();
				break;
			case 38:
				return $this->getReleaseEmail();
				break;
			case 39:
				return $this->getTreatingPhysician();
				break;
			case 40:
				return $this->getTreatingPhone();
				break;
			case 41:
				return $this->getTreatingPhoneComment();
				break;
			case 42:
				return $this->getTreatingFax();
				break;
			case 43:
				return $this->getTreatingFaxComment();
				break;
			case 44:
				return $this->getReqTitle();
				break;
			case 45:
				return $this->getReqFirstName();
				break;
			case 46:
				return $this->getReqLastName();
				break;
			case 47:
				return $this->getAgencyName();
				break;
			case 48:
				return $this->getReqAddress1();
				break;
			case 49:
				return $this->getReqAddress2();
				break;
			case 50:
				return $this->getReqCity();
				break;
			case 51:
				return $this->getReqCounty();
				break;
			case 52:
				return $this->getReqState();
				break;
			case 53:
				return $this->getReqCountry();
				break;
			case 54:
				return $this->getReqZipcode();
				break;
			case 55:
				return $this->getReqDayPhone();
				break;
			case 56:
				return $this->getReqDayComment();
				break;
			case 57:
				return $this->getReqEvePhone();
				break;
			case 58:
				return $this->getReqEveComment();
				break;
			case 59:
				return $this->getReqMobilePhone();
				break;
			case 60:
				return $this->getReqMobileComment();
				break;
			case 61:
				return $this->getReqPagerPhone();
				break;
			case 62:
				return $this->getReqPagerComment();
				break;
			case 63:
				return $this->getReqOtherPhone();
				break;
			case 64:
				return $this->getReqOtherComment();
				break;
			case 65:
				return $this->getReqEmail();
				break;
			case 66:
				return $this->getOriginIdent();
				break;
			case 67:
				return $this->getOriginId();
				break;
			case 68:
				return $this->getOriginCity();
				break;
			case 69:
				return $this->getOriginState();
				break;
			case 70:
				return $this->getOriginZipcode();
				break;
			case 71:
				return $this->getDestIdent();
				break;
			case 72:
				return $this->getDestId();
				break;
			case 73:
				return $this->getDestCity();
				break;
			case 74:
				return $this->getDestState();
				break;
			case 75:
				return $this->getDestZipcode();
				break;
			case 76:
				return $this->getCom1Name();
				break;
			case 77:
				return $this->getCom1Relationship();
				break;
			case 78:
				return $this->getCom1DateOfBirth();
				break;
			case 79:
				return $this->getCom1Weight();
				break;
			case 80:
				return $this->getCom1Phone();
				break;
			case 81:
				return $this->getCom1Comment();
				break;
			case 82:
				return $this->getCom2Name();
				break;
			case 83:
				return $this->getCom2Relationship();
				break;
			case 84:
				return $this->getCom2DateOfBirth();
				break;
			case 85:
				return $this->getCom2Weight();
				break;
			case 86:
				return $this->getCom2Phone();
				break;
			case 87:
				return $this->getCom2Comment();
				break;
			case 88:
				return $this->getCom3Name();
				break;
			case 89:
				return $this->getCom3Relationship();
				break;
			case 90:
				return $this->getCom3DateOfBirth();
				break;
			case 91:
				return $this->getCom3Weight();
				break;
			case 92:
				return $this->getCom3Phone();
				break;
			case 93:
				return $this->getCom3Comment();
				break;
			case 94:
				return $this->getCom4Name();
				break;
			case 95:
				return $this->getCom4Relationship();
				break;
			case 96:
				return $this->getCom4DateOfBirth();
				break;
			case 97:
				return $this->getCom4Weight();
				break;
			case 98:
				return $this->getCom4Phone();
				break;
			case 99:
				return $this->getCom4Comment();
				break;
			case 100:
				return $this->getLodgingName();
				break;
			case 101:
				return $this->getLodgingPhone();
				break;
			case 102:
				return $this->getFacilityName();
				break;
			case 103:
				return $this->getFacilityPhone();
				break;
			case 104:
				return $this->getFacilityPhoneComment();
				break;
			case 105:
				return $this->getReqLanguageSpoken();
				break;
			case 106:
				return $this->getBestContact();
				break;
			case 107:
				return $this->getEmergencyName();
				break;
			case 108:
				return $this->getEmergencyPhone1();
				break;
			case 109:
				return $this->getEmergencyPhone2();
				break;
			case 110:
				return $this->getEmergencyPhone1Comment();
				break;
			case 111:
				return $this->getEmergencyPhone2Comment();
				break;
			case 112:
				return $this->getComment();
				break;
			case 113:
				return $this->getProcessedDate();
				break;
			case 114:
				return $this->getSessionId();
				break;
			case 115:
				return $this->getIpAddress();
				break;
			case 116:
				return $this->getPassFaxPhone1();
				break;
			case 117:
				return $this->getPassFaxComment1();
				break;
			case 118:
				return $this->getGuarFirstName();
				break;
			case 119:
				return $this->getGuarLastName();
				break;
			case 120:
				return $this->getGuarAddress1();
				break;
			case 121:
				return $this->getGuarAddress2();
				break;
			case 122:
				return $this->getGuarCity();
				break;
			case 123:
				return $this->getGuarState();
				break;
			case 124:
				return $this->getGuarZipcode();
				break;
			case 125:
				return $this->getGuarDayPhone();
				break;
			case 126:
				return $this->getGuarDayComment();
				break;
			case 127:
				return $this->getGuarEvePhone();
				break;
			case 128:
				return $this->getGuarEveComment();
				break;
			case 129:
				return $this->getGuarFaxPhone1();
				break;
			case 130:
				return $this->getGuarFaxComment1();
				break;
			case 131:
				return $this->getGuarMobilePhone();
				break;
			case 132:
				return $this->getGuarMobileComment();
				break;
			case 133:
				return $this->getGuarPagerPhone();
				break;
			case 134:
				return $this->getGuarPagerComment();
				break;
			case 135:
				return $this->getGuarOtherPhone();
				break;
			case 136:
				return $this->getGuarOtherComment();
				break;
			case 137:
				return $this->getGuarGuarEmail();
				break;
			case 138:
				return $this->getReqFaxPhone1();
				break;
			case 139:
				return $this->getReqFaxComment1();
				break;
			case 140:
				return $this->getPassEnglish();
				break;
			case 141:
				return $this->getPassLanguage();
				break;
			case 142:
				return $this->getApptTime();
				break;
			case 143:
				return $this->getRequesterId();
				break;
			case 144:
				return $this->getPassengerId();
				break;
			case 145:
				return $this->getMissionId();
				break;
			case 146:
				return $this->getTreatingEmail();
				break;
			case 147:
				return $this->getPassHeight();
				break;
			case 148:
				return $this->getReturnTime();
				break;
			case 149:
				return $this->getPassOxygen();
				break;
			case 150:
				return $this->getPassMedical();
				break;
			case 151:
				return $this->getReferralSourceId();
				break;
			case 152:
				return $this->getFollowUpContactName();
				break;
			case 153:
				return $this->getFollowUpContactPhone();
				break;
			case 154:
				return $this->getFollowUpEmail();
				break;
			case 155:
				return $this->getMissReqOriginatorAfaOrgId();
				break;
			case 156:
				return $this->getAfaOrgId();
				break;
			case 157:
				return $this->getAfaOrgMissionId();
				break;
			case 158:
				return $this->getMissionRequestType();
				break;
			case 159:
				return $this->getLastPageProcessed();
				break;
			case 160:
				return $this->getGuardianMiddleName();
				break;
			case 161:
				return $this->getGuardianNickname();
				break;
			case 162:
				return $this->getGuardianPagerEmail();
				break;
			case 163:
				return $this->getGuardianSecondaryEmail();
				break;
			case 164:
				return $this->getGuardianSuffix();
				break;
			case 165:
				return $this->getGuardianTitle();
				break;
			case 166:
				return $this->getGuardianVeteran();
				break;
			case 167:
				return $this->getPassGender();
				break;
			case 168:
				return $this->getPassMiddleName();
				break;
			case 169:
				return $this->getPassNickname();
				break;
			case 170:
				return $this->getPassPagerEmail();
				break;
			case 171:
				return $this->getPassSecondaryEmail();
				break;
			case 172:
				return $this->getPassSuffix();
				break;
			case 173:
				return $this->getPassVeteran();
				break;
			case 174:
				return $this->getReqMiddleName();
				break;
			case 175:
				return $this->getReqNickname();
				break;
			case 176:
				return $this->getReqPagerEmail();
				break;
			case 177:
				return $this->getReqSecondaryEmail();
				break;
			case 178:
				return $this->getReqSuffix();
				break;
			case 179:
				return $this->getReqVeteran();
				break;
			case 180:
				return $this->getLodgingPhoneComment();
				break;
			case 181:
				return $this->getReqGender();
				break;
			case 182:
				return $this->getGuardianGender();
				break;
			case 183:
				return $this->getAgencyPosition();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = MissionRequestTempPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getId(),
			$keys[1] => $this->getRequestDate(),
			$keys[2] => $this->getRequestBy(),
			$keys[3] => $this->getRequestOnBehalf(),
			$keys[4] => $this->getApptDate(),
			$keys[5] => $this->getReturnDate(),
			$keys[6] => $this->getBaggageWeight(),
			$keys[7] => $this->getBaggageDesc(),
			$keys[8] => $this->getPassTitle(),
			$keys[9] => $this->getPassFirstName(),
			$keys[10] => $this->getPassLastName(),
			$keys[11] => $this->getPassAddress1(),
			$keys[12] => $this->getPassAddress2(),
			$keys[13] => $this->getPassCity(),
			$keys[14] => $this->getPassCounty(),
			$keys[15] => $this->getPassState(),
			$keys[16] => $this->getPassCountry(),
			$keys[17] => $this->getPassZipcode(),
			$keys[18] => $this->getPassDayPhone(),
			$keys[19] => $this->getPassDayComment(),
			$keys[20] => $this->getPassEvePhone(),
			$keys[21] => $this->getPassEveComment(),
			$keys[22] => $this->getPassMobilePhone(),
			$keys[23] => $this->getPassMobileComment(),
			$keys[24] => $this->getPassPagerPhone(),
			$keys[25] => $this->getPassPagerComment(),
			$keys[26] => $this->getPassOtherPhone(),
			$keys[27] => $this->getPassOtherComment(),
			$keys[28] => $this->getPassEmail(),
			$keys[29] => $this->getPassDateOfBirth(),
			$keys[30] => $this->getIllness(),
			$keys[31] => $this->getFinancial(),
			$keys[32] => $this->getPassWeight(),
			$keys[33] => $this->getReleasingPhysician(),
			$keys[34] => $this->getReleasePhone(),
			$keys[35] => $this->getReleasePhoneComment(),
			$keys[36] => $this->getReleaseFax(),
			$keys[37] => $this->getReleaseFaxComment(),
			$keys[38] => $this->getReleaseEmail(),
			$keys[39] => $this->getTreatingPhysician(),
			$keys[40] => $this->getTreatingPhone(),
			$keys[41] => $this->getTreatingPhoneComment(),
			$keys[42] => $this->getTreatingFax(),
			$keys[43] => $this->getTreatingFaxComment(),
			$keys[44] => $this->getReqTitle(),
			$keys[45] => $this->getReqFirstName(),
			$keys[46] => $this->getReqLastName(),
			$keys[47] => $this->getAgencyName(),
			$keys[48] => $this->getReqAddress1(),
			$keys[49] => $this->getReqAddress2(),
			$keys[50] => $this->getReqCity(),
			$keys[51] => $this->getReqCounty(),
			$keys[52] => $this->getReqState(),
			$keys[53] => $this->getReqCountry(),
			$keys[54] => $this->getReqZipcode(),
			$keys[55] => $this->getReqDayPhone(),
			$keys[56] => $this->getReqDayComment(),
			$keys[57] => $this->getReqEvePhone(),
			$keys[58] => $this->getReqEveComment(),
			$keys[59] => $this->getReqMobilePhone(),
			$keys[60] => $this->getReqMobileComment(),
			$keys[61] => $this->getReqPagerPhone(),
			$keys[62] => $this->getReqPagerComment(),
			$keys[63] => $this->getReqOtherPhone(),
			$keys[64] => $this->getReqOtherComment(),
			$keys[65] => $this->getReqEmail(),
			$keys[66] => $this->getOriginIdent(),
			$keys[67] => $this->getOriginId(),
			$keys[68] => $this->getOriginCity(),
			$keys[69] => $this->getOriginState(),
			$keys[70] => $this->getOriginZipcode(),
			$keys[71] => $this->getDestIdent(),
			$keys[72] => $this->getDestId(),
			$keys[73] => $this->getDestCity(),
			$keys[74] => $this->getDestState(),
			$keys[75] => $this->getDestZipcode(),
			$keys[76] => $this->getCom1Name(),
			$keys[77] => $this->getCom1Relationship(),
			$keys[78] => $this->getCom1DateOfBirth(),
			$keys[79] => $this->getCom1Weight(),
			$keys[80] => $this->getCom1Phone(),
			$keys[81] => $this->getCom1Comment(),
			$keys[82] => $this->getCom2Name(),
			$keys[83] => $this->getCom2Relationship(),
			$keys[84] => $this->getCom2DateOfBirth(),
			$keys[85] => $this->getCom2Weight(),
			$keys[86] => $this->getCom2Phone(),
			$keys[87] => $this->getCom2Comment(),
			$keys[88] => $this->getCom3Name(),
			$keys[89] => $this->getCom3Relationship(),
			$keys[90] => $this->getCom3DateOfBirth(),
			$keys[91] => $this->getCom3Weight(),
			$keys[92] => $this->getCom3Phone(),
			$keys[93] => $this->getCom3Comment(),
			$keys[94] => $this->getCom4Name(),
			$keys[95] => $this->getCom4Relationship(),
			$keys[96] => $this->getCom4DateOfBirth(),
			$keys[97] => $this->getCom4Weight(),
			$keys[98] => $this->getCom4Phone(),
			$keys[99] => $this->getCom4Comment(),
			$keys[100] => $this->getLodgingName(),
			$keys[101] => $this->getLodgingPhone(),
			$keys[102] => $this->getFacilityName(),
			$keys[103] => $this->getFacilityPhone(),
			$keys[104] => $this->getFacilityPhoneComment(),
			$keys[105] => $this->getReqLanguageSpoken(),
			$keys[106] => $this->getBestContact(),
			$keys[107] => $this->getEmergencyName(),
			$keys[108] => $this->getEmergencyPhone1(),
			$keys[109] => $this->getEmergencyPhone2(),
			$keys[110] => $this->getEmergencyPhone1Comment(),
			$keys[111] => $this->getEmergencyPhone2Comment(),
			$keys[112] => $this->getComment(),
			$keys[113] => $this->getProcessedDate(),
			$keys[114] => $this->getSessionId(),
			$keys[115] => $this->getIpAddress(),
			$keys[116] => $this->getPassFaxPhone1(),
			$keys[117] => $this->getPassFaxComment1(),
			$keys[118] => $this->getGuarFirstName(),
			$keys[119] => $this->getGuarLastName(),
			$keys[120] => $this->getGuarAddress1(),
			$keys[121] => $this->getGuarAddress2(),
			$keys[122] => $this->getGuarCity(),
			$keys[123] => $this->getGuarState(),
			$keys[124] => $this->getGuarZipcode(),
			$keys[125] => $this->getGuarDayPhone(),
			$keys[126] => $this->getGuarDayComment(),
			$keys[127] => $this->getGuarEvePhone(),
			$keys[128] => $this->getGuarEveComment(),
			$keys[129] => $this->getGuarFaxPhone1(),
			$keys[130] => $this->getGuarFaxComment1(),
			$keys[131] => $this->getGuarMobilePhone(),
			$keys[132] => $this->getGuarMobileComment(),
			$keys[133] => $this->getGuarPagerPhone(),
			$keys[134] => $this->getGuarPagerComment(),
			$keys[135] => $this->getGuarOtherPhone(),
			$keys[136] => $this->getGuarOtherComment(),
			$keys[137] => $this->getGuarGuarEmail(),
			$keys[138] => $this->getReqFaxPhone1(),
			$keys[139] => $this->getReqFaxComment1(),
			$keys[140] => $this->getPassEnglish(),
			$keys[141] => $this->getPassLanguage(),
			$keys[142] => $this->getApptTime(),
			$keys[143] => $this->getRequesterId(),
			$keys[144] => $this->getPassengerId(),
			$keys[145] => $this->getMissionId(),
			$keys[146] => $this->getTreatingEmail(),
			$keys[147] => $this->getPassHeight(),
			$keys[148] => $this->getReturnTime(),
			$keys[149] => $this->getPassOxygen(),
			$keys[150] => $this->getPassMedical(),
			$keys[151] => $this->getReferralSourceId(),
			$keys[152] => $this->getFollowUpContactName(),
			$keys[153] => $this->getFollowUpContactPhone(),
			$keys[154] => $this->getFollowUpEmail(),
			$keys[155] => $this->getMissReqOriginatorAfaOrgId(),
			$keys[156] => $this->getAfaOrgId(),
			$keys[157] => $this->getAfaOrgMissionId(),
			$keys[158] => $this->getMissionRequestType(),
			$keys[159] => $this->getLastPageProcessed(),
			$keys[160] => $this->getGuardianMiddleName(),
			$keys[161] => $this->getGuardianNickname(),
			$keys[162] => $this->getGuardianPagerEmail(),
			$keys[163] => $this->getGuardianSecondaryEmail(),
			$keys[164] => $this->getGuardianSuffix(),
			$keys[165] => $this->getGuardianTitle(),
			$keys[166] => $this->getGuardianVeteran(),
			$keys[167] => $this->getPassGender(),
			$keys[168] => $this->getPassMiddleName(),
			$keys[169] => $this->getPassNickname(),
			$keys[170] => $this->getPassPagerEmail(),
			$keys[171] => $this->getPassSecondaryEmail(),
			$keys[172] => $this->getPassSuffix(),
			$keys[173] => $this->getPassVeteran(),
			$keys[174] => $this->getReqMiddleName(),
			$keys[175] => $this->getReqNickname(),
			$keys[176] => $this->getReqPagerEmail(),
			$keys[177] => $this->getReqSecondaryEmail(),
			$keys[178] => $this->getReqSuffix(),
			$keys[179] => $this->getReqVeteran(),
			$keys[180] => $this->getLodgingPhoneComment(),
			$keys[181] => $this->getReqGender(),
			$keys[182] => $this->getGuardianGender(),
			$keys[183] => $this->getAgencyPosition(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = MissionRequestTempPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setId($value);
				break;
			case 1:
				$this->setRequestDate($value);
				break;
			case 2:
				$this->setRequestBy($value);
				break;
			case 3:
				$this->setRequestOnBehalf($value);
				break;
			case 4:
				$this->setApptDate($value);
				break;
			case 5:
				$this->setReturnDate($value);
				break;
			case 6:
				$this->setBaggageWeight($value);
				break;
			case 7:
				$this->setBaggageDesc($value);
				break;
			case 8:
				$this->setPassTitle($value);
				break;
			case 9:
				$this->setPassFirstName($value);
				break;
			case 10:
				$this->setPassLastName($value);
				break;
			case 11:
				$this->setPassAddress1($value);
				break;
			case 12:
				$this->setPassAddress2($value);
				break;
			case 13:
				$this->setPassCity($value);
				break;
			case 14:
				$this->setPassCounty($value);
				break;
			case 15:
				$this->setPassState($value);
				break;
			case 16:
				$this->setPassCountry($value);
				break;
			case 17:
				$this->setPassZipcode($value);
				break;
			case 18:
				$this->setPassDayPhone($value);
				break;
			case 19:
				$this->setPassDayComment($value);
				break;
			case 20:
				$this->setPassEvePhone($value);
				break;
			case 21:
				$this->setPassEveComment($value);
				break;
			case 22:
				$this->setPassMobilePhone($value);
				break;
			case 23:
				$this->setPassMobileComment($value);
				break;
			case 24:
				$this->setPassPagerPhone($value);
				break;
			case 25:
				$this->setPassPagerComment($value);
				break;
			case 26:
				$this->setPassOtherPhone($value);
				break;
			case 27:
				$this->setPassOtherComment($value);
				break;
			case 28:
				$this->setPassEmail($value);
				break;
			case 29:
				$this->setPassDateOfBirth($value);
				break;
			case 30:
				$this->setIllness($value);
				break;
			case 31:
				$this->setFinancial($value);
				break;
			case 32:
				$this->setPassWeight($value);
				break;
			case 33:
				$this->setReleasingPhysician($value);
				break;
			case 34:
				$this->setReleasePhone($value);
				break;
			case 35:
				$this->setReleasePhoneComment($value);
				break;
			case 36:
				$this->setReleaseFax($value);
				break;
			case 37:
				$this->setReleaseFaxComment($value);
				break;
			case 38:
				$this->setReleaseEmail($value);
				break;
			case 39:
				$this->setTreatingPhysician($value);
				break;
			case 40:
				$this->setTreatingPhone($value);
				break;
			case 41:
				$this->setTreatingPhoneComment($value);
				break;
			case 42:
				$this->setTreatingFax($value);
				break;
			case 43:
				$this->setTreatingFaxComment($value);
				break;
			case 44:
				$this->setReqTitle($value);
				break;
			case 45:
				$this->setReqFirstName($value);
				break;
			case 46:
				$this->setReqLastName($value);
				break;
			case 47:
				$this->setAgencyName($value);
				break;
			case 48:
				$this->setReqAddress1($value);
				break;
			case 49:
				$this->setReqAddress2($value);
				break;
			case 50:
				$this->setReqCity($value);
				break;
			case 51:
				$this->setReqCounty($value);
				break;
			case 52:
				$this->setReqState($value);
				break;
			case 53:
				$this->setReqCountry($value);
				break;
			case 54:
				$this->setReqZipcode($value);
				break;
			case 55:
				$this->setReqDayPhone($value);
				break;
			case 56:
				$this->setReqDayComment($value);
				break;
			case 57:
				$this->setReqEvePhone($value);
				break;
			case 58:
				$this->setReqEveComment($value);
				break;
			case 59:
				$this->setReqMobilePhone($value);
				break;
			case 60:
				$this->setReqMobileComment($value);
				break;
			case 61:
				$this->setReqPagerPhone($value);
				break;
			case 62:
				$this->setReqPagerComment($value);
				break;
			case 63:
				$this->setReqOtherPhone($value);
				break;
			case 64:
				$this->setReqOtherComment($value);
				break;
			case 65:
				$this->setReqEmail($value);
				break;
			case 66:
				$this->setOriginIdent($value);
				break;
			case 67:
				$this->setOriginId($value);
				break;
			case 68:
				$this->setOriginCity($value);
				break;
			case 69:
				$this->setOriginState($value);
				break;
			case 70:
				$this->setOriginZipcode($value);
				break;
			case 71:
				$this->setDestIdent($value);
				break;
			case 72:
				$this->setDestId($value);
				break;
			case 73:
				$this->setDestCity($value);
				break;
			case 74:
				$this->setDestState($value);
				break;
			case 75:
				$this->setDestZipcode($value);
				break;
			case 76:
				$this->setCom1Name($value);
				break;
			case 77:
				$this->setCom1Relationship($value);
				break;
			case 78:
				$this->setCom1DateOfBirth($value);
				break;
			case 79:
				$this->setCom1Weight($value);
				break;
			case 80:
				$this->setCom1Phone($value);
				break;
			case 81:
				$this->setCom1Comment($value);
				break;
			case 82:
				$this->setCom2Name($value);
				break;
			case 83:
				$this->setCom2Relationship($value);
				break;
			case 84:
				$this->setCom2DateOfBirth($value);
				break;
			case 85:
				$this->setCom2Weight($value);
				break;
			case 86:
				$this->setCom2Phone($value);
				break;
			case 87:
				$this->setCom2Comment($value);
				break;
			case 88:
				$this->setCom3Name($value);
				break;
			case 89:
				$this->setCom3Relationship($value);
				break;
			case 90:
				$this->setCom3DateOfBirth($value);
				break;
			case 91:
				$this->setCom3Weight($value);
				break;
			case 92:
				$this->setCom3Phone($value);
				break;
			case 93:
				$this->setCom3Comment($value);
				break;
			case 94:
				$this->setCom4Name($value);
				break;
			case 95:
				$this->setCom4Relationship($value);
				break;
			case 96:
				$this->setCom4DateOfBirth($value);
				break;
			case 97:
				$this->setCom4Weight($value);
				break;
			case 98:
				$this->setCom4Phone($value);
				break;
			case 99:
				$this->setCom4Comment($value);
				break;
			case 100:
				$this->setLodgingName($value);
				break;
			case 101:
				$this->setLodgingPhone($value);
				break;
			case 102:
				$this->setFacilityName($value);
				break;
			case 103:
				$this->setFacilityPhone($value);
				break;
			case 104:
				$this->setFacilityPhoneComment($value);
				break;
			case 105:
				$this->setReqLanguageSpoken($value);
				break;
			case 106:
				$this->setBestContact($value);
				break;
			case 107:
				$this->setEmergencyName($value);
				break;
			case 108:
				$this->setEmergencyPhone1($value);
				break;
			case 109:
				$this->setEmergencyPhone2($value);
				break;
			case 110:
				$this->setEmergencyPhone1Comment($value);
				break;
			case 111:
				$this->setEmergencyPhone2Comment($value);
				break;
			case 112:
				$this->setComment($value);
				break;
			case 113:
				$this->setProcessedDate($value);
				break;
			case 114:
				$this->setSessionId($value);
				break;
			case 115:
				$this->setIpAddress($value);
				break;
			case 116:
				$this->setPassFaxPhone1($value);
				break;
			case 117:
				$this->setPassFaxComment1($value);
				break;
			case 118:
				$this->setGuarFirstName($value);
				break;
			case 119:
				$this->setGuarLastName($value);
				break;
			case 120:
				$this->setGuarAddress1($value);
				break;
			case 121:
				$this->setGuarAddress2($value);
				break;
			case 122:
				$this->setGuarCity($value);
				break;
			case 123:
				$this->setGuarState($value);
				break;
			case 124:
				$this->setGuarZipcode($value);
				break;
			case 125:
				$this->setGuarDayPhone($value);
				break;
			case 126:
				$this->setGuarDayComment($value);
				break;
			case 127:
				$this->setGuarEvePhone($value);
				break;
			case 128:
				$this->setGuarEveComment($value);
				break;
			case 129:
				$this->setGuarFaxPhone1($value);
				break;
			case 130:
				$this->setGuarFaxComment1($value);
				break;
			case 131:
				$this->setGuarMobilePhone($value);
				break;
			case 132:
				$this->setGuarMobileComment($value);
				break;
			case 133:
				$this->setGuarPagerPhone($value);
				break;
			case 134:
				$this->setGuarPagerComment($value);
				break;
			case 135:
				$this->setGuarOtherPhone($value);
				break;
			case 136:
				$this->setGuarOtherComment($value);
				break;
			case 137:
				$this->setGuarGuarEmail($value);
				break;
			case 138:
				$this->setReqFaxPhone1($value);
				break;
			case 139:
				$this->setReqFaxComment1($value);
				break;
			case 140:
				$this->setPassEnglish($value);
				break;
			case 141:
				$this->setPassLanguage($value);
				break;
			case 142:
				$this->setApptTime($value);
				break;
			case 143:
				$this->setRequesterId($value);
				break;
			case 144:
				$this->setPassengerId($value);
				break;
			case 145:
				$this->setMissionId($value);
				break;
			case 146:
				$this->setTreatingEmail($value);
				break;
			case 147:
				$this->setPassHeight($value);
				break;
			case 148:
				$this->setReturnTime($value);
				break;
			case 149:
				$this->setPassOxygen($value);
				break;
			case 150:
				$this->setPassMedical($value);
				break;
			case 151:
				$this->setReferralSourceId($value);
				break;
			case 152:
				$this->setFollowUpContactName($value);
				break;
			case 153:
				$this->setFollowUpContactPhone($value);
				break;
			case 154:
				$this->setFollowUpEmail($value);
				break;
			case 155:
				$this->setMissReqOriginatorAfaOrgId($value);
				break;
			case 156:
				$this->setAfaOrgId($value);
				break;
			case 157:
				$this->setAfaOrgMissionId($value);
				break;
			case 158:
				$this->setMissionRequestType($value);
				break;
			case 159:
				$this->setLastPageProcessed($value);
				break;
			case 160:
				$this->setGuardianMiddleName($value);
				break;
			case 161:
				$this->setGuardianNickname($value);
				break;
			case 162:
				$this->setGuardianPagerEmail($value);
				break;
			case 163:
				$this->setGuardianSecondaryEmail($value);
				break;
			case 164:
				$this->setGuardianSuffix($value);
				break;
			case 165:
				$this->setGuardianTitle($value);
				break;
			case 166:
				$this->setGuardianVeteran($value);
				break;
			case 167:
				$this->setPassGender($value);
				break;
			case 168:
				$this->setPassMiddleName($value);
				break;
			case 169:
				$this->setPassNickname($value);
				break;
			case 170:
				$this->setPassPagerEmail($value);
				break;
			case 171:
				$this->setPassSecondaryEmail($value);
				break;
			case 172:
				$this->setPassSuffix($value);
				break;
			case 173:
				$this->setPassVeteran($value);
				break;
			case 174:
				$this->setReqMiddleName($value);
				break;
			case 175:
				$this->setReqNickname($value);
				break;
			case 176:
				$this->setReqPagerEmail($value);
				break;
			case 177:
				$this->setReqSecondaryEmail($value);
				break;
			case 178:
				$this->setReqSuffix($value);
				break;
			case 179:
				$this->setReqVeteran($value);
				break;
			case 180:
				$this->setLodgingPhoneComment($value);
				break;
			case 181:
				$this->setReqGender($value);
				break;
			case 182:
				$this->setGuardianGender($value);
				break;
			case 183:
				$this->setAgencyPosition($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = MissionRequestTempPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setId($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setRequestDate($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setRequestBy($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setRequestOnBehalf($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setApptDate($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setReturnDate($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setBaggageWeight($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setBaggageDesc($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setPassTitle($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setPassFirstName($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setPassLastName($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setPassAddress1($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setPassAddress2($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setPassCity($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setPassCounty($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setPassState($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setPassCountry($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setPassZipcode($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setPassDayPhone($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setPassDayComment($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setPassEvePhone($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setPassEveComment($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setPassMobilePhone($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setPassMobileComment($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setPassPagerPhone($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setPassPagerComment($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setPassOtherPhone($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setPassOtherComment($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setPassEmail($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setPassDateOfBirth($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setIllness($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setFinancial($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setPassWeight($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setReleasingPhysician($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setReleasePhone($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setReleasePhoneComment($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setReleaseFax($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setReleaseFaxComment($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setReleaseEmail($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setTreatingPhysician($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setTreatingPhone($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setTreatingPhoneComment($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setTreatingFax($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setTreatingFaxComment($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setReqTitle($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setReqFirstName($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setReqLastName($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setAgencyName($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setReqAddress1($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setReqAddress2($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setReqCity($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setReqCounty($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setReqState($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setReqCountry($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setReqZipcode($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setReqDayPhone($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setReqDayComment($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setReqEvePhone($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setReqEveComment($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setReqMobilePhone($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setReqMobileComment($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setReqPagerPhone($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setReqPagerComment($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setReqOtherPhone($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setReqOtherComment($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setReqEmail($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setOriginIdent($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setOriginId($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setOriginCity($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setOriginState($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setOriginZipcode($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setDestIdent($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setDestId($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setDestCity($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setDestState($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setDestZipcode($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setCom1Name($arr[$keys[76]]);
		if (array_key_exists($keys[77], $arr)) $this->setCom1Relationship($arr[$keys[77]]);
		if (array_key_exists($keys[78], $arr)) $this->setCom1DateOfBirth($arr[$keys[78]]);
		if (array_key_exists($keys[79], $arr)) $this->setCom1Weight($arr[$keys[79]]);
		if (array_key_exists($keys[80], $arr)) $this->setCom1Phone($arr[$keys[80]]);
		if (array_key_exists($keys[81], $arr)) $this->setCom1Comment($arr[$keys[81]]);
		if (array_key_exists($keys[82], $arr)) $this->setCom2Name($arr[$keys[82]]);
		if (array_key_exists($keys[83], $arr)) $this->setCom2Relationship($arr[$keys[83]]);
		if (array_key_exists($keys[84], $arr)) $this->setCom2DateOfBirth($arr[$keys[84]]);
		if (array_key_exists($keys[85], $arr)) $this->setCom2Weight($arr[$keys[85]]);
		if (array_key_exists($keys[86], $arr)) $this->setCom2Phone($arr[$keys[86]]);
		if (array_key_exists($keys[87], $arr)) $this->setCom2Comment($arr[$keys[87]]);
		if (array_key_exists($keys[88], $arr)) $this->setCom3Name($arr[$keys[88]]);
		if (array_key_exists($keys[89], $arr)) $this->setCom3Relationship($arr[$keys[89]]);
		if (array_key_exists($keys[90], $arr)) $this->setCom3DateOfBirth($arr[$keys[90]]);
		if (array_key_exists($keys[91], $arr)) $this->setCom3Weight($arr[$keys[91]]);
		if (array_key_exists($keys[92], $arr)) $this->setCom3Phone($arr[$keys[92]]);
		if (array_key_exists($keys[93], $arr)) $this->setCom3Comment($arr[$keys[93]]);
		if (array_key_exists($keys[94], $arr)) $this->setCom4Name($arr[$keys[94]]);
		if (array_key_exists($keys[95], $arr)) $this->setCom4Relationship($arr[$keys[95]]);
		if (array_key_exists($keys[96], $arr)) $this->setCom4DateOfBirth($arr[$keys[96]]);
		if (array_key_exists($keys[97], $arr)) $this->setCom4Weight($arr[$keys[97]]);
		if (array_key_exists($keys[98], $arr)) $this->setCom4Phone($arr[$keys[98]]);
		if (array_key_exists($keys[99], $arr)) $this->setCom4Comment($arr[$keys[99]]);
		if (array_key_exists($keys[100], $arr)) $this->setLodgingName($arr[$keys[100]]);
		if (array_key_exists($keys[101], $arr)) $this->setLodgingPhone($arr[$keys[101]]);
		if (array_key_exists($keys[102], $arr)) $this->setFacilityName($arr[$keys[102]]);
		if (array_key_exists($keys[103], $arr)) $this->setFacilityPhone($arr[$keys[103]]);
		if (array_key_exists($keys[104], $arr)) $this->setFacilityPhoneComment($arr[$keys[104]]);
		if (array_key_exists($keys[105], $arr)) $this->setReqLanguageSpoken($arr[$keys[105]]);
		if (array_key_exists($keys[106], $arr)) $this->setBestContact($arr[$keys[106]]);
		if (array_key_exists($keys[107], $arr)) $this->setEmergencyName($arr[$keys[107]]);
		if (array_key_exists($keys[108], $arr)) $this->setEmergencyPhone1($arr[$keys[108]]);
		if (array_key_exists($keys[109], $arr)) $this->setEmergencyPhone2($arr[$keys[109]]);
		if (array_key_exists($keys[110], $arr)) $this->setEmergencyPhone1Comment($arr[$keys[110]]);
		if (array_key_exists($keys[111], $arr)) $this->setEmergencyPhone2Comment($arr[$keys[111]]);
		if (array_key_exists($keys[112], $arr)) $this->setComment($arr[$keys[112]]);
		if (array_key_exists($keys[113], $arr)) $this->setProcessedDate($arr[$keys[113]]);
		if (array_key_exists($keys[114], $arr)) $this->setSessionId($arr[$keys[114]]);
		if (array_key_exists($keys[115], $arr)) $this->setIpAddress($arr[$keys[115]]);
		if (array_key_exists($keys[116], $arr)) $this->setPassFaxPhone1($arr[$keys[116]]);
		if (array_key_exists($keys[117], $arr)) $this->setPassFaxComment1($arr[$keys[117]]);
		if (array_key_exists($keys[118], $arr)) $this->setGuarFirstName($arr[$keys[118]]);
		if (array_key_exists($keys[119], $arr)) $this->setGuarLastName($arr[$keys[119]]);
		if (array_key_exists($keys[120], $arr)) $this->setGuarAddress1($arr[$keys[120]]);
		if (array_key_exists($keys[121], $arr)) $this->setGuarAddress2($arr[$keys[121]]);
		if (array_key_exists($keys[122], $arr)) $this->setGuarCity($arr[$keys[122]]);
		if (array_key_exists($keys[123], $arr)) $this->setGuarState($arr[$keys[123]]);
		if (array_key_exists($keys[124], $arr)) $this->setGuarZipcode($arr[$keys[124]]);
		if (array_key_exists($keys[125], $arr)) $this->setGuarDayPhone($arr[$keys[125]]);
		if (array_key_exists($keys[126], $arr)) $this->setGuarDayComment($arr[$keys[126]]);
		if (array_key_exists($keys[127], $arr)) $this->setGuarEvePhone($arr[$keys[127]]);
		if (array_key_exists($keys[128], $arr)) $this->setGuarEveComment($arr[$keys[128]]);
		if (array_key_exists($keys[129], $arr)) $this->setGuarFaxPhone1($arr[$keys[129]]);
		if (array_key_exists($keys[130], $arr)) $this->setGuarFaxComment1($arr[$keys[130]]);
		if (array_key_exists($keys[131], $arr)) $this->setGuarMobilePhone($arr[$keys[131]]);
		if (array_key_exists($keys[132], $arr)) $this->setGuarMobileComment($arr[$keys[132]]);
		if (array_key_exists($keys[133], $arr)) $this->setGuarPagerPhone($arr[$keys[133]]);
		if (array_key_exists($keys[134], $arr)) $this->setGuarPagerComment($arr[$keys[134]]);
		if (array_key_exists($keys[135], $arr)) $this->setGuarOtherPhone($arr[$keys[135]]);
		if (array_key_exists($keys[136], $arr)) $this->setGuarOtherComment($arr[$keys[136]]);
		if (array_key_exists($keys[137], $arr)) $this->setGuarGuarEmail($arr[$keys[137]]);
		if (array_key_exists($keys[138], $arr)) $this->setReqFaxPhone1($arr[$keys[138]]);
		if (array_key_exists($keys[139], $arr)) $this->setReqFaxComment1($arr[$keys[139]]);
		if (array_key_exists($keys[140], $arr)) $this->setPassEnglish($arr[$keys[140]]);
		if (array_key_exists($keys[141], $arr)) $this->setPassLanguage($arr[$keys[141]]);
		if (array_key_exists($keys[142], $arr)) $this->setApptTime($arr[$keys[142]]);
		if (array_key_exists($keys[143], $arr)) $this->setRequesterId($arr[$keys[143]]);
		if (array_key_exists($keys[144], $arr)) $this->setPassengerId($arr[$keys[144]]);
		if (array_key_exists($keys[145], $arr)) $this->setMissionId($arr[$keys[145]]);
		if (array_key_exists($keys[146], $arr)) $this->setTreatingEmail($arr[$keys[146]]);
		if (array_key_exists($keys[147], $arr)) $this->setPassHeight($arr[$keys[147]]);
		if (array_key_exists($keys[148], $arr)) $this->setReturnTime($arr[$keys[148]]);
		if (array_key_exists($keys[149], $arr)) $this->setPassOxygen($arr[$keys[149]]);
		if (array_key_exists($keys[150], $arr)) $this->setPassMedical($arr[$keys[150]]);
		if (array_key_exists($keys[151], $arr)) $this->setReferralSourceId($arr[$keys[151]]);
		if (array_key_exists($keys[152], $arr)) $this->setFollowUpContactName($arr[$keys[152]]);
		if (array_key_exists($keys[153], $arr)) $this->setFollowUpContactPhone($arr[$keys[153]]);
		if (array_key_exists($keys[154], $arr)) $this->setFollowUpEmail($arr[$keys[154]]);
		if (array_key_exists($keys[155], $arr)) $this->setMissReqOriginatorAfaOrgId($arr[$keys[155]]);
		if (array_key_exists($keys[156], $arr)) $this->setAfaOrgId($arr[$keys[156]]);
		if (array_key_exists($keys[157], $arr)) $this->setAfaOrgMissionId($arr[$keys[157]]);
		if (array_key_exists($keys[158], $arr)) $this->setMissionRequestType($arr[$keys[158]]);
		if (array_key_exists($keys[159], $arr)) $this->setLastPageProcessed($arr[$keys[159]]);
		if (array_key_exists($keys[160], $arr)) $this->setGuardianMiddleName($arr[$keys[160]]);
		if (array_key_exists($keys[161], $arr)) $this->setGuardianNickname($arr[$keys[161]]);
		if (array_key_exists($keys[162], $arr)) $this->setGuardianPagerEmail($arr[$keys[162]]);
		if (array_key_exists($keys[163], $arr)) $this->setGuardianSecondaryEmail($arr[$keys[163]]);
		if (array_key_exists($keys[164], $arr)) $this->setGuardianSuffix($arr[$keys[164]]);
		if (array_key_exists($keys[165], $arr)) $this->setGuardianTitle($arr[$keys[165]]);
		if (array_key_exists($keys[166], $arr)) $this->setGuardianVeteran($arr[$keys[166]]);
		if (array_key_exists($keys[167], $arr)) $this->setPassGender($arr[$keys[167]]);
		if (array_key_exists($keys[168], $arr)) $this->setPassMiddleName($arr[$keys[168]]);
		if (array_key_exists($keys[169], $arr)) $this->setPassNickname($arr[$keys[169]]);
		if (array_key_exists($keys[170], $arr)) $this->setPassPagerEmail($arr[$keys[170]]);
		if (array_key_exists($keys[171], $arr)) $this->setPassSecondaryEmail($arr[$keys[171]]);
		if (array_key_exists($keys[172], $arr)) $this->setPassSuffix($arr[$keys[172]]);
		if (array_key_exists($keys[173], $arr)) $this->setPassVeteran($arr[$keys[173]]);
		if (array_key_exists($keys[174], $arr)) $this->setReqMiddleName($arr[$keys[174]]);
		if (array_key_exists($keys[175], $arr)) $this->setReqNickname($arr[$keys[175]]);
		if (array_key_exists($keys[176], $arr)) $this->setReqPagerEmail($arr[$keys[176]]);
		if (array_key_exists($keys[177], $arr)) $this->setReqSecondaryEmail($arr[$keys[177]]);
		if (array_key_exists($keys[178], $arr)) $this->setReqSuffix($arr[$keys[178]]);
		if (array_key_exists($keys[179], $arr)) $this->setReqVeteran($arr[$keys[179]]);
		if (array_key_exists($keys[180], $arr)) $this->setLodgingPhoneComment($arr[$keys[180]]);
		if (array_key_exists($keys[181], $arr)) $this->setReqGender($arr[$keys[181]]);
		if (array_key_exists($keys[182], $arr)) $this->setGuardianGender($arr[$keys[182]]);
		if (array_key_exists($keys[183], $arr)) $this->setAgencyPosition($arr[$keys[183]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(MissionRequestTempPeer::DATABASE_NAME);

		if ($this->isColumnModified(MissionRequestTempPeer::ID)) $criteria->add(MissionRequestTempPeer::ID, $this->id);
		if ($this->isColumnModified(MissionRequestTempPeer::REQUEST_DATE)) $criteria->add(MissionRequestTempPeer::REQUEST_DATE, $this->request_date);
		if ($this->isColumnModified(MissionRequestTempPeer::REQUEST_BY)) $criteria->add(MissionRequestTempPeer::REQUEST_BY, $this->request_by);
		if ($this->isColumnModified(MissionRequestTempPeer::REQUEST_ON_BEHALF)) $criteria->add(MissionRequestTempPeer::REQUEST_ON_BEHALF, $this->request_on_behalf);
		if ($this->isColumnModified(MissionRequestTempPeer::APPT_DATE)) $criteria->add(MissionRequestTempPeer::APPT_DATE, $this->appt_date);
		if ($this->isColumnModified(MissionRequestTempPeer::RETURN_DATE)) $criteria->add(MissionRequestTempPeer::RETURN_DATE, $this->return_date);
		if ($this->isColumnModified(MissionRequestTempPeer::BAGGAGE_WEIGHT)) $criteria->add(MissionRequestTempPeer::BAGGAGE_WEIGHT, $this->baggage_weight);
		if ($this->isColumnModified(MissionRequestTempPeer::BAGGAGE_DESC)) $criteria->add(MissionRequestTempPeer::BAGGAGE_DESC, $this->baggage_desc);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_TITLE)) $criteria->add(MissionRequestTempPeer::PASS_TITLE, $this->pass_title);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_FIRST_NAME)) $criteria->add(MissionRequestTempPeer::PASS_FIRST_NAME, $this->pass_first_name);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_LAST_NAME)) $criteria->add(MissionRequestTempPeer::PASS_LAST_NAME, $this->pass_last_name);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_ADDRESS1)) $criteria->add(MissionRequestTempPeer::PASS_ADDRESS1, $this->pass_address1);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_ADDRESS2)) $criteria->add(MissionRequestTempPeer::PASS_ADDRESS2, $this->pass_address2);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_CITY)) $criteria->add(MissionRequestTempPeer::PASS_CITY, $this->pass_city);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_COUNTY)) $criteria->add(MissionRequestTempPeer::PASS_COUNTY, $this->pass_county);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_STATE)) $criteria->add(MissionRequestTempPeer::PASS_STATE, $this->pass_state);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_COUNTRY)) $criteria->add(MissionRequestTempPeer::PASS_COUNTRY, $this->pass_country);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_ZIPCODE)) $criteria->add(MissionRequestTempPeer::PASS_ZIPCODE, $this->pass_zipcode);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_DAY_PHONE)) $criteria->add(MissionRequestTempPeer::PASS_DAY_PHONE, $this->pass_day_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_DAY_COMMENT)) $criteria->add(MissionRequestTempPeer::PASS_DAY_COMMENT, $this->pass_day_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_EVE_PHONE)) $criteria->add(MissionRequestTempPeer::PASS_EVE_PHONE, $this->pass_eve_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_EVE_COMMENT)) $criteria->add(MissionRequestTempPeer::PASS_EVE_COMMENT, $this->pass_eve_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_MOBILE_PHONE)) $criteria->add(MissionRequestTempPeer::PASS_MOBILE_PHONE, $this->pass_mobile_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_MOBILE_COMMENT)) $criteria->add(MissionRequestTempPeer::PASS_MOBILE_COMMENT, $this->pass_mobile_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_PAGER_PHONE)) $criteria->add(MissionRequestTempPeer::PASS_PAGER_PHONE, $this->pass_pager_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_PAGER_COMMENT)) $criteria->add(MissionRequestTempPeer::PASS_PAGER_COMMENT, $this->pass_pager_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_OTHER_PHONE)) $criteria->add(MissionRequestTempPeer::PASS_OTHER_PHONE, $this->pass_other_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_OTHER_COMMENT)) $criteria->add(MissionRequestTempPeer::PASS_OTHER_COMMENT, $this->pass_other_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_EMAIL)) $criteria->add(MissionRequestTempPeer::PASS_EMAIL, $this->pass_email);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_DATE_OF_BIRTH)) $criteria->add(MissionRequestTempPeer::PASS_DATE_OF_BIRTH, $this->pass_date_of_birth);
		if ($this->isColumnModified(MissionRequestTempPeer::ILLNESS)) $criteria->add(MissionRequestTempPeer::ILLNESS, $this->illness);
		if ($this->isColumnModified(MissionRequestTempPeer::FINANCIAL)) $criteria->add(MissionRequestTempPeer::FINANCIAL, $this->financial);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_WEIGHT)) $criteria->add(MissionRequestTempPeer::PASS_WEIGHT, $this->pass_weight);
		if ($this->isColumnModified(MissionRequestTempPeer::RELEASING_PHYSICIAN)) $criteria->add(MissionRequestTempPeer::RELEASING_PHYSICIAN, $this->releasing_physician);
		if ($this->isColumnModified(MissionRequestTempPeer::RELEASE_PHONE)) $criteria->add(MissionRequestTempPeer::RELEASE_PHONE, $this->release_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::RELEASE_PHONE_COMMENT)) $criteria->add(MissionRequestTempPeer::RELEASE_PHONE_COMMENT, $this->release_phone_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::RELEASE_FAX)) $criteria->add(MissionRequestTempPeer::RELEASE_FAX, $this->release_fax);
		if ($this->isColumnModified(MissionRequestTempPeer::RELEASE_FAX_COMMENT)) $criteria->add(MissionRequestTempPeer::RELEASE_FAX_COMMENT, $this->release_fax_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::RELEASE_EMAIL)) $criteria->add(MissionRequestTempPeer::RELEASE_EMAIL, $this->release_email);
		if ($this->isColumnModified(MissionRequestTempPeer::TREATING_PHYSICIAN)) $criteria->add(MissionRequestTempPeer::TREATING_PHYSICIAN, $this->treating_physician);
		if ($this->isColumnModified(MissionRequestTempPeer::TREATING_PHONE)) $criteria->add(MissionRequestTempPeer::TREATING_PHONE, $this->treating_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::TREATING_PHONE_COMMENT)) $criteria->add(MissionRequestTempPeer::TREATING_PHONE_COMMENT, $this->treating_phone_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::TREATING_FAX)) $criteria->add(MissionRequestTempPeer::TREATING_FAX, $this->treating_fax);
		if ($this->isColumnModified(MissionRequestTempPeer::TREATING_FAX_COMMENT)) $criteria->add(MissionRequestTempPeer::TREATING_FAX_COMMENT, $this->treating_fax_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_TITLE)) $criteria->add(MissionRequestTempPeer::REQ_TITLE, $this->req_title);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_FIRST_NAME)) $criteria->add(MissionRequestTempPeer::REQ_FIRST_NAME, $this->req_first_name);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_LAST_NAME)) $criteria->add(MissionRequestTempPeer::REQ_LAST_NAME, $this->req_last_name);
		if ($this->isColumnModified(MissionRequestTempPeer::AGENCY_NAME)) $criteria->add(MissionRequestTempPeer::AGENCY_NAME, $this->agency_name);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_ADDRESS1)) $criteria->add(MissionRequestTempPeer::REQ_ADDRESS1, $this->req_address1);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_ADDRESS2)) $criteria->add(MissionRequestTempPeer::REQ_ADDRESS2, $this->req_address2);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_CITY)) $criteria->add(MissionRequestTempPeer::REQ_CITY, $this->req_city);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_COUNTY)) $criteria->add(MissionRequestTempPeer::REQ_COUNTY, $this->req_county);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_STATE)) $criteria->add(MissionRequestTempPeer::REQ_STATE, $this->req_state);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_COUNTRY)) $criteria->add(MissionRequestTempPeer::REQ_COUNTRY, $this->req_country);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_ZIPCODE)) $criteria->add(MissionRequestTempPeer::REQ_ZIPCODE, $this->req_zipcode);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_DAY_PHONE)) $criteria->add(MissionRequestTempPeer::REQ_DAY_PHONE, $this->req_day_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_DAY_COMMENT)) $criteria->add(MissionRequestTempPeer::REQ_DAY_COMMENT, $this->req_day_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_EVE_PHONE)) $criteria->add(MissionRequestTempPeer::REQ_EVE_PHONE, $this->req_eve_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_EVE_COMMENT)) $criteria->add(MissionRequestTempPeer::REQ_EVE_COMMENT, $this->req_eve_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_MOBILE_PHONE)) $criteria->add(MissionRequestTempPeer::REQ_MOBILE_PHONE, $this->req_mobile_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_MOBILE_COMMENT)) $criteria->add(MissionRequestTempPeer::REQ_MOBILE_COMMENT, $this->req_mobile_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_PAGER_PHONE)) $criteria->add(MissionRequestTempPeer::REQ_PAGER_PHONE, $this->req_pager_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_PAGER_COMMENT)) $criteria->add(MissionRequestTempPeer::REQ_PAGER_COMMENT, $this->req_pager_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_OTHER_PHONE)) $criteria->add(MissionRequestTempPeer::REQ_OTHER_PHONE, $this->req_other_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_OTHER_COMMENT)) $criteria->add(MissionRequestTempPeer::REQ_OTHER_COMMENT, $this->req_other_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_EMAIL)) $criteria->add(MissionRequestTempPeer::REQ_EMAIL, $this->req_email);
		if ($this->isColumnModified(MissionRequestTempPeer::ORIGIN_IDENT)) $criteria->add(MissionRequestTempPeer::ORIGIN_IDENT, $this->origin_ident);
		if ($this->isColumnModified(MissionRequestTempPeer::ORIGIN_ID)) $criteria->add(MissionRequestTempPeer::ORIGIN_ID, $this->origin_id);
		if ($this->isColumnModified(MissionRequestTempPeer::ORIGIN_CITY)) $criteria->add(MissionRequestTempPeer::ORIGIN_CITY, $this->origin_city);
		if ($this->isColumnModified(MissionRequestTempPeer::ORIGIN_STATE)) $criteria->add(MissionRequestTempPeer::ORIGIN_STATE, $this->origin_state);
		if ($this->isColumnModified(MissionRequestTempPeer::ORIGIN_ZIPCODE)) $criteria->add(MissionRequestTempPeer::ORIGIN_ZIPCODE, $this->origin_zipcode);
		if ($this->isColumnModified(MissionRequestTempPeer::DEST_IDENT)) $criteria->add(MissionRequestTempPeer::DEST_IDENT, $this->dest_ident);
		if ($this->isColumnModified(MissionRequestTempPeer::DEST_ID)) $criteria->add(MissionRequestTempPeer::DEST_ID, $this->dest_id);
		if ($this->isColumnModified(MissionRequestTempPeer::DEST_CITY)) $criteria->add(MissionRequestTempPeer::DEST_CITY, $this->dest_city);
		if ($this->isColumnModified(MissionRequestTempPeer::DEST_STATE)) $criteria->add(MissionRequestTempPeer::DEST_STATE, $this->dest_state);
		if ($this->isColumnModified(MissionRequestTempPeer::DEST_ZIPCODE)) $criteria->add(MissionRequestTempPeer::DEST_ZIPCODE, $this->dest_zipcode);
		if ($this->isColumnModified(MissionRequestTempPeer::COM1_NAME)) $criteria->add(MissionRequestTempPeer::COM1_NAME, $this->com1_name);
		if ($this->isColumnModified(MissionRequestTempPeer::COM1_RELATIONSHIP)) $criteria->add(MissionRequestTempPeer::COM1_RELATIONSHIP, $this->com1_relationship);
		if ($this->isColumnModified(MissionRequestTempPeer::COM1_DATE_OF_BIRTH)) $criteria->add(MissionRequestTempPeer::COM1_DATE_OF_BIRTH, $this->com1_date_of_birth);
		if ($this->isColumnModified(MissionRequestTempPeer::COM1_WEIGHT)) $criteria->add(MissionRequestTempPeer::COM1_WEIGHT, $this->com1_weight);
		if ($this->isColumnModified(MissionRequestTempPeer::COM1_PHONE)) $criteria->add(MissionRequestTempPeer::COM1_PHONE, $this->com1_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::COM1_COMMENT)) $criteria->add(MissionRequestTempPeer::COM1_COMMENT, $this->com1_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::COM2_NAME)) $criteria->add(MissionRequestTempPeer::COM2_NAME, $this->com2_name);
		if ($this->isColumnModified(MissionRequestTempPeer::COM2_RELATIONSHIP)) $criteria->add(MissionRequestTempPeer::COM2_RELATIONSHIP, $this->com2_relationship);
		if ($this->isColumnModified(MissionRequestTempPeer::COM2_DATE_OF_BIRTH)) $criteria->add(MissionRequestTempPeer::COM2_DATE_OF_BIRTH, $this->com2_date_of_birth);
		if ($this->isColumnModified(MissionRequestTempPeer::COM2_WEIGHT)) $criteria->add(MissionRequestTempPeer::COM2_WEIGHT, $this->com2_weight);
		if ($this->isColumnModified(MissionRequestTempPeer::COM2_PHONE)) $criteria->add(MissionRequestTempPeer::COM2_PHONE, $this->com2_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::COM2_COMMENT)) $criteria->add(MissionRequestTempPeer::COM2_COMMENT, $this->com2_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::COM3_NAME)) $criteria->add(MissionRequestTempPeer::COM3_NAME, $this->com3_name);
		if ($this->isColumnModified(MissionRequestTempPeer::COM3_RELATIONSHIP)) $criteria->add(MissionRequestTempPeer::COM3_RELATIONSHIP, $this->com3_relationship);
		if ($this->isColumnModified(MissionRequestTempPeer::COM3_DATE_OF_BIRTH)) $criteria->add(MissionRequestTempPeer::COM3_DATE_OF_BIRTH, $this->com3_date_of_birth);
		if ($this->isColumnModified(MissionRequestTempPeer::COM3_WEIGHT)) $criteria->add(MissionRequestTempPeer::COM3_WEIGHT, $this->com3_weight);
		if ($this->isColumnModified(MissionRequestTempPeer::COM3_PHONE)) $criteria->add(MissionRequestTempPeer::COM3_PHONE, $this->com3_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::COM3_COMMENT)) $criteria->add(MissionRequestTempPeer::COM3_COMMENT, $this->com3_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::COM4_NAME)) $criteria->add(MissionRequestTempPeer::COM4_NAME, $this->com4_name);
		if ($this->isColumnModified(MissionRequestTempPeer::COM4_RELATIONSHIP)) $criteria->add(MissionRequestTempPeer::COM4_RELATIONSHIP, $this->com4_relationship);
		if ($this->isColumnModified(MissionRequestTempPeer::COM4_DATE_OF_BIRTH)) $criteria->add(MissionRequestTempPeer::COM4_DATE_OF_BIRTH, $this->com4_date_of_birth);
		if ($this->isColumnModified(MissionRequestTempPeer::COM4_WEIGHT)) $criteria->add(MissionRequestTempPeer::COM4_WEIGHT, $this->com4_weight);
		if ($this->isColumnModified(MissionRequestTempPeer::COM4_PHONE)) $criteria->add(MissionRequestTempPeer::COM4_PHONE, $this->com4_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::COM4_COMMENT)) $criteria->add(MissionRequestTempPeer::COM4_COMMENT, $this->com4_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::LODGING_NAME)) $criteria->add(MissionRequestTempPeer::LODGING_NAME, $this->lodging_name);
		if ($this->isColumnModified(MissionRequestTempPeer::LODGING_PHONE)) $criteria->add(MissionRequestTempPeer::LODGING_PHONE, $this->lodging_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::FACILITY_NAME)) $criteria->add(MissionRequestTempPeer::FACILITY_NAME, $this->facility_name);
		if ($this->isColumnModified(MissionRequestTempPeer::FACILITY_PHONE)) $criteria->add(MissionRequestTempPeer::FACILITY_PHONE, $this->facility_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::FACILITY_PHONE_COMMENT)) $criteria->add(MissionRequestTempPeer::FACILITY_PHONE_COMMENT, $this->facility_phone_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_LANGUAGE_SPOKEN)) $criteria->add(MissionRequestTempPeer::REQ_LANGUAGE_SPOKEN, $this->req_language_spoken);
		if ($this->isColumnModified(MissionRequestTempPeer::BEST_CONTACT)) $criteria->add(MissionRequestTempPeer::BEST_CONTACT, $this->best_contact);
		if ($this->isColumnModified(MissionRequestTempPeer::EMERGENCY_NAME)) $criteria->add(MissionRequestTempPeer::EMERGENCY_NAME, $this->emergency_name);
		if ($this->isColumnModified(MissionRequestTempPeer::EMERGENCY_PHONE1)) $criteria->add(MissionRequestTempPeer::EMERGENCY_PHONE1, $this->emergency_phone1);
		if ($this->isColumnModified(MissionRequestTempPeer::EMERGENCY_PHONE2)) $criteria->add(MissionRequestTempPeer::EMERGENCY_PHONE2, $this->emergency_phone2);
		if ($this->isColumnModified(MissionRequestTempPeer::EMERGENCY_PHONE1_COMMENT)) $criteria->add(MissionRequestTempPeer::EMERGENCY_PHONE1_COMMENT, $this->emergency_phone1_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::EMERGENCY_PHONE2_COMMENT)) $criteria->add(MissionRequestTempPeer::EMERGENCY_PHONE2_COMMENT, $this->emergency_phone2_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::COMMENT)) $criteria->add(MissionRequestTempPeer::COMMENT, $this->comment);
		if ($this->isColumnModified(MissionRequestTempPeer::PROCESSED_DATE)) $criteria->add(MissionRequestTempPeer::PROCESSED_DATE, $this->processed_date);
		if ($this->isColumnModified(MissionRequestTempPeer::SESSION_ID)) $criteria->add(MissionRequestTempPeer::SESSION_ID, $this->session_id);
		if ($this->isColumnModified(MissionRequestTempPeer::IP_ADDRESS)) $criteria->add(MissionRequestTempPeer::IP_ADDRESS, $this->ip_address);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_FAX_PHONE1)) $criteria->add(MissionRequestTempPeer::PASS_FAX_PHONE1, $this->pass_fax_phone1);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_FAX_COMMENT1)) $criteria->add(MissionRequestTempPeer::PASS_FAX_COMMENT1, $this->pass_fax_comment1);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_FIRST_NAME)) $criteria->add(MissionRequestTempPeer::GUAR_FIRST_NAME, $this->guar_first_name);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_LAST_NAME)) $criteria->add(MissionRequestTempPeer::GUAR_LAST_NAME, $this->guar_last_name);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_ADDRESS1)) $criteria->add(MissionRequestTempPeer::GUAR_ADDRESS1, $this->guar_address1);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_ADDRESS2)) $criteria->add(MissionRequestTempPeer::GUAR_ADDRESS2, $this->guar_address2);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_CITY)) $criteria->add(MissionRequestTempPeer::GUAR_CITY, $this->guar_city);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_STATE)) $criteria->add(MissionRequestTempPeer::GUAR_STATE, $this->guar_state);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_ZIPCODE)) $criteria->add(MissionRequestTempPeer::GUAR_ZIPCODE, $this->guar_zipcode);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_DAY_PHONE)) $criteria->add(MissionRequestTempPeer::GUAR_DAY_PHONE, $this->guar_day_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_DAY_COMMENT)) $criteria->add(MissionRequestTempPeer::GUAR_DAY_COMMENT, $this->guar_day_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_EVE_PHONE)) $criteria->add(MissionRequestTempPeer::GUAR_EVE_PHONE, $this->guar_eve_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_EVE_COMMENT)) $criteria->add(MissionRequestTempPeer::GUAR_EVE_COMMENT, $this->guar_eve_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_FAX_PHONE1)) $criteria->add(MissionRequestTempPeer::GUAR_FAX_PHONE1, $this->guar_fax_phone1);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_FAX_COMMENT1)) $criteria->add(MissionRequestTempPeer::GUAR_FAX_COMMENT1, $this->guar_fax_comment1);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_MOBILE_PHONE)) $criteria->add(MissionRequestTempPeer::GUAR_MOBILE_PHONE, $this->guar_mobile_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_MOBILE_COMMENT)) $criteria->add(MissionRequestTempPeer::GUAR_MOBILE_COMMENT, $this->guar_mobile_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_PAGER_PHONE)) $criteria->add(MissionRequestTempPeer::GUAR_PAGER_PHONE, $this->guar_pager_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_PAGER_COMMENT)) $criteria->add(MissionRequestTempPeer::GUAR_PAGER_COMMENT, $this->guar_pager_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_OTHER_PHONE)) $criteria->add(MissionRequestTempPeer::GUAR_OTHER_PHONE, $this->guar_other_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_OTHER_COMMENT)) $criteria->add(MissionRequestTempPeer::GUAR_OTHER_COMMENT, $this->guar_other_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::GUAR_GUAR_EMAIL)) $criteria->add(MissionRequestTempPeer::GUAR_GUAR_EMAIL, $this->guar_guar_email);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_FAX_PHONE1)) $criteria->add(MissionRequestTempPeer::REQ_FAX_PHONE1, $this->req_fax_phone1);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_FAX_COMMENT1)) $criteria->add(MissionRequestTempPeer::REQ_FAX_COMMENT1, $this->req_fax_comment1);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_ENGLISH)) $criteria->add(MissionRequestTempPeer::PASS_ENGLISH, $this->pass_english);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_LANGUAGE)) $criteria->add(MissionRequestTempPeer::PASS_LANGUAGE, $this->pass_language);
		if ($this->isColumnModified(MissionRequestTempPeer::APPT_TIME)) $criteria->add(MissionRequestTempPeer::APPT_TIME, $this->appt_time);
		if ($this->isColumnModified(MissionRequestTempPeer::REQUESTER_ID)) $criteria->add(MissionRequestTempPeer::REQUESTER_ID, $this->requester_id);
		if ($this->isColumnModified(MissionRequestTempPeer::PASSENGER_ID)) $criteria->add(MissionRequestTempPeer::PASSENGER_ID, $this->passenger_id);
		if ($this->isColumnModified(MissionRequestTempPeer::MISSION_ID)) $criteria->add(MissionRequestTempPeer::MISSION_ID, $this->mission_id);
		if ($this->isColumnModified(MissionRequestTempPeer::TREATING_EMAIL)) $criteria->add(MissionRequestTempPeer::TREATING_EMAIL, $this->treating_email);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_HEIGHT)) $criteria->add(MissionRequestTempPeer::PASS_HEIGHT, $this->pass_height);
		if ($this->isColumnModified(MissionRequestTempPeer::RETURN_TIME)) $criteria->add(MissionRequestTempPeer::RETURN_TIME, $this->return_time);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_OXYGEN)) $criteria->add(MissionRequestTempPeer::PASS_OXYGEN, $this->pass_oxygen);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_MEDICAL)) $criteria->add(MissionRequestTempPeer::PASS_MEDICAL, $this->pass_medical);
		if ($this->isColumnModified(MissionRequestTempPeer::REFERRAL_SOURCE_ID)) $criteria->add(MissionRequestTempPeer::REFERRAL_SOURCE_ID, $this->referral_source_id);
		if ($this->isColumnModified(MissionRequestTempPeer::FOLLOW_UP_CONTACT_NAME)) $criteria->add(MissionRequestTempPeer::FOLLOW_UP_CONTACT_NAME, $this->follow_up_contact_name);
		if ($this->isColumnModified(MissionRequestTempPeer::FOLLOW_UP_CONTACT_PHONE)) $criteria->add(MissionRequestTempPeer::FOLLOW_UP_CONTACT_PHONE, $this->follow_up_contact_phone);
		if ($this->isColumnModified(MissionRequestTempPeer::FOLLOW_UP_EMAIL)) $criteria->add(MissionRequestTempPeer::FOLLOW_UP_EMAIL, $this->follow_up_email);
		if ($this->isColumnModified(MissionRequestTempPeer::MISS_REQ_ORIGINATOR_AFA_ORG_ID)) $criteria->add(MissionRequestTempPeer::MISS_REQ_ORIGINATOR_AFA_ORG_ID, $this->miss_req_originator_afa_org_id);
		if ($this->isColumnModified(MissionRequestTempPeer::AFA_ORG_ID)) $criteria->add(MissionRequestTempPeer::AFA_ORG_ID, $this->afa_org_id);
		if ($this->isColumnModified(MissionRequestTempPeer::AFA_ORG_MISSION_ID)) $criteria->add(MissionRequestTempPeer::AFA_ORG_MISSION_ID, $this->afa_org_mission_id);
		if ($this->isColumnModified(MissionRequestTempPeer::MISSION_REQUEST_TYPE)) $criteria->add(MissionRequestTempPeer::MISSION_REQUEST_TYPE, $this->mission_request_type);
		if ($this->isColumnModified(MissionRequestTempPeer::LAST_PAGE_PROCESSED)) $criteria->add(MissionRequestTempPeer::LAST_PAGE_PROCESSED, $this->last_page_processed);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_MIDDLE_NAME)) $criteria->add(MissionRequestTempPeer::GUARDIAN_MIDDLE_NAME, $this->guardian_middle_name);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_NICKNAME)) $criteria->add(MissionRequestTempPeer::GUARDIAN_NICKNAME, $this->guardian_nickname);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_PAGER_EMAIL)) $criteria->add(MissionRequestTempPeer::GUARDIAN_PAGER_EMAIL, $this->guardian_pager_email);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_SECONDARY_EMAIL)) $criteria->add(MissionRequestTempPeer::GUARDIAN_SECONDARY_EMAIL, $this->guardian_secondary_email);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_SUFFIX)) $criteria->add(MissionRequestTempPeer::GUARDIAN_SUFFIX, $this->guardian_suffix);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_TITLE)) $criteria->add(MissionRequestTempPeer::GUARDIAN_TITLE, $this->guardian_title);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_VETERAN)) $criteria->add(MissionRequestTempPeer::GUARDIAN_VETERAN, $this->guardian_veteran);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_GENDER)) $criteria->add(MissionRequestTempPeer::PASS_GENDER, $this->pass_gender);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_MIDDLE_NAME)) $criteria->add(MissionRequestTempPeer::PASS_MIDDLE_NAME, $this->pass_middle_name);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_NICKNAME)) $criteria->add(MissionRequestTempPeer::PASS_NICKNAME, $this->pass_nickname);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_PAGER_EMAIL)) $criteria->add(MissionRequestTempPeer::PASS_PAGER_EMAIL, $this->pass_pager_email);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_SECONDARY_EMAIL)) $criteria->add(MissionRequestTempPeer::PASS_SECONDARY_EMAIL, $this->pass_secondary_email);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_SUFFIX)) $criteria->add(MissionRequestTempPeer::PASS_SUFFIX, $this->pass_suffix);
		if ($this->isColumnModified(MissionRequestTempPeer::PASS_VETERAN)) $criteria->add(MissionRequestTempPeer::PASS_VETERAN, $this->pass_veteran);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_MIDDLE_NAME)) $criteria->add(MissionRequestTempPeer::REQ_MIDDLE_NAME, $this->req_middle_name);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_NICKNAME)) $criteria->add(MissionRequestTempPeer::REQ_NICKNAME, $this->req_nickname);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_PAGER_EMAIL)) $criteria->add(MissionRequestTempPeer::REQ_PAGER_EMAIL, $this->req_pager_email);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_SECONDARY_EMAIL)) $criteria->add(MissionRequestTempPeer::REQ_SECONDARY_EMAIL, $this->req_secondary_email);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_SUFFIX)) $criteria->add(MissionRequestTempPeer::REQ_SUFFIX, $this->req_suffix);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_VETERAN)) $criteria->add(MissionRequestTempPeer::REQ_VETERAN, $this->req_veteran);
		if ($this->isColumnModified(MissionRequestTempPeer::LODGING_PHONE_COMMENT)) $criteria->add(MissionRequestTempPeer::LODGING_PHONE_COMMENT, $this->lodging_phone_comment);
		if ($this->isColumnModified(MissionRequestTempPeer::REQ_GENDER)) $criteria->add(MissionRequestTempPeer::REQ_GENDER, $this->req_gender);
		if ($this->isColumnModified(MissionRequestTempPeer::GUARDIAN_GENDER)) $criteria->add(MissionRequestTempPeer::GUARDIAN_GENDER, $this->guardian_gender);
		if ($this->isColumnModified(MissionRequestTempPeer::AGENCY_POSITION)) $criteria->add(MissionRequestTempPeer::AGENCY_POSITION, $this->agency_position);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(MissionRequestTempPeer::DATABASE_NAME);

		$criteria->add(MissionRequestTempPeer::ID, $this->id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getId();
	}

	/**
	 * Generic method to set the primary key (id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of MissionRequestTemp (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setId($this->id);

		$copyObj->setRequestDate($this->request_date);

		$copyObj->setRequestBy($this->request_by);

		$copyObj->setRequestOnBehalf($this->request_on_behalf);

		$copyObj->setApptDate($this->appt_date);

		$copyObj->setReturnDate($this->return_date);

		$copyObj->setBaggageWeight($this->baggage_weight);

		$copyObj->setBaggageDesc($this->baggage_desc);

		$copyObj->setPassTitle($this->pass_title);

		$copyObj->setPassFirstName($this->pass_first_name);

		$copyObj->setPassLastName($this->pass_last_name);

		$copyObj->setPassAddress1($this->pass_address1);

		$copyObj->setPassAddress2($this->pass_address2);

		$copyObj->setPassCity($this->pass_city);

		$copyObj->setPassCounty($this->pass_county);

		$copyObj->setPassState($this->pass_state);

		$copyObj->setPassCountry($this->pass_country);

		$copyObj->setPassZipcode($this->pass_zipcode);

		$copyObj->setPassDayPhone($this->pass_day_phone);

		$copyObj->setPassDayComment($this->pass_day_comment);

		$copyObj->setPassEvePhone($this->pass_eve_phone);

		$copyObj->setPassEveComment($this->pass_eve_comment);

		$copyObj->setPassMobilePhone($this->pass_mobile_phone);

		$copyObj->setPassMobileComment($this->pass_mobile_comment);

		$copyObj->setPassPagerPhone($this->pass_pager_phone);

		$copyObj->setPassPagerComment($this->pass_pager_comment);

		$copyObj->setPassOtherPhone($this->pass_other_phone);

		$copyObj->setPassOtherComment($this->pass_other_comment);

		$copyObj->setPassEmail($this->pass_email);

		$copyObj->setPassDateOfBirth($this->pass_date_of_birth);

		$copyObj->setIllness($this->illness);

		$copyObj->setFinancial($this->financial);

		$copyObj->setPassWeight($this->pass_weight);

		$copyObj->setReleasingPhysician($this->releasing_physician);

		$copyObj->setReleasePhone($this->release_phone);

		$copyObj->setReleasePhoneComment($this->release_phone_comment);

		$copyObj->setReleaseFax($this->release_fax);

		$copyObj->setReleaseFaxComment($this->release_fax_comment);

		$copyObj->setReleaseEmail($this->release_email);

		$copyObj->setTreatingPhysician($this->treating_physician);

		$copyObj->setTreatingPhone($this->treating_phone);

		$copyObj->setTreatingPhoneComment($this->treating_phone_comment);

		$copyObj->setTreatingFax($this->treating_fax);

		$copyObj->setTreatingFaxComment($this->treating_fax_comment);

		$copyObj->setReqTitle($this->req_title);

		$copyObj->setReqFirstName($this->req_first_name);

		$copyObj->setReqLastName($this->req_last_name);

		$copyObj->setAgencyName($this->agency_name);

		$copyObj->setReqAddress1($this->req_address1);

		$copyObj->setReqAddress2($this->req_address2);

		$copyObj->setReqCity($this->req_city);

		$copyObj->setReqCounty($this->req_county);

		$copyObj->setReqState($this->req_state);

		$copyObj->setReqCountry($this->req_country);

		$copyObj->setReqZipcode($this->req_zipcode);

		$copyObj->setReqDayPhone($this->req_day_phone);

		$copyObj->setReqDayComment($this->req_day_comment);

		$copyObj->setReqEvePhone($this->req_eve_phone);

		$copyObj->setReqEveComment($this->req_eve_comment);

		$copyObj->setReqMobilePhone($this->req_mobile_phone);

		$copyObj->setReqMobileComment($this->req_mobile_comment);

		$copyObj->setReqPagerPhone($this->req_pager_phone);

		$copyObj->setReqPagerComment($this->req_pager_comment);

		$copyObj->setReqOtherPhone($this->req_other_phone);

		$copyObj->setReqOtherComment($this->req_other_comment);

		$copyObj->setReqEmail($this->req_email);

		$copyObj->setOriginIdent($this->origin_ident);

		$copyObj->setOriginId($this->origin_id);

		$copyObj->setOriginCity($this->origin_city);

		$copyObj->setOriginState($this->origin_state);

		$copyObj->setOriginZipcode($this->origin_zipcode);

		$copyObj->setDestIdent($this->dest_ident);

		$copyObj->setDestId($this->dest_id);

		$copyObj->setDestCity($this->dest_city);

		$copyObj->setDestState($this->dest_state);

		$copyObj->setDestZipcode($this->dest_zipcode);

		$copyObj->setCom1Name($this->com1_name);

		$copyObj->setCom1Relationship($this->com1_relationship);

		$copyObj->setCom1DateOfBirth($this->com1_date_of_birth);

		$copyObj->setCom1Weight($this->com1_weight);

		$copyObj->setCom1Phone($this->com1_phone);

		$copyObj->setCom1Comment($this->com1_comment);

		$copyObj->setCom2Name($this->com2_name);

		$copyObj->setCom2Relationship($this->com2_relationship);

		$copyObj->setCom2DateOfBirth($this->com2_date_of_birth);

		$copyObj->setCom2Weight($this->com2_weight);

		$copyObj->setCom2Phone($this->com2_phone);

		$copyObj->setCom2Comment($this->com2_comment);

		$copyObj->setCom3Name($this->com3_name);

		$copyObj->setCom3Relationship($this->com3_relationship);

		$copyObj->setCom3DateOfBirth($this->com3_date_of_birth);

		$copyObj->setCom3Weight($this->com3_weight);

		$copyObj->setCom3Phone($this->com3_phone);

		$copyObj->setCom3Comment($this->com3_comment);

		$copyObj->setCom4Name($this->com4_name);

		$copyObj->setCom4Relationship($this->com4_relationship);

		$copyObj->setCom4DateOfBirth($this->com4_date_of_birth);

		$copyObj->setCom4Weight($this->com4_weight);

		$copyObj->setCom4Phone($this->com4_phone);

		$copyObj->setCom4Comment($this->com4_comment);

		$copyObj->setLodgingName($this->lodging_name);

		$copyObj->setLodgingPhone($this->lodging_phone);

		$copyObj->setFacilityName($this->facility_name);

		$copyObj->setFacilityPhone($this->facility_phone);

		$copyObj->setFacilityPhoneComment($this->facility_phone_comment);

		$copyObj->setReqLanguageSpoken($this->req_language_spoken);

		$copyObj->setBestContact($this->best_contact);

		$copyObj->setEmergencyName($this->emergency_name);

		$copyObj->setEmergencyPhone1($this->emergency_phone1);

		$copyObj->setEmergencyPhone2($this->emergency_phone2);

		$copyObj->setEmergencyPhone1Comment($this->emergency_phone1_comment);

		$copyObj->setEmergencyPhone2Comment($this->emergency_phone2_comment);

		$copyObj->setComment($this->comment);

		$copyObj->setProcessedDate($this->processed_date);

		$copyObj->setSessionId($this->session_id);

		$copyObj->setIpAddress($this->ip_address);

		$copyObj->setPassFaxPhone1($this->pass_fax_phone1);

		$copyObj->setPassFaxComment1($this->pass_fax_comment1);

		$copyObj->setGuarFirstName($this->guar_first_name);

		$copyObj->setGuarLastName($this->guar_last_name);

		$copyObj->setGuarAddress1($this->guar_address1);

		$copyObj->setGuarAddress2($this->guar_address2);

		$copyObj->setGuarCity($this->guar_city);

		$copyObj->setGuarState($this->guar_state);

		$copyObj->setGuarZipcode($this->guar_zipcode);

		$copyObj->setGuarDayPhone($this->guar_day_phone);

		$copyObj->setGuarDayComment($this->guar_day_comment);

		$copyObj->setGuarEvePhone($this->guar_eve_phone);

		$copyObj->setGuarEveComment($this->guar_eve_comment);

		$copyObj->setGuarFaxPhone1($this->guar_fax_phone1);

		$copyObj->setGuarFaxComment1($this->guar_fax_comment1);

		$copyObj->setGuarMobilePhone($this->guar_mobile_phone);

		$copyObj->setGuarMobileComment($this->guar_mobile_comment);

		$copyObj->setGuarPagerPhone($this->guar_pager_phone);

		$copyObj->setGuarPagerComment($this->guar_pager_comment);

		$copyObj->setGuarOtherPhone($this->guar_other_phone);

		$copyObj->setGuarOtherComment($this->guar_other_comment);

		$copyObj->setGuarGuarEmail($this->guar_guar_email);

		$copyObj->setReqFaxPhone1($this->req_fax_phone1);

		$copyObj->setReqFaxComment1($this->req_fax_comment1);

		$copyObj->setPassEnglish($this->pass_english);

		$copyObj->setPassLanguage($this->pass_language);

		$copyObj->setApptTime($this->appt_time);

		$copyObj->setRequesterId($this->requester_id);

		$copyObj->setPassengerId($this->passenger_id);

		$copyObj->setMissionId($this->mission_id);

		$copyObj->setTreatingEmail($this->treating_email);

		$copyObj->setPassHeight($this->pass_height);

		$copyObj->setReturnTime($this->return_time);

		$copyObj->setPassOxygen($this->pass_oxygen);

		$copyObj->setPassMedical($this->pass_medical);

		$copyObj->setReferralSourceId($this->referral_source_id);

		$copyObj->setFollowUpContactName($this->follow_up_contact_name);

		$copyObj->setFollowUpContactPhone($this->follow_up_contact_phone);

		$copyObj->setFollowUpEmail($this->follow_up_email);

		$copyObj->setMissReqOriginatorAfaOrgId($this->miss_req_originator_afa_org_id);

		$copyObj->setAfaOrgId($this->afa_org_id);

		$copyObj->setAfaOrgMissionId($this->afa_org_mission_id);

		$copyObj->setMissionRequestType($this->mission_request_type);

		$copyObj->setLastPageProcessed($this->last_page_processed);

		$copyObj->setGuardianMiddleName($this->guardian_middle_name);

		$copyObj->setGuardianNickname($this->guardian_nickname);

		$copyObj->setGuardianPagerEmail($this->guardian_pager_email);

		$copyObj->setGuardianSecondaryEmail($this->guardian_secondary_email);

		$copyObj->setGuardianSuffix($this->guardian_suffix);

		$copyObj->setGuardianTitle($this->guardian_title);

		$copyObj->setGuardianVeteran($this->guardian_veteran);

		$copyObj->setPassGender($this->pass_gender);

		$copyObj->setPassMiddleName($this->pass_middle_name);

		$copyObj->setPassNickname($this->pass_nickname);

		$copyObj->setPassPagerEmail($this->pass_pager_email);

		$copyObj->setPassSecondaryEmail($this->pass_secondary_email);

		$copyObj->setPassSuffix($this->pass_suffix);

		$copyObj->setPassVeteran($this->pass_veteran);

		$copyObj->setReqMiddleName($this->req_middle_name);

		$copyObj->setReqNickname($this->req_nickname);

		$copyObj->setReqPagerEmail($this->req_pager_email);

		$copyObj->setReqSecondaryEmail($this->req_secondary_email);

		$copyObj->setReqSuffix($this->req_suffix);

		$copyObj->setReqVeteran($this->req_veteran);

		$copyObj->setLodgingPhoneComment($this->lodging_phone_comment);

		$copyObj->setReqGender($this->req_gender);

		$copyObj->setGuardianGender($this->guardian_gender);

		$copyObj->setAgencyPosition($this->agency_position);


		$copyObj->setNew(true);

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     MissionRequestTemp Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     MissionRequestTempPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new MissionRequestTempPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseMissionRequestTemp:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseMissionRequestTemp::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseMissionRequestTemp
