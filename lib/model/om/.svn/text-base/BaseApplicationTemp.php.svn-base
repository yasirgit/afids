<?php

/**
 * Base class that represents a row from the 'application_temp' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 03/07/11 12:36:21
 *
 * @package    lib.model.om
 */
abstract class BaseApplicationTemp extends BaseObject  implements Persistent {


  const PEER = 'ApplicationTempPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        ApplicationTempPeer
	 */
	protected static $peer;

	/**
	 * The value for the id field.
	 * @var        int
	 */
	protected $id;

	/**
	 * The value for the application_date field.
	 * @var        string
	 */
	protected $application_date;

	/**
	 * The value for the renewal field.
	 * @var        int
	 */
	protected $renewal;

	/**
	 * The value for the title field.
	 * @var        string
	 */
	protected $title;

	/**
	 * The value for the first_name field.
	 * @var        string
	 */
	protected $first_name;

	/**
	 * The value for the last_name field.
	 * @var        string
	 */
	protected $last_name;

	/**
	 * The value for the address1 field.
	 * @var        string
	 */
	protected $address1;

	/**
	 * The value for the address2 field.
	 * @var        string
	 */
	protected $address2;

	/**
	 * The value for the city field.
	 * @var        string
	 */
	protected $city;

	/**
	 * The value for the state field.
	 * @var        string
	 */
	protected $state;

	/**
	 * The value for the zipcode field.
	 * @var        string
	 */
	protected $zipcode;

	/**
	 * The value for the day_phone field.
	 * @var        string
	 */
	protected $day_phone;

	/**
	 * The value for the day_comment field.
	 * @var        string
	 */
	protected $day_comment;

	/**
	 * The value for the eve_phone field.
	 * @var        string
	 */
	protected $eve_phone;

	/**
	 * The value for the eve_comment field.
	 * @var        string
	 */
	protected $eve_comment;

	/**
	 * The value for the mobile_phone field.
	 * @var        string
	 */
	protected $mobile_phone;

	/**
	 * The value for the mobile_comment field.
	 * @var        string
	 */
	protected $mobile_comment;

	/**
	 * The value for the pager_phone field.
	 * @var        string
	 */
	protected $pager_phone;

	/**
	 * The value for the pager_comment field.
	 * @var        string
	 */
	protected $pager_comment;

	/**
	 * The value for the fax_phone1 field.
	 * @var        string
	 */
	protected $fax_phone1;

	/**
	 * The value for the fax_comment1 field.
	 * @var        string
	 */
	protected $fax_comment1;

	/**
	 * The value for the fax_phone2 field.
	 * @var        string
	 */
	protected $fax_phone2;

	/**
	 * The value for the fax_comment2 field.
	 * @var        string
	 */
	protected $fax_comment2;

	/**
	 * The value for the other_phone field.
	 * @var        string
	 */
	protected $other_phone;

	/**
	 * The value for the other_comment field.
	 * @var        string
	 */
	protected $other_comment;

	/**
	 * The value for the email field.
	 * @var        string
	 */
	protected $email;

	/**
	 * The value for the spouse_first_name field.
	 * @var        string
	 */
	protected $spouse_first_name;

	/**
	 * The value for the spouse_last_name field.
	 * @var        string
	 */
	protected $spouse_last_name;

	/**
	 * The value for the applicant_pilot field.
	 * @var        int
	 */
	protected $applicant_pilot;

	/**
	 * The value for the spouse_pilot field.
	 * @var        int
	 */
	protected $spouse_pilot;

	/**
	 * The value for the applicant_copilot field.
	 * @var        int
	 */
	protected $applicant_copilot;

	/**
	 * The value for the languages_spoken field.
	 * @var        string
	 */
	protected $languages_spoken;

	/**
	 * The value for the home_base field.
	 * @var        string
	 */
	protected $home_base;

	/**
	 * The value for the fbo_name field.
	 * @var        string
	 */
	protected $fbo_name;

	/**
	 * The value for the aircraft_primary_id field.
	 * @var        int
	 */
	protected $aircraft_primary_id;

	/**
	 * The value for the aircraft_primary_own field.
	 * @var        int
	 */
	protected $aircraft_primary_own;

	/**
	 * The value for the aircraft_primary_ice field.
	 * @var        int
	 */
	protected $aircraft_primary_ice;

	/**
	 * The value for the aircraft_primary_seats field.
	 * @var        int
	 */
	protected $aircraft_primary_seats;

	/**
	 * The value for the aircraft_primary_n_number field.
	 * @var        string
	 */
	protected $aircraft_primary_n_number;

	/**
	 * The value for the aircraft_secondary_id field.
	 * @var        int
	 */
	protected $aircraft_secondary_id;

	/**
	 * The value for the aircraft_secondary_own field.
	 * @var        int
	 */
	protected $aircraft_secondary_own;

	/**
	 * The value for the aircraft_secondary_ice field.
	 * @var        int
	 */
	protected $aircraft_secondary_ice;

	/**
	 * The value for the aircraft_secondary_seats field.
	 * @var        int
	 */
	protected $aircraft_secondary_seats;

	/**
	 * The value for the aircraft_secondary_n_number field.
	 * @var        string
	 */
	protected $aircraft_secondary_n_number;

	/**
	 * The value for the pilot_certificate field.
	 * @var        string
	 */
	protected $pilot_certificate;

	/**
	 * The value for the ratings field.
	 * @var        string
	 */
	protected $ratings;

	/**
	 * The value for the medical_class field.
	 * @var        int
	 */
	protected $medical_class;

	/**
	 * The value for the license_type field.
	 * @var        string
	 */
	protected $license_type;

	/**
	 * The value for the total_hours field.
	 * @var        int
	 */
	protected $total_hours;

	/**
	 * The value for the ifr_hours field.
	 * @var        int
	 */
	protected $ifr_hours;

	/**
	 * The value for the multi_hours field.
	 * @var        int
	 */
	protected $multi_hours;

	/**
	 * The value for the other_hours field.
	 * @var        int
	 */
	protected $other_hours;

	/**
	 * The value for the date_of_birth field.
	 * @var        string
	 */
	protected $date_of_birth;

	/**
	 * The value for the height field.
	 * @var        int
	 */
	protected $height;

	/**
	 * The value for the weight field.
	 * @var        int
	 */
	protected $weight;

	/**
	 * The value for the availability_weekdays field.
	 * @var        int
	 */
	protected $availability_weekdays;

	/**
	 * The value for the availability_weeknights field.
	 * @var        int
	 */
	protected $availability_weeknights;

	/**
	 * The value for the availability_weekends field.
	 * @var        int
	 */
	protected $availability_weekends;

	/**
	 * The value for the availability_notice field.
	 * @var        int
	 */
	protected $availability_notice;

	/**
	 * The value for the availability_last_minute field.
	 * @var        int
	 */
	protected $availability_last_minute;

	/**
	 * The value for the availability_copilot field.
	 * @var        int
	 */
	protected $availability_copilot;

	/**
	 * The value for the affirmation_agreed field.
	 * @var        int
	 */
	protected $affirmation_agreed;

	/**
	 * The value for the insurance_agreed field.
	 * @var        int
	 */
	protected $insurance_agreed;

	/**
	 * The value for the volunteer_interest field.
	 * @var        string
	 */
	protected $volunteer_interest;

	/**
	 * The value for the company_name field.
	 * @var        string
	 */
	protected $company_name;

	/**
	 * The value for the company_position field.
	 * @var        string
	 */
	protected $company_position;

	/**
	 * The value for the company_match_funds field.
	 * @var        int
	 */
	protected $company_match_funds;

	/**
	 * The value for the company_business_category_id field.
	 * @var        int
	 */
	protected $company_business_category_id;

	/**
	 * The value for the referral_source field.
	 * @var        int
	 */
	protected $referral_source;

	/**
	 * The value for the premium_choice field.
	 * @var        int
	 */
	protected $premium_choice;

	/**
	 * The value for the premium_size field.
	 * @var        int
	 */
	protected $premium_size;

	/**
	 * The value for the dues_amount_paid field.
	 * @var        int
	 */
	protected $dues_amount_paid;

	/**
	 * The value for the donation_amount_paid field.
	 * @var        int
	 */
	protected $donation_amount_paid;

	/**
	 * The value for the method_of_payment_id field.
	 * @var        int
	 */
	protected $method_of_payment_id;

	/**
	 * The value for the ccard_approval_number field.
	 * @var        string
	 */
	protected $ccard_approval_number;

	/**
	 * The value for the ccard_error_code field.
	 * @var        string
	 */
	protected $ccard_error_code;

	/**
	 * The value for the ccard_avs_result field.
	 * @var        string
	 */
	protected $ccard_avs_result;

	/**
	 * The value for the processed_date field.
	 * @var        string
	 */
	protected $processed_date;

	/**
	 * The value for the member_id field.
	 * @var        int
	 */
	protected $member_id;

	/**
	 * The value for the mission_orientation field.
	 * @var        int
	 */
	protected $mission_orientation;

	/**
	 * The value for the mission_coordination field.
	 * @var        int
	 */
	protected $mission_coordination;

	/**
	 * The value for the pilot_recruitment field.
	 * @var        int
	 */
	protected $pilot_recruitment;

	/**
	 * The value for the fund_raising field.
	 * @var        int
	 */
	protected $fund_raising;

	/**
	 * The value for the celebrity_contacts field.
	 * @var        int
	 */
	protected $celebrity_contacts;

	/**
	 * The value for the hospital_outreach field.
	 * @var        int
	 */
	protected $hospital_outreach;

	/**
	 * The value for the media_relations field.
	 * @var        int
	 */
	protected $media_relations;

	/**
	 * The value for the telephone_work field.
	 * @var        int
	 */
	protected $telephone_work;

	/**
	 * The value for the computers field.
	 * @var        int
	 */
	protected $computers;

	/**
	 * The value for the clerical field.
	 * @var        int
	 */
	protected $clerical;

	/**
	 * The value for the publicity field.
	 * @var        int
	 */
	protected $publicity;

	/**
	 * The value for the writing field.
	 * @var        int
	 */
	protected $writing;

	/**
	 * The value for the speakers_bureau field.
	 * @var        int
	 */
	protected $speakers_bureau;

	/**
	 * The value for the wing_team field.
	 * @var        int
	 */
	protected $wing_team;

	/**
	 * The value for the graphic_arts field.
	 * @var        int
	 */
	protected $graphic_arts;

	/**
	 * The value for the event_planning field.
	 * @var        int
	 */
	protected $event_planning;

	/**
	 * The value for the web_internet field.
	 * @var        int
	 */
	protected $web_internet;

	/**
	 * The value for the foundation_contacts field.
	 * @var        int
	 */
	protected $foundation_contacts;

	/**
	 * The value for the aviation_contacts field.
	 * @var        int
	 */
	protected $aviation_contacts;

	/**
	 * The value for the printing field.
	 * @var        int
	 */
	protected $printing;

	/**
	 * The value for the member_aopa field.
	 * @var        int
	 */
	protected $member_aopa;

	/**
	 * The value for the member_kiwanis field.
	 * @var        int
	 */
	protected $member_kiwanis;

	/**
	 * The value for the member_rotary field.
	 * @var        int
	 */
	protected $member_rotary;

	/**
	 * The value for the member_lions field.
	 * @var        int
	 */
	protected $member_lions;

	/**
	 * The value for the person_id field.
	 * @var        int
	 */
	protected $person_id;

	/**
	 * The value for the novapointe_id field.
	 * @var        int
	 */
	protected $novapointe_id;

	/**
	 * The value for the premium_ship_date field.
	 * @var        string
	 */
	protected $premium_ship_date;

	/**
	 * The value for the premium_ship_method field.
	 * @var        string
	 */
	protected $premium_ship_method;

	/**
	 * The value for the premium_ship_cost field.
	 * @var        int
	 */
	protected $premium_ship_cost;

	/**
	 * The value for the premium_ship_tracking_number field.
	 * @var        string
	 */
	protected $premium_ship_tracking_number;

	/**
	 * The value for the referer_name field.
	 * @var        string
	 */
	protected $referer_name;

	/**
	 * The value for the referral_session_id field.
	 * @var        int
	 */
	protected $referral_session_id;

	/**
	 * The value for the aircraft_third_id field.
	 * @var        int
	 */
	protected $aircraft_third_id;

	/**
	 * The value for the aircraft_third_own field.
	 * @var        int
	 */
	protected $aircraft_third_own;

	/**
	 * The value for the aircraft_third_ice field.
	 * @var        int
	 */
	protected $aircraft_third_ice;

	/**
	 * The value for the aircraft_third_seats field.
	 * @var        int
	 */
	protected $aircraft_third_seats;

	/**
	 * The value for the aircraft_third_n_number field.
	 * @var        string
	 */
	protected $aircraft_third_n_number;

	/**
	 * The value for the ip_address field.
	 * @var        string
	 */
	protected $ip_address;

	/**
	 * The value for the pager_email field.
	 * @var        string
	 */
	protected $pager_email;

	/**
	 * The value for the member_99s field.
	 * @var        int
	 */
	protected $member_99s;

	/**
	 * The value for the member_wia field.
	 * @var        int
	 */
	protected $member_wia;

	/**
	 * The value for the mission_email_optin field.
	 * @var        int
	 */
	protected $mission_email_optin;

	/**
	 * The value for the hseats_interest field.
	 * @var        int
	 */
	protected $hseats_interest;

	/**
	 * The value for the master_application_id field.
	 * @var        int
	 */
	protected $master_application_id;

	/**
	 * The value for the master_member_id field.
	 * @var        int
	 */
	protected $master_member_id;

	/**
	 * The value for the referral_source_other field.
	 * @var        string
	 */
	protected $referral_source_other;

	/**
	 * The value for the secondary_email field.
	 * @var        string
	 */
	protected $secondary_email;

	/**
	 * The value for the payment_transaction_id field.
	 * @var        int
	 */
	protected $payment_transaction_id;

	/**
	 * The value for the middle_name field.
	 * @var        string
	 */
	protected $middle_name;

	/**
	 * The value for the suffix field.
	 * @var        string
	 */
	protected $suffix;

	/**
	 * The value for the nickname field.
	 * @var        string
	 */
	protected $nickname;

	/**
	 * The value for the veteran field.
	 * @var        int
	 */
	protected $veteran;

	/**
	 * The value for the gender field.
	 * @var        string
	 */
	protected $gender;

	/**
	 * The value for the emergency_contact_name field.
	 * @var        string
	 */
	protected $emergency_contact_name;

	/**
	 * The value for the emergency_contact_phone field.
	 * @var        string
	 */
	protected $emergency_contact_phone;

	/**
	 * The value for the country field.
	 * @var        string
	 */
	protected $country;

	/**
	 * The value for the drivers_license_state field.
	 * @var        string
	 */
	protected $drivers_license_state;

	/**
	 * The value for the drivers_license_number field.
	 * @var        string
	 */
	protected $drivers_license_number;

	/**
	 * The value for the ccard_number field.
	 * @var        string
	 */
	protected $ccard_number;

	/**
	 * The value for the ccard_code field.
	 * @var        string
	 */
	protected $ccard_code;

	/**
	 * The value for the ccard_expire field.
	 * @var        string
	 */
	protected $ccard_expire;

	/**
	 * The value for the is_complete field.
	 * Note: this column has a database default value of: -4
	 * @var        int
	 */
	protected $is_complete;

	/**
	 * The value for the member_class_id field.
	 * @var        int
	 */
	protected $member_class_id;

	/**
	 * The value for the wing_id field.
	 * @var        int
	 */
	protected $wing_id;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseApplicationTemp object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
		$this->is_complete = -4;
	}

	/**
	 * Get the [id] column value.
	 * 
	 * @return     int
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Get the [optionally formatted] temporal [application_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getApplicationDate($format = 'Y-m-d H:i:s')
	{
		if ($this->application_date === null) {
			return null;
		}


		if ($this->application_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->application_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->application_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [renewal] column value.
	 * 
	 * @return     int
	 */
	public function getRenewal()
	{
		return $this->renewal;
	}

	/**
	 * Get the [title] column value.
	 * 
	 * @return     string
	 */
	public function getTitle()
	{
		return $this->title;
	}

	/**
	 * Get the [first_name] column value.
	 * 
	 * @return     string
	 */
	public function getFirstName()
	{
		return $this->first_name;
	}

	/**
	 * Get the [last_name] column value.
	 * 
	 * @return     string
	 */
	public function getLastName()
	{
		return $this->last_name;
	}

	/**
	 * Get the [address1] column value.
	 * 
	 * @return     string
	 */
	public function getAddress1()
	{
		return $this->address1;
	}

	/**
	 * Get the [address2] column value.
	 * 
	 * @return     string
	 */
	public function getAddress2()
	{
		return $this->address2;
	}

	/**
	 * Get the [city] column value.
	 * 
	 * @return     string
	 */
	public function getCity()
	{
		return $this->city;
	}

	/**
	 * Get the [state] column value.
	 * 
	 * @return     string
	 */
	public function getState()
	{
		return $this->state;
	}

	/**
	 * Get the [zipcode] column value.
	 * 
	 * @return     string
	 */
	public function getZipcode()
	{
		return $this->zipcode;
	}

	/**
	 * Get the [day_phone] column value.
	 * 
	 * @return     string
	 */
	public function getDayPhone()
	{
		return $this->day_phone;
	}

	/**
	 * Get the [day_comment] column value.
	 * 
	 * @return     string
	 */
	public function getDayComment()
	{
		return $this->day_comment;
	}

	/**
	 * Get the [eve_phone] column value.
	 * 
	 * @return     string
	 */
	public function getEvePhone()
	{
		return $this->eve_phone;
	}

	/**
	 * Get the [eve_comment] column value.
	 * 
	 * @return     string
	 */
	public function getEveComment()
	{
		return $this->eve_comment;
	}

	/**
	 * Get the [mobile_phone] column value.
	 * 
	 * @return     string
	 */
	public function getMobilePhone()
	{
		return $this->mobile_phone;
	}

	/**
	 * Get the [mobile_comment] column value.
	 * 
	 * @return     string
	 */
	public function getMobileComment()
	{
		return $this->mobile_comment;
	}

	/**
	 * Get the [pager_phone] column value.
	 * 
	 * @return     string
	 */
	public function getPagerPhone()
	{
		return $this->pager_phone;
	}

	/**
	 * Get the [pager_comment] column value.
	 * 
	 * @return     string
	 */
	public function getPagerComment()
	{
		return $this->pager_comment;
	}

	/**
	 * Get the [fax_phone1] column value.
	 * 
	 * @return     string
	 */
	public function getFaxPhone1()
	{
		return $this->fax_phone1;
	}

	/**
	 * Get the [fax_comment1] column value.
	 * 
	 * @return     string
	 */
	public function getFaxComment1()
	{
		return $this->fax_comment1;
	}

	/**
	 * Get the [fax_phone2] column value.
	 * 
	 * @return     string
	 */
	public function getFaxPhone2()
	{
		return $this->fax_phone2;
	}

	/**
	 * Get the [fax_comment2] column value.
	 * 
	 * @return     string
	 */
	public function getFaxComment2()
	{
		return $this->fax_comment2;
	}

	/**
	 * Get the [other_phone] column value.
	 * 
	 * @return     string
	 */
	public function getOtherPhone()
	{
		return $this->other_phone;
	}

	/**
	 * Get the [other_comment] column value.
	 * 
	 * @return     string
	 */
	public function getOtherComment()
	{
		return $this->other_comment;
	}

	/**
	 * Get the [email] column value.
	 * 
	 * @return     string
	 */
	public function getEmail()
	{
		return $this->email;
	}

	/**
	 * Get the [spouse_first_name] column value.
	 * 
	 * @return     string
	 */
	public function getSpouseFirstName()
	{
		return $this->spouse_first_name;
	}

	/**
	 * Get the [spouse_last_name] column value.
	 * 
	 * @return     string
	 */
	public function getSpouseLastName()
	{
		return $this->spouse_last_name;
	}

	/**
	 * Get the [applicant_pilot] column value.
	 * 
	 * @return     int
	 */
	public function getApplicantPilot()
	{
		return $this->applicant_pilot;
	}

	/**
	 * Get the [spouse_pilot] column value.
	 * 
	 * @return     int
	 */
	public function getSpousePilot()
	{
		return $this->spouse_pilot;
	}

	/**
	 * Get the [applicant_copilot] column value.
	 * 
	 * @return     int
	 */
	public function getApplicantCopilot()
	{
		return $this->applicant_copilot;
	}

	/**
	 * Get the [languages_spoken] column value.
	 * 
	 * @return     string
	 */
	public function getLanguagesSpoken()
	{
		return $this->languages_spoken;
	}

	/**
	 * Get the [home_base] column value.
	 * 
	 * @return     string
	 */
	public function getHomeBase()
	{
		return $this->home_base;
	}

	/**
	 * Get the [fbo_name] column value.
	 * 
	 * @return     string
	 */
	public function getFboName()
	{
		return $this->fbo_name;
	}

	/**
	 * Get the [aircraft_primary_id] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftPrimaryId()
	{
		return $this->aircraft_primary_id;
	}

	/**
	 * Get the [aircraft_primary_own] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftPrimaryOwn()
	{
		return $this->aircraft_primary_own;
	}

	/**
	 * Get the [aircraft_primary_ice] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftPrimaryIce()
	{
		return $this->aircraft_primary_ice;
	}

	/**
	 * Get the [aircraft_primary_seats] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftPrimarySeats()
	{
		return $this->aircraft_primary_seats;
	}

	/**
	 * Get the [aircraft_primary_n_number] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftPrimaryNNumber()
	{
		return $this->aircraft_primary_n_number;
	}

	/**
	 * Get the [aircraft_secondary_id] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftSecondaryId()
	{
		return $this->aircraft_secondary_id;
	}

	/**
	 * Get the [aircraft_secondary_own] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftSecondaryOwn()
	{
		return $this->aircraft_secondary_own;
	}

	/**
	 * Get the [aircraft_secondary_ice] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftSecondaryIce()
	{
		return $this->aircraft_secondary_ice;
	}

	/**
	 * Get the [aircraft_secondary_seats] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftSecondarySeats()
	{
		return $this->aircraft_secondary_seats;
	}

	/**
	 * Get the [aircraft_secondary_n_number] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftSecondaryNNumber()
	{
		return $this->aircraft_secondary_n_number;
	}

	/**
	 * Get the [pilot_certificate] column value.
	 * 
	 * @return     string
	 */
	public function getPilotCertificate()
	{
		return $this->pilot_certificate;
	}

	/**
	 * Get the [ratings] column value.
	 * 
	 * @return     string
	 */
	public function getRatings()
	{
		return $this->ratings;
	}

	/**
	 * Get the [medical_class] column value.
	 * 
	 * @return     int
	 */
	public function getMedicalClass()
	{
		return $this->medical_class;
	}

	/**
	 * Get the [license_type] column value.
	 * 
	 * @return     string
	 */
	public function getLicenseType()
	{
		return $this->license_type;
	}

	/**
	 * Get the [total_hours] column value.
	 * 
	 * @return     int
	 */
	public function getTotalHours()
	{
		return $this->total_hours;
	}

	/**
	 * Get the [ifr_hours] column value.
	 * 
	 * @return     int
	 */
	public function getIfrHours()
	{
		return $this->ifr_hours;
	}

	/**
	 * Get the [multi_hours] column value.
	 * 
	 * @return     int
	 */
	public function getMultiHours()
	{
		return $this->multi_hours;
	}

	/**
	 * Get the [other_hours] column value.
	 * 
	 * @return     int
	 */
	public function getOtherHours()
	{
		return $this->other_hours;
	}

	/**
	 * Get the [optionally formatted] temporal [date_of_birth] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDateOfBirth($format = 'Y-m-d H:i:s')
	{
		if ($this->date_of_birth === null) {
			return null;
		}


		if ($this->date_of_birth === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->date_of_birth);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->date_of_birth, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [height] column value.
	 * 
	 * @return     int
	 */
	public function getHeight()
	{
		return $this->height;
	}

	/**
	 * Get the [weight] column value.
	 * 
	 * @return     int
	 */
	public function getWeight()
	{
		return $this->weight;
	}

	/**
	 * Get the [availability_weekdays] column value.
	 * 
	 * @return     int
	 */
	public function getAvailabilityWeekdays()
	{
		return $this->availability_weekdays;
	}

	/**
	 * Get the [availability_weeknights] column value.
	 * 
	 * @return     int
	 */
	public function getAvailabilityWeeknights()
	{
		return $this->availability_weeknights;
	}

	/**
	 * Get the [availability_weekends] column value.
	 * 
	 * @return     int
	 */
	public function getAvailabilityWeekends()
	{
		return $this->availability_weekends;
	}

	/**
	 * Get the [availability_notice] column value.
	 * 
	 * @return     int
	 */
	public function getAvailabilityNotice()
	{
		return $this->availability_notice;
	}

	/**
	 * Get the [availability_last_minute] column value.
	 * 
	 * @return     int
	 */
	public function getAvailabilityLastMinute()
	{
		return $this->availability_last_minute;
	}

	/**
	 * Get the [availability_copilot] column value.
	 * 
	 * @return     int
	 */
	public function getAvailabilityCopilot()
	{
		return $this->availability_copilot;
	}

	/**
	 * Get the [affirmation_agreed] column value.
	 * 
	 * @return     int
	 */
	public function getAffirmationAgreed()
	{
		return $this->affirmation_agreed;
	}

	/**
	 * Get the [insurance_agreed] column value.
	 * 
	 * @return     int
	 */
	public function getInsuranceAgreed()
	{
		return $this->insurance_agreed;
	}

	/**
	 * Get the [volunteer_interest] column value.
	 * 
	 * @return     string
	 */
	public function getVolunteerInterest()
	{
		return $this->volunteer_interest;
	}

	/**
	 * Get the [company_name] column value.
	 * 
	 * @return     string
	 */
	public function getCompanyName()
	{
		return $this->company_name;
	}

	/**
	 * Get the [company_position] column value.
	 * 
	 * @return     string
	 */
	public function getCompanyPosition()
	{
		return $this->company_position;
	}

	/**
	 * Get the [company_match_funds] column value.
	 * 
	 * @return     int
	 */
	public function getCompanyMatchFunds()
	{
		return $this->company_match_funds;
	}

	/**
	 * Get the [company_business_category_id] column value.
	 * 
	 * @return     int
	 */
	public function getCompanyBusinessCategoryId()
	{
		return $this->company_business_category_id;
	}

	/**
	 * Get the [referral_source] column value.
	 * 
	 * @return     int
	 */
	public function getReferralSource()
	{
		return $this->referral_source;
	}

	/**
	 * Get the [premium_choice] column value.
	 * 
	 * @return     int
	 */
	public function getPremiumChoice()
	{
		return $this->premium_choice;
	}

	/**
	 * Get the [premium_size] column value.
	 * 
	 * @return     int
	 */
	public function getPremiumSize()
	{
		return $this->premium_size;
	}

	/**
	 * Get the [dues_amount_paid] column value.
	 * 
	 * @return     int
	 */
	public function getDuesAmountPaid()
	{
		return $this->dues_amount_paid;
	}

	/**
	 * Get the [donation_amount_paid] column value.
	 * 
	 * @return     int
	 */
	public function getDonationAmountPaid()
	{
		return $this->donation_amount_paid;
	}

	/**
	 * Get the [method_of_payment_id] column value.
	 * 
	 * @return     int
	 */
	public function getMethodOfPaymentId()
	{
		return $this->method_of_payment_id;
	}

	/**
	 * Get the [ccard_approval_number] column value.
	 * 
	 * @return     string
	 */
	public function getCcardApprovalNumber()
	{
		return $this->ccard_approval_number;
	}

	/**
	 * Get the [ccard_error_code] column value.
	 * 
	 * @return     string
	 */
	public function getCcardErrorCode()
	{
		return $this->ccard_error_code;
	}

	/**
	 * Get the [ccard_avs_result] column value.
	 * 
	 * @return     string
	 */
	public function getCcardAvsResult()
	{
		return $this->ccard_avs_result;
	}

	/**
	 * Get the [optionally formatted] temporal [processed_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getProcessedDate($format = 'Y-m-d H:i:s')
	{
		if ($this->processed_date === null) {
			return null;
		}


		if ($this->processed_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->processed_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->processed_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [member_id] column value.
	 * 
	 * @return     int
	 */
	public function getMemberId()
	{
		return $this->member_id;
	}

	/**
	 * Get the [mission_orientation] column value.
	 * 
	 * @return     int
	 */
	public function getMissionOrientation()
	{
		return $this->mission_orientation;
	}

	/**
	 * Get the [mission_coordination] column value.
	 * 
	 * @return     int
	 */
	public function getMissionCoordination()
	{
		return $this->mission_coordination;
	}

	/**
	 * Get the [pilot_recruitment] column value.
	 * 
	 * @return     int
	 */
	public function getPilotRecruitment()
	{
		return $this->pilot_recruitment;
	}

	/**
	 * Get the [fund_raising] column value.
	 * 
	 * @return     int
	 */
	public function getFundRaising()
	{
		return $this->fund_raising;
	}

	/**
	 * Get the [celebrity_contacts] column value.
	 * 
	 * @return     int
	 */
	public function getCelebrityContacts()
	{
		return $this->celebrity_contacts;
	}

	/**
	 * Get the [hospital_outreach] column value.
	 * 
	 * @return     int
	 */
	public function getHospitalOutreach()
	{
		return $this->hospital_outreach;
	}

	/**
	 * Get the [media_relations] column value.
	 * 
	 * @return     int
	 */
	public function getMediaRelations()
	{
		return $this->media_relations;
	}

	/**
	 * Get the [telephone_work] column value.
	 * 
	 * @return     int
	 */
	public function getTelephoneWork()
	{
		return $this->telephone_work;
	}

	/**
	 * Get the [computers] column value.
	 * 
	 * @return     int
	 */
	public function getComputers()
	{
		return $this->computers;
	}

	/**
	 * Get the [clerical] column value.
	 * 
	 * @return     int
	 */
	public function getClerical()
	{
		return $this->clerical;
	}

	/**
	 * Get the [publicity] column value.
	 * 
	 * @return     int
	 */
	public function getPublicity()
	{
		return $this->publicity;
	}

	/**
	 * Get the [writing] column value.
	 * 
	 * @return     int
	 */
	public function getWriting()
	{
		return $this->writing;
	}

	/**
	 * Get the [speakers_bureau] column value.
	 * 
	 * @return     int
	 */
	public function getSpeakersBureau()
	{
		return $this->speakers_bureau;
	}

	/**
	 * Get the [wing_team] column value.
	 * 
	 * @return     int
	 */
	public function getWingTeam()
	{
		return $this->wing_team;
	}

	/**
	 * Get the [graphic_arts] column value.
	 * 
	 * @return     int
	 */
	public function getGraphicArts()
	{
		return $this->graphic_arts;
	}

	/**
	 * Get the [event_planning] column value.
	 * 
	 * @return     int
	 */
	public function getEventPlanning()
	{
		return $this->event_planning;
	}

	/**
	 * Get the [web_internet] column value.
	 * 
	 * @return     int
	 */
	public function getWebInternet()
	{
		return $this->web_internet;
	}

	/**
	 * Get the [foundation_contacts] column value.
	 * 
	 * @return     int
	 */
	public function getFoundationContacts()
	{
		return $this->foundation_contacts;
	}

	/**
	 * Get the [aviation_contacts] column value.
	 * 
	 * @return     int
	 */
	public function getAviationContacts()
	{
		return $this->aviation_contacts;
	}

	/**
	 * Get the [printing] column value.
	 * 
	 * @return     int
	 */
	public function getPrinting()
	{
		return $this->printing;
	}

	/**
	 * Get the [member_aopa] column value.
	 * 
	 * @return     int
	 */
	public function getMemberAopa()
	{
		return $this->member_aopa;
	}

	/**
	 * Get the [member_kiwanis] column value.
	 * 
	 * @return     int
	 */
	public function getMemberKiwanis()
	{
		return $this->member_kiwanis;
	}

	/**
	 * Get the [member_rotary] column value.
	 * 
	 * @return     int
	 */
	public function getMemberRotary()
	{
		return $this->member_rotary;
	}

	/**
	 * Get the [member_lions] column value.
	 * 
	 * @return     int
	 */
	public function getMemberLions()
	{
		return $this->member_lions;
	}

	/**
	 * Get the [person_id] column value.
	 * 
	 * @return     int
	 */
	public function getPersonId()
	{
		return $this->person_id;
	}

	/**
	 * Get the [novapointe_id] column value.
	 * 
	 * @return     int
	 */
	public function getNovapointeId()
	{
		return $this->novapointe_id;
	}

	/**
	 * Get the [optionally formatted] temporal [premium_ship_date] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00 00:00:00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getPremiumShipDate($format = 'Y-m-d H:i:s')
	{
		if ($this->premium_ship_date === null) {
			return null;
		}


		if ($this->premium_ship_date === '0000-00-00 00:00:00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->premium_ship_date);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->premium_ship_date, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [premium_ship_method] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumShipMethod()
	{
		return $this->premium_ship_method;
	}

	/**
	 * Get the [premium_ship_cost] column value.
	 * 
	 * @return     int
	 */
	public function getPremiumShipCost()
	{
		return $this->premium_ship_cost;
	}

	/**
	 * Get the [premium_ship_tracking_number] column value.
	 * 
	 * @return     string
	 */
	public function getPremiumShipTrackingNumber()
	{
		return $this->premium_ship_tracking_number;
	}

	/**
	 * Get the [referer_name] column value.
	 * 
	 * @return     string
	 */
	public function getRefererName()
	{
		return $this->referer_name;
	}

	/**
	 * Get the [referral_session_id] column value.
	 * 
	 * @return     int
	 */
	public function getReferralSessionId()
	{
		return $this->referral_session_id;
	}

	/**
	 * Get the [aircraft_third_id] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftThirdId()
	{
		return $this->aircraft_third_id;
	}

	/**
	 * Get the [aircraft_third_own] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftThirdOwn()
	{
		return $this->aircraft_third_own;
	}

	/**
	 * Get the [aircraft_third_ice] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftThirdIce()
	{
		return $this->aircraft_third_ice;
	}

	/**
	 * Get the [aircraft_third_seats] column value.
	 * 
	 * @return     int
	 */
	public function getAircraftThirdSeats()
	{
		return $this->aircraft_third_seats;
	}

	/**
	 * Get the [aircraft_third_n_number] column value.
	 * 
	 * @return     string
	 */
	public function getAircraftThirdNNumber()
	{
		return $this->aircraft_third_n_number;
	}

	/**
	 * Get the [ip_address] column value.
	 * 
	 * @return     string
	 */
	public function getIpAddress()
	{
		return $this->ip_address;
	}

	/**
	 * Get the [pager_email] column value.
	 * 
	 * @return     string
	 */
	public function getPagerEmail()
	{
		return $this->pager_email;
	}

	/**
	 * Get the [member_99s] column value.
	 * 
	 * @return     int
	 */
	public function getMember99s()
	{
		return $this->member_99s;
	}

	/**
	 * Get the [member_wia] column value.
	 * 
	 * @return     int
	 */
	public function getMemberWia()
	{
		return $this->member_wia;
	}

	/**
	 * Get the [mission_email_optin] column value.
	 * 
	 * @return     int
	 */
	public function getMissionEmailOptin()
	{
		return $this->mission_email_optin;
	}

	/**
	 * Get the [hseats_interest] column value.
	 * 
	 * @return     int
	 */
	public function getHseatsInterest()
	{
		return $this->hseats_interest;
	}

	/**
	 * Get the [master_application_id] column value.
	 * 
	 * @return     int
	 */
	public function getMasterApplicationId()
	{
		return $this->master_application_id;
	}

	/**
	 * Get the [master_member_id] column value.
	 * 
	 * @return     int
	 */
	public function getMasterMemberId()
	{
		return $this->master_member_id;
	}

	/**
	 * Get the [referral_source_other] column value.
	 * 
	 * @return     string
	 */
	public function getReferralSourceOther()
	{
		return $this->referral_source_other;
	}

	/**
	 * Get the [secondary_email] column value.
	 * 
	 * @return     string
	 */
	public function getSecondaryEmail()
	{
		return $this->secondary_email;
	}

	/**
	 * Get the [payment_transaction_id] column value.
	 * 
	 * @return     int
	 */
	public function getPaymentTransactionId()
	{
		return $this->payment_transaction_id;
	}

	/**
	 * Get the [middle_name] column value.
	 * 
	 * @return     string
	 */
	public function getMiddleName()
	{
		return $this->middle_name;
	}

	/**
	 * Get the [suffix] column value.
	 * 
	 * @return     string
	 */
	public function getSuffix()
	{
		return $this->suffix;
	}

	/**
	 * Get the [nickname] column value.
	 * 
	 * @return     string
	 */
	public function getNickname()
	{
		return $this->nickname;
	}

	/**
	 * Get the [veteran] column value.
	 * 
	 * @return     int
	 */
	public function getVeteran()
	{
		return $this->veteran;
	}

	/**
	 * Get the [gender] column value.
	 * 
	 * @return     string
	 */
	public function getGender()
	{
		return $this->gender;
	}

	/**
	 * Get the [emergency_contact_name] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyContactName()
	{
		return $this->emergency_contact_name;
	}

	/**
	 * Get the [emergency_contact_phone] column value.
	 * 
	 * @return     string
	 */
	public function getEmergencyContactPhone()
	{
		return $this->emergency_contact_phone;
	}

	/**
	 * Get the [country] column value.
	 * 
	 * @return     string
	 */
	public function getCountry()
	{
		return $this->country;
	}

	/**
	 * Get the [drivers_license_state] column value.
	 * 
	 * @return     string
	 */
	public function getDriversLicenseState()
	{
		return $this->drivers_license_state;
	}

	/**
	 * Get the [drivers_license_number] column value.
	 * 
	 * @return     string
	 */
	public function getDriversLicenseNumber()
	{
		return $this->drivers_license_number;
	}

	/**
	 * Get the [ccard_number] column value.
	 * 
	 * @return     string
	 */
	public function getCcardNumber()
	{
		return $this->ccard_number;
	}

	/**
	 * Get the [ccard_code] column value.
	 * 
	 * @return     string
	 */
	public function getCcardCode()
	{
		return $this->ccard_code;
	}

	/**
	 * Get the [optionally formatted] temporal [ccard_expire] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getCcardExpire($format = 'Y-m-d')
	{
		if ($this->ccard_expire === null) {
			return null;
		}


		if ($this->ccard_expire === '0000-00-00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->ccard_expire);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->ccard_expire, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [is_complete] column value.
	 * 
	 * @return     int
	 */
	public function getIsComplete()
	{
		return $this->is_complete;
	}

	/**
	 * Get the [member_class_id] column value.
	 * 
	 * @return     int
	 */
	public function getMemberClassId()
	{
		return $this->member_class_id;
	}

	/**
	 * Get the [wing_id] column value.
	 * 
	 * @return     int
	 */
	public function getWingId()
	{
		return $this->wing_id;
	}

	/**
	 * Set the value of [id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id !== $v) {
			$this->id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::ID;
		}

		return $this;
	} // setId()

	/**
	 * Sets the value of [application_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setApplicationDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->application_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->application_date !== null && $tmpDt = new DateTime($this->application_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->application_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = ApplicationTempPeer::APPLICATION_DATE;
			}
		} // if either are not null

		return $this;
	} // setApplicationDate()

	/**
	 * Set the value of [renewal] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setRenewal($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->renewal !== $v) {
			$this->renewal = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::RENEWAL;
		}

		return $this;
	} // setRenewal()

	/**
	 * Set the value of [title] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setTitle($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->title !== $v) {
			$this->title = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::TITLE;
		}

		return $this;
	} // setTitle()

	/**
	 * Set the value of [first_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFirstName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->first_name !== $v) {
			$this->first_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FIRST_NAME;
		}

		return $this;
	} // setFirstName()

	/**
	 * Set the value of [last_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setLastName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->last_name !== $v) {
			$this->last_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::LAST_NAME;
		}

		return $this;
	} // setLastName()

	/**
	 * Set the value of [address1] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAddress1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->address1 !== $v) {
			$this->address1 = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::ADDRESS1;
		}

		return $this;
	} // setAddress1()

	/**
	 * Set the value of [address2] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAddress2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->address2 !== $v) {
			$this->address2 = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::ADDRESS2;
		}

		return $this;
	} // setAddress2()

	/**
	 * Set the value of [city] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->city !== $v) {
			$this->city = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CITY;
		}

		return $this;
	} // setCity()

	/**
	 * Set the value of [state] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->state !== $v) {
			$this->state = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::STATE;
		}

		return $this;
	} // setState()

	/**
	 * Set the value of [zipcode] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setZipcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->zipcode !== $v) {
			$this->zipcode = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::ZIPCODE;
		}

		return $this;
	} // setZipcode()

	/**
	 * Set the value of [day_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDayPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->day_phone !== $v) {
			$this->day_phone = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::DAY_PHONE;
		}

		return $this;
	} // setDayPhone()

	/**
	 * Set the value of [day_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDayComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->day_comment !== $v) {
			$this->day_comment = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::DAY_COMMENT;
		}

		return $this;
	} // setDayComment()

	/**
	 * Set the value of [eve_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setEvePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->eve_phone !== $v) {
			$this->eve_phone = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::EVE_PHONE;
		}

		return $this;
	} // setEvePhone()

	/**
	 * Set the value of [eve_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setEveComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->eve_comment !== $v) {
			$this->eve_comment = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::EVE_COMMENT;
		}

		return $this;
	} // setEveComment()

	/**
	 * Set the value of [mobile_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMobilePhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mobile_phone !== $v) {
			$this->mobile_phone = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MOBILE_PHONE;
		}

		return $this;
	} // setMobilePhone()

	/**
	 * Set the value of [mobile_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMobileComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mobile_comment !== $v) {
			$this->mobile_comment = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MOBILE_COMMENT;
		}

		return $this;
	} // setMobileComment()

	/**
	 * Set the value of [pager_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPagerPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pager_phone !== $v) {
			$this->pager_phone = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PAGER_PHONE;
		}

		return $this;
	} // setPagerPhone()

	/**
	 * Set the value of [pager_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPagerComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pager_comment !== $v) {
			$this->pager_comment = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PAGER_COMMENT;
		}

		return $this;
	} // setPagerComment()

	/**
	 * Set the value of [fax_phone1] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFaxPhone1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fax_phone1 !== $v) {
			$this->fax_phone1 = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FAX_PHONE1;
		}

		return $this;
	} // setFaxPhone1()

	/**
	 * Set the value of [fax_comment1] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFaxComment1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fax_comment1 !== $v) {
			$this->fax_comment1 = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FAX_COMMENT1;
		}

		return $this;
	} // setFaxComment1()

	/**
	 * Set the value of [fax_phone2] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFaxPhone2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fax_phone2 !== $v) {
			$this->fax_phone2 = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FAX_PHONE2;
		}

		return $this;
	} // setFaxPhone2()

	/**
	 * Set the value of [fax_comment2] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFaxComment2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fax_comment2 !== $v) {
			$this->fax_comment2 = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FAX_COMMENT2;
		}

		return $this;
	} // setFaxComment2()

	/**
	 * Set the value of [other_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setOtherPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->other_phone !== $v) {
			$this->other_phone = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::OTHER_PHONE;
		}

		return $this;
	} // setOtherPhone()

	/**
	 * Set the value of [other_comment] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setOtherComment($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->other_comment !== $v) {
			$this->other_comment = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::OTHER_COMMENT;
		}

		return $this;
	} // setOtherComment()

	/**
	 * Set the value of [email] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->email !== $v) {
			$this->email = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::EMAIL;
		}

		return $this;
	} // setEmail()

	/**
	 * Set the value of [spouse_first_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setSpouseFirstName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->spouse_first_name !== $v) {
			$this->spouse_first_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::SPOUSE_FIRST_NAME;
		}

		return $this;
	} // setSpouseFirstName()

	/**
	 * Set the value of [spouse_last_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setSpouseLastName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->spouse_last_name !== $v) {
			$this->spouse_last_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::SPOUSE_LAST_NAME;
		}

		return $this;
	} // setSpouseLastName()

	/**
	 * Set the value of [applicant_pilot] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setApplicantPilot($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->applicant_pilot !== $v) {
			$this->applicant_pilot = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::APPLICANT_PILOT;
		}

		return $this;
	} // setApplicantPilot()

	/**
	 * Set the value of [spouse_pilot] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setSpousePilot($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->spouse_pilot !== $v) {
			$this->spouse_pilot = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::SPOUSE_PILOT;
		}

		return $this;
	} // setSpousePilot()

	/**
	 * Set the value of [applicant_copilot] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setApplicantCopilot($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->applicant_copilot !== $v) {
			$this->applicant_copilot = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::APPLICANT_COPILOT;
		}

		return $this;
	} // setApplicantCopilot()

	/**
	 * Set the value of [languages_spoken] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setLanguagesSpoken($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->languages_spoken !== $v) {
			$this->languages_spoken = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::LANGUAGES_SPOKEN;
		}

		return $this;
	} // setLanguagesSpoken()

	/**
	 * Set the value of [home_base] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setHomeBase($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->home_base !== $v) {
			$this->home_base = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::HOME_BASE;
		}

		return $this;
	} // setHomeBase()

	/**
	 * Set the value of [fbo_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFboName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fbo_name !== $v) {
			$this->fbo_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FBO_NAME;
		}

		return $this;
	} // setFboName()

	/**
	 * Set the value of [aircraft_primary_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftPrimaryId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_primary_id !== $v) {
			$this->aircraft_primary_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_PRIMARY_ID;
		}

		return $this;
	} // setAircraftPrimaryId()

	/**
	 * Set the value of [aircraft_primary_own] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftPrimaryOwn($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_primary_own !== $v) {
			$this->aircraft_primary_own = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_PRIMARY_OWN;
		}

		return $this;
	} // setAircraftPrimaryOwn()

	/**
	 * Set the value of [aircraft_primary_ice] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftPrimaryIce($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_primary_ice !== $v) {
			$this->aircraft_primary_ice = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_PRIMARY_ICE;
		}

		return $this;
	} // setAircraftPrimaryIce()

	/**
	 * Set the value of [aircraft_primary_seats] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftPrimarySeats($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_primary_seats !== $v) {
			$this->aircraft_primary_seats = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_PRIMARY_SEATS;
		}

		return $this;
	} // setAircraftPrimarySeats()

	/**
	 * Set the value of [aircraft_primary_n_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftPrimaryNNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraft_primary_n_number !== $v) {
			$this->aircraft_primary_n_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_PRIMARY_N_NUMBER;
		}

		return $this;
	} // setAircraftPrimaryNNumber()

	/**
	 * Set the value of [aircraft_secondary_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftSecondaryId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_secondary_id !== $v) {
			$this->aircraft_secondary_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_SECONDARY_ID;
		}

		return $this;
	} // setAircraftSecondaryId()

	/**
	 * Set the value of [aircraft_secondary_own] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftSecondaryOwn($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_secondary_own !== $v) {
			$this->aircraft_secondary_own = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_SECONDARY_OWN;
		}

		return $this;
	} // setAircraftSecondaryOwn()

	/**
	 * Set the value of [aircraft_secondary_ice] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftSecondaryIce($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_secondary_ice !== $v) {
			$this->aircraft_secondary_ice = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_SECONDARY_ICE;
		}

		return $this;
	} // setAircraftSecondaryIce()

	/**
	 * Set the value of [aircraft_secondary_seats] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftSecondarySeats($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_secondary_seats !== $v) {
			$this->aircraft_secondary_seats = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_SECONDARY_SEATS;
		}

		return $this;
	} // setAircraftSecondarySeats()

	/**
	 * Set the value of [aircraft_secondary_n_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftSecondaryNNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraft_secondary_n_number !== $v) {
			$this->aircraft_secondary_n_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_SECONDARY_N_NUMBER;
		}

		return $this;
	} // setAircraftSecondaryNNumber()

	/**
	 * Set the value of [pilot_certificate] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPilotCertificate($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pilot_certificate !== $v) {
			$this->pilot_certificate = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PILOT_CERTIFICATE;
		}

		return $this;
	} // setPilotCertificate()

	/**
	 * Set the value of [ratings] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setRatings($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ratings !== $v) {
			$this->ratings = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::RATINGS;
		}

		return $this;
	} // setRatings()

	/**
	 * Set the value of [medical_class] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMedicalClass($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->medical_class !== $v) {
			$this->medical_class = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEDICAL_CLASS;
		}

		return $this;
	} // setMedicalClass()

	/**
	 * Set the value of [license_type] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setLicenseType($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->license_type !== $v) {
			$this->license_type = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::LICENSE_TYPE;
		}

		return $this;
	} // setLicenseType()

	/**
	 * Set the value of [total_hours] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setTotalHours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->total_hours !== $v) {
			$this->total_hours = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::TOTAL_HOURS;
		}

		return $this;
	} // setTotalHours()

	/**
	 * Set the value of [ifr_hours] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setIfrHours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ifr_hours !== $v) {
			$this->ifr_hours = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::IFR_HOURS;
		}

		return $this;
	} // setIfrHours()

	/**
	 * Set the value of [multi_hours] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMultiHours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->multi_hours !== $v) {
			$this->multi_hours = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MULTI_HOURS;
		}

		return $this;
	} // setMultiHours()

	/**
	 * Set the value of [other_hours] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setOtherHours($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->other_hours !== $v) {
			$this->other_hours = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::OTHER_HOURS;
		}

		return $this;
	} // setOtherHours()

	/**
	 * Sets the value of [date_of_birth] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDateOfBirth($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->date_of_birth !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->date_of_birth !== null && $tmpDt = new DateTime($this->date_of_birth)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->date_of_birth = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = ApplicationTempPeer::DATE_OF_BIRTH;
			}
		} // if either are not null

		return $this;
	} // setDateOfBirth()

	/**
	 * Set the value of [height] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setHeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->height !== $v) {
			$this->height = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::HEIGHT;
		}

		return $this;
	} // setHeight()

	/**
	 * Set the value of [weight] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setWeight($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->weight !== $v) {
			$this->weight = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::WEIGHT;
		}

		return $this;
	} // setWeight()

	/**
	 * Set the value of [availability_weekdays] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAvailabilityWeekdays($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->availability_weekdays !== $v) {
			$this->availability_weekdays = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVAILABILITY_WEEKDAYS;
		}

		return $this;
	} // setAvailabilityWeekdays()

	/**
	 * Set the value of [availability_weeknights] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAvailabilityWeeknights($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->availability_weeknights !== $v) {
			$this->availability_weeknights = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVAILABILITY_WEEKNIGHTS;
		}

		return $this;
	} // setAvailabilityWeeknights()

	/**
	 * Set the value of [availability_weekends] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAvailabilityWeekends($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->availability_weekends !== $v) {
			$this->availability_weekends = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVAILABILITY_WEEKENDS;
		}

		return $this;
	} // setAvailabilityWeekends()

	/**
	 * Set the value of [availability_notice] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAvailabilityNotice($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->availability_notice !== $v) {
			$this->availability_notice = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVAILABILITY_NOTICE;
		}

		return $this;
	} // setAvailabilityNotice()

	/**
	 * Set the value of [availability_last_minute] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAvailabilityLastMinute($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->availability_last_minute !== $v) {
			$this->availability_last_minute = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVAILABILITY_LAST_MINUTE;
		}

		return $this;
	} // setAvailabilityLastMinute()

	/**
	 * Set the value of [availability_copilot] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAvailabilityCopilot($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->availability_copilot !== $v) {
			$this->availability_copilot = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVAILABILITY_COPILOT;
		}

		return $this;
	} // setAvailabilityCopilot()

	/**
	 * Set the value of [affirmation_agreed] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAffirmationAgreed($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->affirmation_agreed !== $v) {
			$this->affirmation_agreed = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AFFIRMATION_AGREED;
		}

		return $this;
	} // setAffirmationAgreed()

	/**
	 * Set the value of [insurance_agreed] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setInsuranceAgreed($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->insurance_agreed !== $v) {
			$this->insurance_agreed = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::INSURANCE_AGREED;
		}

		return $this;
	} // setInsuranceAgreed()

	/**
	 * Set the value of [volunteer_interest] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setVolunteerInterest($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->volunteer_interest !== $v) {
			$this->volunteer_interest = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::VOLUNTEER_INTEREST;
		}

		return $this;
	} // setVolunteerInterest()

	/**
	 * Set the value of [company_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCompanyName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->company_name !== $v) {
			$this->company_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::COMPANY_NAME;
		}

		return $this;
	} // setCompanyName()

	/**
	 * Set the value of [company_position] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCompanyPosition($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->company_position !== $v) {
			$this->company_position = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::COMPANY_POSITION;
		}

		return $this;
	} // setCompanyPosition()

	/**
	 * Set the value of [company_match_funds] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCompanyMatchFunds($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->company_match_funds !== $v) {
			$this->company_match_funds = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::COMPANY_MATCH_FUNDS;
		}

		return $this;
	} // setCompanyMatchFunds()

	/**
	 * Set the value of [company_business_category_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCompanyBusinessCategoryId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->company_business_category_id !== $v) {
			$this->company_business_category_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::COMPANY_BUSINESS_CATEGORY_ID;
		}

		return $this;
	} // setCompanyBusinessCategoryId()

	/**
	 * Set the value of [referral_source] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setReferralSource($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->referral_source !== $v) {
			$this->referral_source = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::REFERRAL_SOURCE;
		}

		return $this;
	} // setReferralSource()

	/**
	 * Set the value of [premium_choice] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPremiumChoice($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->premium_choice !== $v) {
			$this->premium_choice = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PREMIUM_CHOICE;
		}

		return $this;
	} // setPremiumChoice()

	/**
	 * Set the value of [premium_size] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPremiumSize($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->premium_size !== $v) {
			$this->premium_size = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PREMIUM_SIZE;
		}

		return $this;
	} // setPremiumSize()

	/**
	 * Set the value of [dues_amount_paid] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDuesAmountPaid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dues_amount_paid !== $v) {
			$this->dues_amount_paid = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::DUES_AMOUNT_PAID;
		}

		return $this;
	} // setDuesAmountPaid()

	/**
	 * Set the value of [donation_amount_paid] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDonationAmountPaid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->donation_amount_paid !== $v) {
			$this->donation_amount_paid = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::DONATION_AMOUNT_PAID;
		}

		return $this;
	} // setDonationAmountPaid()

	/**
	 * Set the value of [method_of_payment_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMethodOfPaymentId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->method_of_payment_id !== $v) {
			$this->method_of_payment_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::METHOD_OF_PAYMENT_ID;
		}

		return $this;
	} // setMethodOfPaymentId()

	/**
	 * Set the value of [ccard_approval_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCcardApprovalNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ccard_approval_number !== $v) {
			$this->ccard_approval_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CCARD_APPROVAL_NUMBER;
		}

		return $this;
	} // setCcardApprovalNumber()

	/**
	 * Set the value of [ccard_error_code] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCcardErrorCode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ccard_error_code !== $v) {
			$this->ccard_error_code = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CCARD_ERROR_CODE;
		}

		return $this;
	} // setCcardErrorCode()

	/**
	 * Set the value of [ccard_avs_result] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCcardAvsResult($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ccard_avs_result !== $v) {
			$this->ccard_avs_result = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CCARD_AVS_RESULT;
		}

		return $this;
	} // setCcardAvsResult()

	/**
	 * Sets the value of [processed_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setProcessedDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->processed_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->processed_date !== null && $tmpDt = new DateTime($this->processed_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->processed_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = ApplicationTempPeer::PROCESSED_DATE;
			}
		} // if either are not null

		return $this;
	} // setProcessedDate()

	/**
	 * Set the value of [member_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_id !== $v) {
			$this->member_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_ID;
		}

		return $this;
	} // setMemberId()

	/**
	 * Set the value of [mission_orientation] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMissionOrientation($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->mission_orientation !== $v) {
			$this->mission_orientation = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MISSION_ORIENTATION;
		}

		return $this;
	} // setMissionOrientation()

	/**
	 * Set the value of [mission_coordination] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMissionCoordination($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->mission_coordination !== $v) {
			$this->mission_coordination = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MISSION_COORDINATION;
		}

		return $this;
	} // setMissionCoordination()

	/**
	 * Set the value of [pilot_recruitment] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPilotRecruitment($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pilot_recruitment !== $v) {
			$this->pilot_recruitment = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PILOT_RECRUITMENT;
		}

		return $this;
	} // setPilotRecruitment()

	/**
	 * Set the value of [fund_raising] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFundRaising($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->fund_raising !== $v) {
			$this->fund_raising = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FUND_RAISING;
		}

		return $this;
	} // setFundRaising()

	/**
	 * Set the value of [celebrity_contacts] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCelebrityContacts($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->celebrity_contacts !== $v) {
			$this->celebrity_contacts = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CELEBRITY_CONTACTS;
		}

		return $this;
	} // setCelebrityContacts()

	/**
	 * Set the value of [hospital_outreach] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setHospitalOutreach($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->hospital_outreach !== $v) {
			$this->hospital_outreach = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::HOSPITAL_OUTREACH;
		}

		return $this;
	} // setHospitalOutreach()

	/**
	 * Set the value of [media_relations] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMediaRelations($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->media_relations !== $v) {
			$this->media_relations = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEDIA_RELATIONS;
		}

		return $this;
	} // setMediaRelations()

	/**
	 * Set the value of [telephone_work] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setTelephoneWork($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->telephone_work !== $v) {
			$this->telephone_work = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::TELEPHONE_WORK;
		}

		return $this;
	} // setTelephoneWork()

	/**
	 * Set the value of [computers] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setComputers($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->computers !== $v) {
			$this->computers = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::COMPUTERS;
		}

		return $this;
	} // setComputers()

	/**
	 * Set the value of [clerical] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setClerical($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->clerical !== $v) {
			$this->clerical = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CLERICAL;
		}

		return $this;
	} // setClerical()

	/**
	 * Set the value of [publicity] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPublicity($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->publicity !== $v) {
			$this->publicity = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PUBLICITY;
		}

		return $this;
	} // setPublicity()

	/**
	 * Set the value of [writing] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setWriting($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->writing !== $v) {
			$this->writing = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::WRITING;
		}

		return $this;
	} // setWriting()

	/**
	 * Set the value of [speakers_bureau] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setSpeakersBureau($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->speakers_bureau !== $v) {
			$this->speakers_bureau = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::SPEAKERS_BUREAU;
		}

		return $this;
	} // setSpeakersBureau()

	/**
	 * Set the value of [wing_team] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setWingTeam($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->wing_team !== $v) {
			$this->wing_team = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::WING_TEAM;
		}

		return $this;
	} // setWingTeam()

	/**
	 * Set the value of [graphic_arts] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setGraphicArts($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->graphic_arts !== $v) {
			$this->graphic_arts = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::GRAPHIC_ARTS;
		}

		return $this;
	} // setGraphicArts()

	/**
	 * Set the value of [event_planning] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setEventPlanning($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->event_planning !== $v) {
			$this->event_planning = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::EVENT_PLANNING;
		}

		return $this;
	} // setEventPlanning()

	/**
	 * Set the value of [web_internet] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setWebInternet($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->web_internet !== $v) {
			$this->web_internet = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::WEB_INTERNET;
		}

		return $this;
	} // setWebInternet()

	/**
	 * Set the value of [foundation_contacts] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setFoundationContacts($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->foundation_contacts !== $v) {
			$this->foundation_contacts = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::FOUNDATION_CONTACTS;
		}

		return $this;
	} // setFoundationContacts()

	/**
	 * Set the value of [aviation_contacts] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAviationContacts($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aviation_contacts !== $v) {
			$this->aviation_contacts = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AVIATION_CONTACTS;
		}

		return $this;
	} // setAviationContacts()

	/**
	 * Set the value of [printing] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPrinting($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->printing !== $v) {
			$this->printing = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PRINTING;
		}

		return $this;
	} // setPrinting()

	/**
	 * Set the value of [member_aopa] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberAopa($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_aopa !== $v) {
			$this->member_aopa = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_AOPA;
		}

		return $this;
	} // setMemberAopa()

	/**
	 * Set the value of [member_kiwanis] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberKiwanis($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_kiwanis !== $v) {
			$this->member_kiwanis = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_KIWANIS;
		}

		return $this;
	} // setMemberKiwanis()

	/**
	 * Set the value of [member_rotary] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberRotary($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_rotary !== $v) {
			$this->member_rotary = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_ROTARY;
		}

		return $this;
	} // setMemberRotary()

	/**
	 * Set the value of [member_lions] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberLions($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_lions !== $v) {
			$this->member_lions = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_LIONS;
		}

		return $this;
	} // setMemberLions()

	/**
	 * Set the value of [person_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPersonId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->person_id !== $v) {
			$this->person_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PERSON_ID;
		}

		return $this;
	} // setPersonId()

	/**
	 * Set the value of [novapointe_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setNovapointeId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->novapointe_id !== $v) {
			$this->novapointe_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::NOVAPOINTE_ID;
		}

		return $this;
	} // setNovapointeId()

	/**
	 * Sets the value of [premium_ship_date] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPremiumShipDate($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->premium_ship_date !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->premium_ship_date !== null && $tmpDt = new DateTime($this->premium_ship_date)) ? $tmpDt->format('Y-m-d H:i:s') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d H:i:s') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->premium_ship_date = ($dt ? $dt->format('Y-m-d H:i:s') : null);
				$this->modifiedColumns[] = ApplicationTempPeer::PREMIUM_SHIP_DATE;
			}
		} // if either are not null

		return $this;
	} // setPremiumShipDate()

	/**
	 * Set the value of [premium_ship_method] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPremiumShipMethod($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premium_ship_method !== $v) {
			$this->premium_ship_method = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PREMIUM_SHIP_METHOD;
		}

		return $this;
	} // setPremiumShipMethod()

	/**
	 * Set the value of [premium_ship_cost] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPremiumShipCost($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->premium_ship_cost !== $v) {
			$this->premium_ship_cost = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PREMIUM_SHIP_COST;
		}

		return $this;
	} // setPremiumShipCost()

	/**
	 * Set the value of [premium_ship_tracking_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPremiumShipTrackingNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->premium_ship_tracking_number !== $v) {
			$this->premium_ship_tracking_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PREMIUM_SHIP_TRACKING_NUMBER;
		}

		return $this;
	} // setPremiumShipTrackingNumber()

	/**
	 * Set the value of [referer_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setRefererName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->referer_name !== $v) {
			$this->referer_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::REFERER_NAME;
		}

		return $this;
	} // setRefererName()

	/**
	 * Set the value of [referral_session_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setReferralSessionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->referral_session_id !== $v) {
			$this->referral_session_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::REFERRAL_SESSION_ID;
		}

		return $this;
	} // setReferralSessionId()

	/**
	 * Set the value of [aircraft_third_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftThirdId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_third_id !== $v) {
			$this->aircraft_third_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_THIRD_ID;
		}

		return $this;
	} // setAircraftThirdId()

	/**
	 * Set the value of [aircraft_third_own] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftThirdOwn($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_third_own !== $v) {
			$this->aircraft_third_own = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_THIRD_OWN;
		}

		return $this;
	} // setAircraftThirdOwn()

	/**
	 * Set the value of [aircraft_third_ice] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftThirdIce($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_third_ice !== $v) {
			$this->aircraft_third_ice = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_THIRD_ICE;
		}

		return $this;
	} // setAircraftThirdIce()

	/**
	 * Set the value of [aircraft_third_seats] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftThirdSeats($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->aircraft_third_seats !== $v) {
			$this->aircraft_third_seats = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_THIRD_SEATS;
		}

		return $this;
	} // setAircraftThirdSeats()

	/**
	 * Set the value of [aircraft_third_n_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setAircraftThirdNNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aircraft_third_n_number !== $v) {
			$this->aircraft_third_n_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::AIRCRAFT_THIRD_N_NUMBER;
		}

		return $this;
	} // setAircraftThirdNNumber()

	/**
	 * Set the value of [ip_address] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setIpAddress($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ip_address !== $v) {
			$this->ip_address = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::IP_ADDRESS;
		}

		return $this;
	} // setIpAddress()

	/**
	 * Set the value of [pager_email] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPagerEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pager_email !== $v) {
			$this->pager_email = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PAGER_EMAIL;
		}

		return $this;
	} // setPagerEmail()

	/**
	 * Set the value of [member_99s] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMember99s($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_99s !== $v) {
			$this->member_99s = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_99S;
		}

		return $this;
	} // setMember99s()

	/**
	 * Set the value of [member_wia] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberWia($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_wia !== $v) {
			$this->member_wia = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_WIA;
		}

		return $this;
	} // setMemberWia()

	/**
	 * Set the value of [mission_email_optin] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMissionEmailOptin($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->mission_email_optin !== $v) {
			$this->mission_email_optin = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MISSION_EMAIL_OPTIN;
		}

		return $this;
	} // setMissionEmailOptin()

	/**
	 * Set the value of [hseats_interest] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setHseatsInterest($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->hseats_interest !== $v) {
			$this->hseats_interest = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::HSEATS_INTEREST;
		}

		return $this;
	} // setHseatsInterest()

	/**
	 * Set the value of [master_application_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMasterApplicationId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->master_application_id !== $v) {
			$this->master_application_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MASTER_APPLICATION_ID;
		}

		return $this;
	} // setMasterApplicationId()

	/**
	 * Set the value of [master_member_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMasterMemberId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->master_member_id !== $v) {
			$this->master_member_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MASTER_MEMBER_ID;
		}

		return $this;
	} // setMasterMemberId()

	/**
	 * Set the value of [referral_source_other] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setReferralSourceOther($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->referral_source_other !== $v) {
			$this->referral_source_other = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::REFERRAL_SOURCE_OTHER;
		}

		return $this;
	} // setReferralSourceOther()

	/**
	 * Set the value of [secondary_email] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setSecondaryEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->secondary_email !== $v) {
			$this->secondary_email = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::SECONDARY_EMAIL;
		}

		return $this;
	} // setSecondaryEmail()

	/**
	 * Set the value of [payment_transaction_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setPaymentTransactionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->payment_transaction_id !== $v) {
			$this->payment_transaction_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::PAYMENT_TRANSACTION_ID;
		}

		return $this;
	} // setPaymentTransactionId()

	/**
	 * Set the value of [middle_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMiddleName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->middle_name !== $v) {
			$this->middle_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MIDDLE_NAME;
		}

		return $this;
	} // setMiddleName()

	/**
	 * Set the value of [suffix] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setSuffix($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->suffix !== $v) {
			$this->suffix = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::SUFFIX;
		}

		return $this;
	} // setSuffix()

	/**
	 * Set the value of [nickname] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setNickname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->nickname !== $v) {
			$this->nickname = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::NICKNAME;
		}

		return $this;
	} // setNickname()

	/**
	 * Set the value of [veteran] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setVeteran($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->veteran !== $v) {
			$this->veteran = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::VETERAN;
		}

		return $this;
	} // setVeteran()

	/**
	 * Set the value of [gender] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setGender($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->gender !== $v) {
			$this->gender = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::GENDER;
		}

		return $this;
	} // setGender()

	/**
	 * Set the value of [emergency_contact_name] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setEmergencyContactName($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_contact_name !== $v) {
			$this->emergency_contact_name = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::EMERGENCY_CONTACT_NAME;
		}

		return $this;
	} // setEmergencyContactName()

	/**
	 * Set the value of [emergency_contact_phone] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setEmergencyContactPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->emergency_contact_phone !== $v) {
			$this->emergency_contact_phone = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::EMERGENCY_CONTACT_PHONE;
		}

		return $this;
	} // setEmergencyContactPhone()

	/**
	 * Set the value of [country] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCountry($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->country !== $v) {
			$this->country = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::COUNTRY;
		}

		return $this;
	} // setCountry()

	/**
	 * Set the value of [drivers_license_state] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDriversLicenseState($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->drivers_license_state !== $v) {
			$this->drivers_license_state = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::DRIVERS_LICENSE_STATE;
		}

		return $this;
	} // setDriversLicenseState()

	/**
	 * Set the value of [drivers_license_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setDriversLicenseNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->drivers_license_number !== $v) {
			$this->drivers_license_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::DRIVERS_LICENSE_NUMBER;
		}

		return $this;
	} // setDriversLicenseNumber()

	/**
	 * Set the value of [ccard_number] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCcardNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ccard_number !== $v) {
			$this->ccard_number = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CCARD_NUMBER;
		}

		return $this;
	} // setCcardNumber()

	/**
	 * Set the value of [ccard_code] column.
	 * 
	 * @param      string $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCcardCode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ccard_code !== $v) {
			$this->ccard_code = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::CCARD_CODE;
		}

		return $this;
	} // setCcardCode()

	/**
	 * Sets the value of [ccard_expire] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setCcardExpire($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->ccard_expire !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->ccard_expire !== null && $tmpDt = new DateTime($this->ccard_expire)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->ccard_expire = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = ApplicationTempPeer::CCARD_EXPIRE;
			}
		} // if either are not null

		return $this;
	} // setCcardExpire()

	/**
	 * Set the value of [is_complete] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setIsComplete($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->is_complete !== $v || $v === -4) {
			$this->is_complete = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::IS_COMPLETE;
		}

		return $this;
	} // setIsComplete()

	/**
	 * Set the value of [member_class_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setMemberClassId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->member_class_id !== $v) {
			$this->member_class_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::MEMBER_CLASS_ID;
		}

		return $this;
	} // setMemberClassId()

	/**
	 * Set the value of [wing_id] column.
	 * 
	 * @param      int $v new value
	 * @return     ApplicationTemp The current object (for fluent API support)
	 */
	public function setWingId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->wing_id !== $v) {
			$this->wing_id = $v;
			$this->modifiedColumns[] = ApplicationTempPeer::WING_ID;
		}

		return $this;
	} // setWingId()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array(ApplicationTempPeer::IS_COMPLETE))) {
				return false;
			}

			if ($this->is_complete !== -4) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->id = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->application_date = ($row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->renewal = ($row[$startcol + 2] !== null) ? (int) $row[$startcol + 2] : null;
			$this->title = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->first_name = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->last_name = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->address1 = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->address2 = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->city = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->state = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->zipcode = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->day_phone = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->day_comment = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->eve_phone = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->eve_comment = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->mobile_phone = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->mobile_comment = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->pager_phone = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->pager_comment = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->fax_phone1 = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->fax_comment1 = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->fax_phone2 = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->fax_comment2 = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->other_phone = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->other_comment = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->email = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->spouse_first_name = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->spouse_last_name = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->applicant_pilot = ($row[$startcol + 28] !== null) ? (int) $row[$startcol + 28] : null;
			$this->spouse_pilot = ($row[$startcol + 29] !== null) ? (int) $row[$startcol + 29] : null;
			$this->applicant_copilot = ($row[$startcol + 30] !== null) ? (int) $row[$startcol + 30] : null;
			$this->languages_spoken = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->home_base = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->fbo_name = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->aircraft_primary_id = ($row[$startcol + 34] !== null) ? (int) $row[$startcol + 34] : null;
			$this->aircraft_primary_own = ($row[$startcol + 35] !== null) ? (int) $row[$startcol + 35] : null;
			$this->aircraft_primary_ice = ($row[$startcol + 36] !== null) ? (int) $row[$startcol + 36] : null;
			$this->aircraft_primary_seats = ($row[$startcol + 37] !== null) ? (int) $row[$startcol + 37] : null;
			$this->aircraft_primary_n_number = ($row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->aircraft_secondary_id = ($row[$startcol + 39] !== null) ? (int) $row[$startcol + 39] : null;
			$this->aircraft_secondary_own = ($row[$startcol + 40] !== null) ? (int) $row[$startcol + 40] : null;
			$this->aircraft_secondary_ice = ($row[$startcol + 41] !== null) ? (int) $row[$startcol + 41] : null;
			$this->aircraft_secondary_seats = ($row[$startcol + 42] !== null) ? (int) $row[$startcol + 42] : null;
			$this->aircraft_secondary_n_number = ($row[$startcol + 43] !== null) ? (string) $row[$startcol + 43] : null;
			$this->pilot_certificate = ($row[$startcol + 44] !== null) ? (string) $row[$startcol + 44] : null;
			$this->ratings = ($row[$startcol + 45] !== null) ? (string) $row[$startcol + 45] : null;
			$this->medical_class = ($row[$startcol + 46] !== null) ? (int) $row[$startcol + 46] : null;
			$this->license_type = ($row[$startcol + 47] !== null) ? (string) $row[$startcol + 47] : null;
			$this->total_hours = ($row[$startcol + 48] !== null) ? (int) $row[$startcol + 48] : null;
			$this->ifr_hours = ($row[$startcol + 49] !== null) ? (int) $row[$startcol + 49] : null;
			$this->multi_hours = ($row[$startcol + 50] !== null) ? (int) $row[$startcol + 50] : null;
			$this->other_hours = ($row[$startcol + 51] !== null) ? (int) $row[$startcol + 51] : null;
			$this->date_of_birth = ($row[$startcol + 52] !== null) ? (string) $row[$startcol + 52] : null;
			$this->height = ($row[$startcol + 53] !== null) ? (int) $row[$startcol + 53] : null;
			$this->weight = ($row[$startcol + 54] !== null) ? (int) $row[$startcol + 54] : null;
			$this->availability_weekdays = ($row[$startcol + 55] !== null) ? (int) $row[$startcol + 55] : null;
			$this->availability_weeknights = ($row[$startcol + 56] !== null) ? (int) $row[$startcol + 56] : null;
			$this->availability_weekends = ($row[$startcol + 57] !== null) ? (int) $row[$startcol + 57] : null;
			$this->availability_notice = ($row[$startcol + 58] !== null) ? (int) $row[$startcol + 58] : null;
			$this->availability_last_minute = ($row[$startcol + 59] !== null) ? (int) $row[$startcol + 59] : null;
			$this->availability_copilot = ($row[$startcol + 60] !== null) ? (int) $row[$startcol + 60] : null;
			$this->affirmation_agreed = ($row[$startcol + 61] !== null) ? (int) $row[$startcol + 61] : null;
			$this->insurance_agreed = ($row[$startcol + 62] !== null) ? (int) $row[$startcol + 62] : null;
			$this->volunteer_interest = ($row[$startcol + 63] !== null) ? (string) $row[$startcol + 63] : null;
			$this->company_name = ($row[$startcol + 64] !== null) ? (string) $row[$startcol + 64] : null;
			$this->company_position = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->company_match_funds = ($row[$startcol + 66] !== null) ? (int) $row[$startcol + 66] : null;
			$this->company_business_category_id = ($row[$startcol + 67] !== null) ? (int) $row[$startcol + 67] : null;
			$this->referral_source = ($row[$startcol + 68] !== null) ? (int) $row[$startcol + 68] : null;
			$this->premium_choice = ($row[$startcol + 69] !== null) ? (int) $row[$startcol + 69] : null;
			$this->premium_size = ($row[$startcol + 70] !== null) ? (int) $row[$startcol + 70] : null;
			$this->dues_amount_paid = ($row[$startcol + 71] !== null) ? (int) $row[$startcol + 71] : null;
			$this->donation_amount_paid = ($row[$startcol + 72] !== null) ? (int) $row[$startcol + 72] : null;
			$this->method_of_payment_id = ($row[$startcol + 73] !== null) ? (int) $row[$startcol + 73] : null;
			$this->ccard_approval_number = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->ccard_error_code = ($row[$startcol + 75] !== null) ? (string) $row[$startcol + 75] : null;
			$this->ccard_avs_result = ($row[$startcol + 76] !== null) ? (string) $row[$startcol + 76] : null;
			$this->processed_date = ($row[$startcol + 77] !== null) ? (string) $row[$startcol + 77] : null;
			$this->member_id = ($row[$startcol + 78] !== null) ? (int) $row[$startcol + 78] : null;
			$this->mission_orientation = ($row[$startcol + 79] !== null) ? (int) $row[$startcol + 79] : null;
			$this->mission_coordination = ($row[$startcol + 80] !== null) ? (int) $row[$startcol + 80] : null;
			$this->pilot_recruitment = ($row[$startcol + 81] !== null) ? (int) $row[$startcol + 81] : null;
			$this->fund_raising = ($row[$startcol + 82] !== null) ? (int) $row[$startcol + 82] : null;
			$this->celebrity_contacts = ($row[$startcol + 83] !== null) ? (int) $row[$startcol + 83] : null;
			$this->hospital_outreach = ($row[$startcol + 84] !== null) ? (int) $row[$startcol + 84] : null;
			$this->media_relations = ($row[$startcol + 85] !== null) ? (int) $row[$startcol + 85] : null;
			$this->telephone_work = ($row[$startcol + 86] !== null) ? (int) $row[$startcol + 86] : null;
			$this->computers = ($row[$startcol + 87] !== null) ? (int) $row[$startcol + 87] : null;
			$this->clerical = ($row[$startcol + 88] !== null) ? (int) $row[$startcol + 88] : null;
			$this->publicity = ($row[$startcol + 89] !== null) ? (int) $row[$startcol + 89] : null;
			$this->writing = ($row[$startcol + 90] !== null) ? (int) $row[$startcol + 90] : null;
			$this->speakers_bureau = ($row[$startcol + 91] !== null) ? (int) $row[$startcol + 91] : null;
			$this->wing_team = ($row[$startcol + 92] !== null) ? (int) $row[$startcol + 92] : null;
			$this->graphic_arts = ($row[$startcol + 93] !== null) ? (int) $row[$startcol + 93] : null;
			$this->event_planning = ($row[$startcol + 94] !== null) ? (int) $row[$startcol + 94] : null;
			$this->web_internet = ($row[$startcol + 95] !== null) ? (int) $row[$startcol + 95] : null;
			$this->foundation_contacts = ($row[$startcol + 96] !== null) ? (int) $row[$startcol + 96] : null;
			$this->aviation_contacts = ($row[$startcol + 97] !== null) ? (int) $row[$startcol + 97] : null;
			$this->printing = ($row[$startcol + 98] !== null) ? (int) $row[$startcol + 98] : null;
			$this->member_aopa = ($row[$startcol + 99] !== null) ? (int) $row[$startcol + 99] : null;
			$this->member_kiwanis = ($row[$startcol + 100] !== null) ? (int) $row[$startcol + 100] : null;
			$this->member_rotary = ($row[$startcol + 101] !== null) ? (int) $row[$startcol + 101] : null;
			$this->member_lions = ($row[$startcol + 102] !== null) ? (int) $row[$startcol + 102] : null;
			$this->person_id = ($row[$startcol + 103] !== null) ? (int) $row[$startcol + 103] : null;
			$this->novapointe_id = ($row[$startcol + 104] !== null) ? (int) $row[$startcol + 104] : null;
			$this->premium_ship_date = ($row[$startcol + 105] !== null) ? (string) $row[$startcol + 105] : null;
			$this->premium_ship_method = ($row[$startcol + 106] !== null) ? (string) $row[$startcol + 106] : null;
			$this->premium_ship_cost = ($row[$startcol + 107] !== null) ? (int) $row[$startcol + 107] : null;
			$this->premium_ship_tracking_number = ($row[$startcol + 108] !== null) ? (string) $row[$startcol + 108] : null;
			$this->referer_name = ($row[$startcol + 109] !== null) ? (string) $row[$startcol + 109] : null;
			$this->referral_session_id = ($row[$startcol + 110] !== null) ? (int) $row[$startcol + 110] : null;
			$this->aircraft_third_id = ($row[$startcol + 111] !== null) ? (int) $row[$startcol + 111] : null;
			$this->aircraft_third_own = ($row[$startcol + 112] !== null) ? (int) $row[$startcol + 112] : null;
			$this->aircraft_third_ice = ($row[$startcol + 113] !== null) ? (int) $row[$startcol + 113] : null;
			$this->aircraft_third_seats = ($row[$startcol + 114] !== null) ? (int) $row[$startcol + 114] : null;
			$this->aircraft_third_n_number = ($row[$startcol + 115] !== null) ? (string) $row[$startcol + 115] : null;
			$this->ip_address = ($row[$startcol + 116] !== null) ? (string) $row[$startcol + 116] : null;
			$this->pager_email = ($row[$startcol + 117] !== null) ? (string) $row[$startcol + 117] : null;
			$this->member_99s = ($row[$startcol + 118] !== null) ? (int) $row[$startcol + 118] : null;
			$this->member_wia = ($row[$startcol + 119] !== null) ? (int) $row[$startcol + 119] : null;
			$this->mission_email_optin = ($row[$startcol + 120] !== null) ? (int) $row[$startcol + 120] : null;
			$this->hseats_interest = ($row[$startcol + 121] !== null) ? (int) $row[$startcol + 121] : null;
			$this->master_application_id = ($row[$startcol + 122] !== null) ? (int) $row[$startcol + 122] : null;
			$this->master_member_id = ($row[$startcol + 123] !== null) ? (int) $row[$startcol + 123] : null;
			$this->referral_source_other = ($row[$startcol + 124] !== null) ? (string) $row[$startcol + 124] : null;
			$this->secondary_email = ($row[$startcol + 125] !== null) ? (string) $row[$startcol + 125] : null;
			$this->payment_transaction_id = ($row[$startcol + 126] !== null) ? (int) $row[$startcol + 126] : null;
			$this->middle_name = ($row[$startcol + 127] !== null) ? (string) $row[$startcol + 127] : null;
			$this->suffix = ($row[$startcol + 128] !== null) ? (string) $row[$startcol + 128] : null;
			$this->nickname = ($row[$startcol + 129] !== null) ? (string) $row[$startcol + 129] : null;
			$this->veteran = ($row[$startcol + 130] !== null) ? (int) $row[$startcol + 130] : null;
			$this->gender = ($row[$startcol + 131] !== null) ? (string) $row[$startcol + 131] : null;
			$this->emergency_contact_name = ($row[$startcol + 132] !== null) ? (string) $row[$startcol + 132] : null;
			$this->emergency_contact_phone = ($row[$startcol + 133] !== null) ? (string) $row[$startcol + 133] : null;
			$this->country = ($row[$startcol + 134] !== null) ? (string) $row[$startcol + 134] : null;
			$this->drivers_license_state = ($row[$startcol + 135] !== null) ? (string) $row[$startcol + 135] : null;
			$this->drivers_license_number = ($row[$startcol + 136] !== null) ? (string) $row[$startcol + 136] : null;
			$this->ccard_number = ($row[$startcol + 137] !== null) ? (string) $row[$startcol + 137] : null;
			$this->ccard_code = ($row[$startcol + 138] !== null) ? (string) $row[$startcol + 138] : null;
			$this->ccard_expire = ($row[$startcol + 139] !== null) ? (string) $row[$startcol + 139] : null;
			$this->is_complete = ($row[$startcol + 140] !== null) ? (int) $row[$startcol + 140] : null;
			$this->member_class_id = ($row[$startcol + 141] !== null) ? (int) $row[$startcol + 141] : null;
			$this->wing_id = ($row[$startcol + 142] !== null) ? (int) $row[$startcol + 142] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 143; // 143 = ApplicationTempPeer::NUM_COLUMNS - ApplicationTempPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating ApplicationTemp object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(ApplicationTempPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = ApplicationTempPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseApplicationTemp:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(ApplicationTempPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			ApplicationTempPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseApplicationTemp:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseApplicationTemp:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(ApplicationTempPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseApplicationTemp:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			ApplicationTempPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = ApplicationTempPeer::ID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = ApplicationTempPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setId($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += ApplicationTempPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = ApplicationTempPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = ApplicationTempPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getId();
				break;
			case 1:
				return $this->getApplicationDate();
				break;
			case 2:
				return $this->getRenewal();
				break;
			case 3:
				return $this->getTitle();
				break;
			case 4:
				return $this->getFirstName();
				break;
			case 5:
				return $this->getLastName();
				break;
			case 6:
				return $this->getAddress1();
				break;
			case 7:
				return $this->getAddress2();
				break;
			case 8:
				return $this->getCity();
				break;
			case 9:
				return $this->getState();
				break;
			case 10:
				return $this->getZipcode();
				break;
			case 11:
				return $this->getDayPhone();
				break;
			case 12:
				return $this->getDayComment();
				break;
			case 13:
				return $this->getEvePhone();
				break;
			case 14:
				return $this->getEveComment();
				break;
			case 15:
				return $this->getMobilePhone();
				break;
			case 16:
				return $this->getMobileComment();
				break;
			case 17:
				return $this->getPagerPhone();
				break;
			case 18:
				return $this->getPagerComment();
				break;
			case 19:
				return $this->getFaxPhone1();
				break;
			case 20:
				return $this->getFaxComment1();
				break;
			case 21:
				return $this->getFaxPhone2();
				break;
			case 22:
				return $this->getFaxComment2();
				break;
			case 23:
				return $this->getOtherPhone();
				break;
			case 24:
				return $this->getOtherComment();
				break;
			case 25:
				return $this->getEmail();
				break;
			case 26:
				return $this->getSpouseFirstName();
				break;
			case 27:
				return $this->getSpouseLastName();
				break;
			case 28:
				return $this->getApplicantPilot();
				break;
			case 29:
				return $this->getSpousePilot();
				break;
			case 30:
				return $this->getApplicantCopilot();
				break;
			case 31:
				return $this->getLanguagesSpoken();
				break;
			case 32:
				return $this->getHomeBase();
				break;
			case 33:
				return $this->getFboName();
				break;
			case 34:
				return $this->getAircraftPrimaryId();
				break;
			case 35:
				return $this->getAircraftPrimaryOwn();
				break;
			case 36:
				return $this->getAircraftPrimaryIce();
				break;
			case 37:
				return $this->getAircraftPrimarySeats();
				break;
			case 38:
				return $this->getAircraftPrimaryNNumber();
				break;
			case 39:
				return $this->getAircraftSecondaryId();
				break;
			case 40:
				return $this->getAircraftSecondaryOwn();
				break;
			case 41:
				return $this->getAircraftSecondaryIce();
				break;
			case 42:
				return $this->getAircraftSecondarySeats();
				break;
			case 43:
				return $this->getAircraftSecondaryNNumber();
				break;
			case 44:
				return $this->getPilotCertificate();
				break;
			case 45:
				return $this->getRatings();
				break;
			case 46:
				return $this->getMedicalClass();
				break;
			case 47:
				return $this->getLicenseType();
				break;
			case 48:
				return $this->getTotalHours();
				break;
			case 49:
				return $this->getIfrHours();
				break;
			case 50:
				return $this->getMultiHours();
				break;
			case 51:
				return $this->getOtherHours();
				break;
			case 52:
				return $this->getDateOfBirth();
				break;
			case 53:
				return $this->getHeight();
				break;
			case 54:
				return $this->getWeight();
				break;
			case 55:
				return $this->getAvailabilityWeekdays();
				break;
			case 56:
				return $this->getAvailabilityWeeknights();
				break;
			case 57:
				return $this->getAvailabilityWeekends();
				break;
			case 58:
				return $this->getAvailabilityNotice();
				break;
			case 59:
				return $this->getAvailabilityLastMinute();
				break;
			case 60:
				return $this->getAvailabilityCopilot();
				break;
			case 61:
				return $this->getAffirmationAgreed();
				break;
			case 62:
				return $this->getInsuranceAgreed();
				break;
			case 63:
				return $this->getVolunteerInterest();
				break;
			case 64:
				return $this->getCompanyName();
				break;
			case 65:
				return $this->getCompanyPosition();
				break;
			case 66:
				return $this->getCompanyMatchFunds();
				break;
			case 67:
				return $this->getCompanyBusinessCategoryId();
				break;
			case 68:
				return $this->getReferralSource();
				break;
			case 69:
				return $this->getPremiumChoice();
				break;
			case 70:
				return $this->getPremiumSize();
				break;
			case 71:
				return $this->getDuesAmountPaid();
				break;
			case 72:
				return $this->getDonationAmountPaid();
				break;
			case 73:
				return $this->getMethodOfPaymentId();
				break;
			case 74:
				return $this->getCcardApprovalNumber();
				break;
			case 75:
				return $this->getCcardErrorCode();
				break;
			case 76:
				return $this->getCcardAvsResult();
				break;
			case 77:
				return $this->getProcessedDate();
				break;
			case 78:
				return $this->getMemberId();
				break;
			case 79:
				return $this->getMissionOrientation();
				break;
			case 80:
				return $this->getMissionCoordination();
				break;
			case 81:
				return $this->getPilotRecruitment();
				break;
			case 82:
				return $this->getFundRaising();
				break;
			case 83:
				return $this->getCelebrityContacts();
				break;
			case 84:
				return $this->getHospitalOutreach();
				break;
			case 85:
				return $this->getMediaRelations();
				break;
			case 86:
				return $this->getTelephoneWork();
				break;
			case 87:
				return $this->getComputers();
				break;
			case 88:
				return $this->getClerical();
				break;
			case 89:
				return $this->getPublicity();
				break;
			case 90:
				return $this->getWriting();
				break;
			case 91:
				return $this->getSpeakersBureau();
				break;
			case 92:
				return $this->getWingTeam();
				break;
			case 93:
				return $this->getGraphicArts();
				break;
			case 94:
				return $this->getEventPlanning();
				break;
			case 95:
				return $this->getWebInternet();
				break;
			case 96:
				return $this->getFoundationContacts();
				break;
			case 97:
				return $this->getAviationContacts();
				break;
			case 98:
				return $this->getPrinting();
				break;
			case 99:
				return $this->getMemberAopa();
				break;
			case 100:
				return $this->getMemberKiwanis();
				break;
			case 101:
				return $this->getMemberRotary();
				break;
			case 102:
				return $this->getMemberLions();
				break;
			case 103:
				return $this->getPersonId();
				break;
			case 104:
				return $this->getNovapointeId();
				break;
			case 105:
				return $this->getPremiumShipDate();
				break;
			case 106:
				return $this->getPremiumShipMethod();
				break;
			case 107:
				return $this->getPremiumShipCost();
				break;
			case 108:
				return $this->getPremiumShipTrackingNumber();
				break;
			case 109:
				return $this->getRefererName();
				break;
			case 110:
				return $this->getReferralSessionId();
				break;
			case 111:
				return $this->getAircraftThirdId();
				break;
			case 112:
				return $this->getAircraftThirdOwn();
				break;
			case 113:
				return $this->getAircraftThirdIce();
				break;
			case 114:
				return $this->getAircraftThirdSeats();
				break;
			case 115:
				return $this->getAircraftThirdNNumber();
				break;
			case 116:
				return $this->getIpAddress();
				break;
			case 117:
				return $this->getPagerEmail();
				break;
			case 118:
				return $this->getMember99s();
				break;
			case 119:
				return $this->getMemberWia();
				break;
			case 120:
				return $this->getMissionEmailOptin();
				break;
			case 121:
				return $this->getHseatsInterest();
				break;
			case 122:
				return $this->getMasterApplicationId();
				break;
			case 123:
				return $this->getMasterMemberId();
				break;
			case 124:
				return $this->getReferralSourceOther();
				break;
			case 125:
				return $this->getSecondaryEmail();
				break;
			case 126:
				return $this->getPaymentTransactionId();
				break;
			case 127:
				return $this->getMiddleName();
				break;
			case 128:
				return $this->getSuffix();
				break;
			case 129:
				return $this->getNickname();
				break;
			case 130:
				return $this->getVeteran();
				break;
			case 131:
				return $this->getGender();
				break;
			case 132:
				return $this->getEmergencyContactName();
				break;
			case 133:
				return $this->getEmergencyContactPhone();
				break;
			case 134:
				return $this->getCountry();
				break;
			case 135:
				return $this->getDriversLicenseState();
				break;
			case 136:
				return $this->getDriversLicenseNumber();
				break;
			case 137:
				return $this->getCcardNumber();
				break;
			case 138:
				return $this->getCcardCode();
				break;
			case 139:
				return $this->getCcardExpire();
				break;
			case 140:
				return $this->getIsComplete();
				break;
			case 141:
				return $this->getMemberClassId();
				break;
			case 142:
				return $this->getWingId();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = ApplicationTempPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getId(),
			$keys[1] => $this->getApplicationDate(),
			$keys[2] => $this->getRenewal(),
			$keys[3] => $this->getTitle(),
			$keys[4] => $this->getFirstName(),
			$keys[5] => $this->getLastName(),
			$keys[6] => $this->getAddress1(),
			$keys[7] => $this->getAddress2(),
			$keys[8] => $this->getCity(),
			$keys[9] => $this->getState(),
			$keys[10] => $this->getZipcode(),
			$keys[11] => $this->getDayPhone(),
			$keys[12] => $this->getDayComment(),
			$keys[13] => $this->getEvePhone(),
			$keys[14] => $this->getEveComment(),
			$keys[15] => $this->getMobilePhone(),
			$keys[16] => $this->getMobileComment(),
			$keys[17] => $this->getPagerPhone(),
			$keys[18] => $this->getPagerComment(),
			$keys[19] => $this->getFaxPhone1(),
			$keys[20] => $this->getFaxComment1(),
			$keys[21] => $this->getFaxPhone2(),
			$keys[22] => $this->getFaxComment2(),
			$keys[23] => $this->getOtherPhone(),
			$keys[24] => $this->getOtherComment(),
			$keys[25] => $this->getEmail(),
			$keys[26] => $this->getSpouseFirstName(),
			$keys[27] => $this->getSpouseLastName(),
			$keys[28] => $this->getApplicantPilot(),
			$keys[29] => $this->getSpousePilot(),
			$keys[30] => $this->getApplicantCopilot(),
			$keys[31] => $this->getLanguagesSpoken(),
			$keys[32] => $this->getHomeBase(),
			$keys[33] => $this->getFboName(),
			$keys[34] => $this->getAircraftPrimaryId(),
			$keys[35] => $this->getAircraftPrimaryOwn(),
			$keys[36] => $this->getAircraftPrimaryIce(),
			$keys[37] => $this->getAircraftPrimarySeats(),
			$keys[38] => $this->getAircraftPrimaryNNumber(),
			$keys[39] => $this->getAircraftSecondaryId(),
			$keys[40] => $this->getAircraftSecondaryOwn(),
			$keys[41] => $this->getAircraftSecondaryIce(),
			$keys[42] => $this->getAircraftSecondarySeats(),
			$keys[43] => $this->getAircraftSecondaryNNumber(),
			$keys[44] => $this->getPilotCertificate(),
			$keys[45] => $this->getRatings(),
			$keys[46] => $this->getMedicalClass(),
			$keys[47] => $this->getLicenseType(),
			$keys[48] => $this->getTotalHours(),
			$keys[49] => $this->getIfrHours(),
			$keys[50] => $this->getMultiHours(),
			$keys[51] => $this->getOtherHours(),
			$keys[52] => $this->getDateOfBirth(),
			$keys[53] => $this->getHeight(),
			$keys[54] => $this->getWeight(),
			$keys[55] => $this->getAvailabilityWeekdays(),
			$keys[56] => $this->getAvailabilityWeeknights(),
			$keys[57] => $this->getAvailabilityWeekends(),
			$keys[58] => $this->getAvailabilityNotice(),
			$keys[59] => $this->getAvailabilityLastMinute(),
			$keys[60] => $this->getAvailabilityCopilot(),
			$keys[61] => $this->getAffirmationAgreed(),
			$keys[62] => $this->getInsuranceAgreed(),
			$keys[63] => $this->getVolunteerInterest(),
			$keys[64] => $this->getCompanyName(),
			$keys[65] => $this->getCompanyPosition(),
			$keys[66] => $this->getCompanyMatchFunds(),
			$keys[67] => $this->getCompanyBusinessCategoryId(),
			$keys[68] => $this->getReferralSource(),
			$keys[69] => $this->getPremiumChoice(),
			$keys[70] => $this->getPremiumSize(),
			$keys[71] => $this->getDuesAmountPaid(),
			$keys[72] => $this->getDonationAmountPaid(),
			$keys[73] => $this->getMethodOfPaymentId(),
			$keys[74] => $this->getCcardApprovalNumber(),
			$keys[75] => $this->getCcardErrorCode(),
			$keys[76] => $this->getCcardAvsResult(),
			$keys[77] => $this->getProcessedDate(),
			$keys[78] => $this->getMemberId(),
			$keys[79] => $this->getMissionOrientation(),
			$keys[80] => $this->getMissionCoordination(),
			$keys[81] => $this->getPilotRecruitment(),
			$keys[82] => $this->getFundRaising(),
			$keys[83] => $this->getCelebrityContacts(),
			$keys[84] => $this->getHospitalOutreach(),
			$keys[85] => $this->getMediaRelations(),
			$keys[86] => $this->getTelephoneWork(),
			$keys[87] => $this->getComputers(),
			$keys[88] => $this->getClerical(),
			$keys[89] => $this->getPublicity(),
			$keys[90] => $this->getWriting(),
			$keys[91] => $this->getSpeakersBureau(),
			$keys[92] => $this->getWingTeam(),
			$keys[93] => $this->getGraphicArts(),
			$keys[94] => $this->getEventPlanning(),
			$keys[95] => $this->getWebInternet(),
			$keys[96] => $this->getFoundationContacts(),
			$keys[97] => $this->getAviationContacts(),
			$keys[98] => $this->getPrinting(),
			$keys[99] => $this->getMemberAopa(),
			$keys[100] => $this->getMemberKiwanis(),
			$keys[101] => $this->getMemberRotary(),
			$keys[102] => $this->getMemberLions(),
			$keys[103] => $this->getPersonId(),
			$keys[104] => $this->getNovapointeId(),
			$keys[105] => $this->getPremiumShipDate(),
			$keys[106] => $this->getPremiumShipMethod(),
			$keys[107] => $this->getPremiumShipCost(),
			$keys[108] => $this->getPremiumShipTrackingNumber(),
			$keys[109] => $this->getRefererName(),
			$keys[110] => $this->getReferralSessionId(),
			$keys[111] => $this->getAircraftThirdId(),
			$keys[112] => $this->getAircraftThirdOwn(),
			$keys[113] => $this->getAircraftThirdIce(),
			$keys[114] => $this->getAircraftThirdSeats(),
			$keys[115] => $this->getAircraftThirdNNumber(),
			$keys[116] => $this->getIpAddress(),
			$keys[117] => $this->getPagerEmail(),
			$keys[118] => $this->getMember99s(),
			$keys[119] => $this->getMemberWia(),
			$keys[120] => $this->getMissionEmailOptin(),
			$keys[121] => $this->getHseatsInterest(),
			$keys[122] => $this->getMasterApplicationId(),
			$keys[123] => $this->getMasterMemberId(),
			$keys[124] => $this->getReferralSourceOther(),
			$keys[125] => $this->getSecondaryEmail(),
			$keys[126] => $this->getPaymentTransactionId(),
			$keys[127] => $this->getMiddleName(),
			$keys[128] => $this->getSuffix(),
			$keys[129] => $this->getNickname(),
			$keys[130] => $this->getVeteran(),
			$keys[131] => $this->getGender(),
			$keys[132] => $this->getEmergencyContactName(),
			$keys[133] => $this->getEmergencyContactPhone(),
			$keys[134] => $this->getCountry(),
			$keys[135] => $this->getDriversLicenseState(),
			$keys[136] => $this->getDriversLicenseNumber(),
			$keys[137] => $this->getCcardNumber(),
			$keys[138] => $this->getCcardCode(),
			$keys[139] => $this->getCcardExpire(),
			$keys[140] => $this->getIsComplete(),
			$keys[141] => $this->getMemberClassId(),
			$keys[142] => $this->getWingId(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = ApplicationTempPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setId($value);
				break;
			case 1:
				$this->setApplicationDate($value);
				break;
			case 2:
				$this->setRenewal($value);
				break;
			case 3:
				$this->setTitle($value);
				break;
			case 4:
				$this->setFirstName($value);
				break;
			case 5:
				$this->setLastName($value);
				break;
			case 6:
				$this->setAddress1($value);
				break;
			case 7:
				$this->setAddress2($value);
				break;
			case 8:
				$this->setCity($value);
				break;
			case 9:
				$this->setState($value);
				break;
			case 10:
				$this->setZipcode($value);
				break;
			case 11:
				$this->setDayPhone($value);
				break;
			case 12:
				$this->setDayComment($value);
				break;
			case 13:
				$this->setEvePhone($value);
				break;
			case 14:
				$this->setEveComment($value);
				break;
			case 15:
				$this->setMobilePhone($value);
				break;
			case 16:
				$this->setMobileComment($value);
				break;
			case 17:
				$this->setPagerPhone($value);
				break;
			case 18:
				$this->setPagerComment($value);
				break;
			case 19:
				$this->setFaxPhone1($value);
				break;
			case 20:
				$this->setFaxComment1($value);
				break;
			case 21:
				$this->setFaxPhone2($value);
				break;
			case 22:
				$this->setFaxComment2($value);
				break;
			case 23:
				$this->setOtherPhone($value);
				break;
			case 24:
				$this->setOtherComment($value);
				break;
			case 25:
				$this->setEmail($value);
				break;
			case 26:
				$this->setSpouseFirstName($value);
				break;
			case 27:
				$this->setSpouseLastName($value);
				break;
			case 28:
				$this->setApplicantPilot($value);
				break;
			case 29:
				$this->setSpousePilot($value);
				break;
			case 30:
				$this->setApplicantCopilot($value);
				break;
			case 31:
				$this->setLanguagesSpoken($value);
				break;
			case 32:
				$this->setHomeBase($value);
				break;
			case 33:
				$this->setFboName($value);
				break;
			case 34:
				$this->setAircraftPrimaryId($value);
				break;
			case 35:
				$this->setAircraftPrimaryOwn($value);
				break;
			case 36:
				$this->setAircraftPrimaryIce($value);
				break;
			case 37:
				$this->setAircraftPrimarySeats($value);
				break;
			case 38:
				$this->setAircraftPrimaryNNumber($value);
				break;
			case 39:
				$this->setAircraftSecondaryId($value);
				break;
			case 40:
				$this->setAircraftSecondaryOwn($value);
				break;
			case 41:
				$this->setAircraftSecondaryIce($value);
				break;
			case 42:
				$this->setAircraftSecondarySeats($value);
				break;
			case 43:
				$this->setAircraftSecondaryNNumber($value);
				break;
			case 44:
				$this->setPilotCertificate($value);
				break;
			case 45:
				$this->setRatings($value);
				break;
			case 46:
				$this->setMedicalClass($value);
				break;
			case 47:
				$this->setLicenseType($value);
				break;
			case 48:
				$this->setTotalHours($value);
				break;
			case 49:
				$this->setIfrHours($value);
				break;
			case 50:
				$this->setMultiHours($value);
				break;
			case 51:
				$this->setOtherHours($value);
				break;
			case 52:
				$this->setDateOfBirth($value);
				break;
			case 53:
				$this->setHeight($value);
				break;
			case 54:
				$this->setWeight($value);
				break;
			case 55:
				$this->setAvailabilityWeekdays($value);
				break;
			case 56:
				$this->setAvailabilityWeeknights($value);
				break;
			case 57:
				$this->setAvailabilityWeekends($value);
				break;
			case 58:
				$this->setAvailabilityNotice($value);
				break;
			case 59:
				$this->setAvailabilityLastMinute($value);
				break;
			case 60:
				$this->setAvailabilityCopilot($value);
				break;
			case 61:
				$this->setAffirmationAgreed($value);
				break;
			case 62:
				$this->setInsuranceAgreed($value);
				break;
			case 63:
				$this->setVolunteerInterest($value);
				break;
			case 64:
				$this->setCompanyName($value);
				break;
			case 65:
				$this->setCompanyPosition($value);
				break;
			case 66:
				$this->setCompanyMatchFunds($value);
				break;
			case 67:
				$this->setCompanyBusinessCategoryId($value);
				break;
			case 68:
				$this->setReferralSource($value);
				break;
			case 69:
				$this->setPremiumChoice($value);
				break;
			case 70:
				$this->setPremiumSize($value);
				break;
			case 71:
				$this->setDuesAmountPaid($value);
				break;
			case 72:
				$this->setDonationAmountPaid($value);
				break;
			case 73:
				$this->setMethodOfPaymentId($value);
				break;
			case 74:
				$this->setCcardApprovalNumber($value);
				break;
			case 75:
				$this->setCcardErrorCode($value);
				break;
			case 76:
				$this->setCcardAvsResult($value);
				break;
			case 77:
				$this->setProcessedDate($value);
				break;
			case 78:
				$this->setMemberId($value);
				break;
			case 79:
				$this->setMissionOrientation($value);
				break;
			case 80:
				$this->setMissionCoordination($value);
				break;
			case 81:
				$this->setPilotRecruitment($value);
				break;
			case 82:
				$this->setFundRaising($value);
				break;
			case 83:
				$this->setCelebrityContacts($value);
				break;
			case 84:
				$this->setHospitalOutreach($value);
				break;
			case 85:
				$this->setMediaRelations($value);
				break;
			case 86:
				$this->setTelephoneWork($value);
				break;
			case 87:
				$this->setComputers($value);
				break;
			case 88:
				$this->setClerical($value);
				break;
			case 89:
				$this->setPublicity($value);
				break;
			case 90:
				$this->setWriting($value);
				break;
			case 91:
				$this->setSpeakersBureau($value);
				break;
			case 92:
				$this->setWingTeam($value);
				break;
			case 93:
				$this->setGraphicArts($value);
				break;
			case 94:
				$this->setEventPlanning($value);
				break;
			case 95:
				$this->setWebInternet($value);
				break;
			case 96:
				$this->setFoundationContacts($value);
				break;
			case 97:
				$this->setAviationContacts($value);
				break;
			case 98:
				$this->setPrinting($value);
				break;
			case 99:
				$this->setMemberAopa($value);
				break;
			case 100:
				$this->setMemberKiwanis($value);
				break;
			case 101:
				$this->setMemberRotary($value);
				break;
			case 102:
				$this->setMemberLions($value);
				break;
			case 103:
				$this->setPersonId($value);
				break;
			case 104:
				$this->setNovapointeId($value);
				break;
			case 105:
				$this->setPremiumShipDate($value);
				break;
			case 106:
				$this->setPremiumShipMethod($value);
				break;
			case 107:
				$this->setPremiumShipCost($value);
				break;
			case 108:
				$this->setPremiumShipTrackingNumber($value);
				break;
			case 109:
				$this->setRefererName($value);
				break;
			case 110:
				$this->setReferralSessionId($value);
				break;
			case 111:
				$this->setAircraftThirdId($value);
				break;
			case 112:
				$this->setAircraftThirdOwn($value);
				break;
			case 113:
				$this->setAircraftThirdIce($value);
				break;
			case 114:
				$this->setAircraftThirdSeats($value);
				break;
			case 115:
				$this->setAircraftThirdNNumber($value);
				break;
			case 116:
				$this->setIpAddress($value);
				break;
			case 117:
				$this->setPagerEmail($value);
				break;
			case 118:
				$this->setMember99s($value);
				break;
			case 119:
				$this->setMemberWia($value);
				break;
			case 120:
				$this->setMissionEmailOptin($value);
				break;
			case 121:
				$this->setHseatsInterest($value);
				break;
			case 122:
				$this->setMasterApplicationId($value);
				break;
			case 123:
				$this->setMasterMemberId($value);
				break;
			case 124:
				$this->setReferralSourceOther($value);
				break;
			case 125:
				$this->setSecondaryEmail($value);
				break;
			case 126:
				$this->setPaymentTransactionId($value);
				break;
			case 127:
				$this->setMiddleName($value);
				break;
			case 128:
				$this->setSuffix($value);
				break;
			case 129:
				$this->setNickname($value);
				break;
			case 130:
				$this->setVeteran($value);
				break;
			case 131:
				$this->setGender($value);
				break;
			case 132:
				$this->setEmergencyContactName($value);
				break;
			case 133:
				$this->setEmergencyContactPhone($value);
				break;
			case 134:
				$this->setCountry($value);
				break;
			case 135:
				$this->setDriversLicenseState($value);
				break;
			case 136:
				$this->setDriversLicenseNumber($value);
				break;
			case 137:
				$this->setCcardNumber($value);
				break;
			case 138:
				$this->setCcardCode($value);
				break;
			case 139:
				$this->setCcardExpire($value);
				break;
			case 140:
				$this->setIsComplete($value);
				break;
			case 141:
				$this->setMemberClassId($value);
				break;
			case 142:
				$this->setWingId($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = ApplicationTempPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setId($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setApplicationDate($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setRenewal($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setTitle($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setFirstName($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setLastName($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setAddress1($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setAddress2($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setCity($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setState($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setZipcode($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setDayPhone($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setDayComment($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setEvePhone($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setEveComment($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setMobilePhone($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setMobileComment($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setPagerPhone($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setPagerComment($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setFaxPhone1($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setFaxComment1($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setFaxPhone2($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setFaxComment2($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setOtherPhone($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setOtherComment($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setEmail($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setSpouseFirstName($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setSpouseLastName($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setApplicantPilot($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setSpousePilot($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setApplicantCopilot($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setLanguagesSpoken($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setHomeBase($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setFboName($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setAircraftPrimaryId($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setAircraftPrimaryOwn($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setAircraftPrimaryIce($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setAircraftPrimarySeats($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setAircraftPrimaryNNumber($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setAircraftSecondaryId($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setAircraftSecondaryOwn($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setAircraftSecondaryIce($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setAircraftSecondarySeats($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setAircraftSecondaryNNumber($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setPilotCertificate($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setRatings($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setMedicalClass($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setLicenseType($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setTotalHours($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setIfrHours($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setMultiHours($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setOtherHours($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setDateOfBirth($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setHeight($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setWeight($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setAvailabilityWeekdays($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setAvailabilityWeeknights($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setAvailabilityWeekends($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setAvailabilityNotice($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setAvailabilityLastMinute($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setAvailabilityCopilot($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setAffirmationAgreed($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setInsuranceAgreed($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setVolunteerInterest($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setCompanyName($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setCompanyPosition($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setCompanyMatchFunds($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setCompanyBusinessCategoryId($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setReferralSource($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setPremiumChoice($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setPremiumSize($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setDuesAmountPaid($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setDonationAmountPaid($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setMethodOfPaymentId($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setCcardApprovalNumber($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setCcardErrorCode($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setCcardAvsResult($arr[$keys[76]]);
		if (array_key_exists($keys[77], $arr)) $this->setProcessedDate($arr[$keys[77]]);
		if (array_key_exists($keys[78], $arr)) $this->setMemberId($arr[$keys[78]]);
		if (array_key_exists($keys[79], $arr)) $this->setMissionOrientation($arr[$keys[79]]);
		if (array_key_exists($keys[80], $arr)) $this->setMissionCoordination($arr[$keys[80]]);
		if (array_key_exists($keys[81], $arr)) $this->setPilotRecruitment($arr[$keys[81]]);
		if (array_key_exists($keys[82], $arr)) $this->setFundRaising($arr[$keys[82]]);
		if (array_key_exists($keys[83], $arr)) $this->setCelebrityContacts($arr[$keys[83]]);
		if (array_key_exists($keys[84], $arr)) $this->setHospitalOutreach($arr[$keys[84]]);
		if (array_key_exists($keys[85], $arr)) $this->setMediaRelations($arr[$keys[85]]);
		if (array_key_exists($keys[86], $arr)) $this->setTelephoneWork($arr[$keys[86]]);
		if (array_key_exists($keys[87], $arr)) $this->setComputers($arr[$keys[87]]);
		if (array_key_exists($keys[88], $arr)) $this->setClerical($arr[$keys[88]]);
		if (array_key_exists($keys[89], $arr)) $this->setPublicity($arr[$keys[89]]);
		if (array_key_exists($keys[90], $arr)) $this->setWriting($arr[$keys[90]]);
		if (array_key_exists($keys[91], $arr)) $this->setSpeakersBureau($arr[$keys[91]]);
		if (array_key_exists($keys[92], $arr)) $this->setWingTeam($arr[$keys[92]]);
		if (array_key_exists($keys[93], $arr)) $this->setGraphicArts($arr[$keys[93]]);
		if (array_key_exists($keys[94], $arr)) $this->setEventPlanning($arr[$keys[94]]);
		if (array_key_exists($keys[95], $arr)) $this->setWebInternet($arr[$keys[95]]);
		if (array_key_exists($keys[96], $arr)) $this->setFoundationContacts($arr[$keys[96]]);
		if (array_key_exists($keys[97], $arr)) $this->setAviationContacts($arr[$keys[97]]);
		if (array_key_exists($keys[98], $arr)) $this->setPrinting($arr[$keys[98]]);
		if (array_key_exists($keys[99], $arr)) $this->setMemberAopa($arr[$keys[99]]);
		if (array_key_exists($keys[100], $arr)) $this->setMemberKiwanis($arr[$keys[100]]);
		if (array_key_exists($keys[101], $arr)) $this->setMemberRotary($arr[$keys[101]]);
		if (array_key_exists($keys[102], $arr)) $this->setMemberLions($arr[$keys[102]]);
		if (array_key_exists($keys[103], $arr)) $this->setPersonId($arr[$keys[103]]);
		if (array_key_exists($keys[104], $arr)) $this->setNovapointeId($arr[$keys[104]]);
		if (array_key_exists($keys[105], $arr)) $this->setPremiumShipDate($arr[$keys[105]]);
		if (array_key_exists($keys[106], $arr)) $this->setPremiumShipMethod($arr[$keys[106]]);
		if (array_key_exists($keys[107], $arr)) $this->setPremiumShipCost($arr[$keys[107]]);
		if (array_key_exists($keys[108], $arr)) $this->setPremiumShipTrackingNumber($arr[$keys[108]]);
		if (array_key_exists($keys[109], $arr)) $this->setRefererName($arr[$keys[109]]);
		if (array_key_exists($keys[110], $arr)) $this->setReferralSessionId($arr[$keys[110]]);
		if (array_key_exists($keys[111], $arr)) $this->setAircraftThirdId($arr[$keys[111]]);
		if (array_key_exists($keys[112], $arr)) $this->setAircraftThirdOwn($arr[$keys[112]]);
		if (array_key_exists($keys[113], $arr)) $this->setAircraftThirdIce($arr[$keys[113]]);
		if (array_key_exists($keys[114], $arr)) $this->setAircraftThirdSeats($arr[$keys[114]]);
		if (array_key_exists($keys[115], $arr)) $this->setAircraftThirdNNumber($arr[$keys[115]]);
		if (array_key_exists($keys[116], $arr)) $this->setIpAddress($arr[$keys[116]]);
		if (array_key_exists($keys[117], $arr)) $this->setPagerEmail($arr[$keys[117]]);
		if (array_key_exists($keys[118], $arr)) $this->setMember99s($arr[$keys[118]]);
		if (array_key_exists($keys[119], $arr)) $this->setMemberWia($arr[$keys[119]]);
		if (array_key_exists($keys[120], $arr)) $this->setMissionEmailOptin($arr[$keys[120]]);
		if (array_key_exists($keys[121], $arr)) $this->setHseatsInterest($arr[$keys[121]]);
		if (array_key_exists($keys[122], $arr)) $this->setMasterApplicationId($arr[$keys[122]]);
		if (array_key_exists($keys[123], $arr)) $this->setMasterMemberId($arr[$keys[123]]);
		if (array_key_exists($keys[124], $arr)) $this->setReferralSourceOther($arr[$keys[124]]);
		if (array_key_exists($keys[125], $arr)) $this->setSecondaryEmail($arr[$keys[125]]);
		if (array_key_exists($keys[126], $arr)) $this->setPaymentTransactionId($arr[$keys[126]]);
		if (array_key_exists($keys[127], $arr)) $this->setMiddleName($arr[$keys[127]]);
		if (array_key_exists($keys[128], $arr)) $this->setSuffix($arr[$keys[128]]);
		if (array_key_exists($keys[129], $arr)) $this->setNickname($arr[$keys[129]]);
		if (array_key_exists($keys[130], $arr)) $this->setVeteran($arr[$keys[130]]);
		if (array_key_exists($keys[131], $arr)) $this->setGender($arr[$keys[131]]);
		if (array_key_exists($keys[132], $arr)) $this->setEmergencyContactName($arr[$keys[132]]);
		if (array_key_exists($keys[133], $arr)) $this->setEmergencyContactPhone($arr[$keys[133]]);
		if (array_key_exists($keys[134], $arr)) $this->setCountry($arr[$keys[134]]);
		if (array_key_exists($keys[135], $arr)) $this->setDriversLicenseState($arr[$keys[135]]);
		if (array_key_exists($keys[136], $arr)) $this->setDriversLicenseNumber($arr[$keys[136]]);
		if (array_key_exists($keys[137], $arr)) $this->setCcardNumber($arr[$keys[137]]);
		if (array_key_exists($keys[138], $arr)) $this->setCcardCode($arr[$keys[138]]);
		if (array_key_exists($keys[139], $arr)) $this->setCcardExpire($arr[$keys[139]]);
		if (array_key_exists($keys[140], $arr)) $this->setIsComplete($arr[$keys[140]]);
		if (array_key_exists($keys[141], $arr)) $this->setMemberClassId($arr[$keys[141]]);
		if (array_key_exists($keys[142], $arr)) $this->setWingId($arr[$keys[142]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(ApplicationTempPeer::DATABASE_NAME);

		if ($this->isColumnModified(ApplicationTempPeer::ID)) $criteria->add(ApplicationTempPeer::ID, $this->id);
		if ($this->isColumnModified(ApplicationTempPeer::APPLICATION_DATE)) $criteria->add(ApplicationTempPeer::APPLICATION_DATE, $this->application_date);
		if ($this->isColumnModified(ApplicationTempPeer::RENEWAL)) $criteria->add(ApplicationTempPeer::RENEWAL, $this->renewal);
		if ($this->isColumnModified(ApplicationTempPeer::TITLE)) $criteria->add(ApplicationTempPeer::TITLE, $this->title);
		if ($this->isColumnModified(ApplicationTempPeer::FIRST_NAME)) $criteria->add(ApplicationTempPeer::FIRST_NAME, $this->first_name);
		if ($this->isColumnModified(ApplicationTempPeer::LAST_NAME)) $criteria->add(ApplicationTempPeer::LAST_NAME, $this->last_name);
		if ($this->isColumnModified(ApplicationTempPeer::ADDRESS1)) $criteria->add(ApplicationTempPeer::ADDRESS1, $this->address1);
		if ($this->isColumnModified(ApplicationTempPeer::ADDRESS2)) $criteria->add(ApplicationTempPeer::ADDRESS2, $this->address2);
		if ($this->isColumnModified(ApplicationTempPeer::CITY)) $criteria->add(ApplicationTempPeer::CITY, $this->city);
		if ($this->isColumnModified(ApplicationTempPeer::STATE)) $criteria->add(ApplicationTempPeer::STATE, $this->state);
		if ($this->isColumnModified(ApplicationTempPeer::ZIPCODE)) $criteria->add(ApplicationTempPeer::ZIPCODE, $this->zipcode);
		if ($this->isColumnModified(ApplicationTempPeer::DAY_PHONE)) $criteria->add(ApplicationTempPeer::DAY_PHONE, $this->day_phone);
		if ($this->isColumnModified(ApplicationTempPeer::DAY_COMMENT)) $criteria->add(ApplicationTempPeer::DAY_COMMENT, $this->day_comment);
		if ($this->isColumnModified(ApplicationTempPeer::EVE_PHONE)) $criteria->add(ApplicationTempPeer::EVE_PHONE, $this->eve_phone);
		if ($this->isColumnModified(ApplicationTempPeer::EVE_COMMENT)) $criteria->add(ApplicationTempPeer::EVE_COMMENT, $this->eve_comment);
		if ($this->isColumnModified(ApplicationTempPeer::MOBILE_PHONE)) $criteria->add(ApplicationTempPeer::MOBILE_PHONE, $this->mobile_phone);
		if ($this->isColumnModified(ApplicationTempPeer::MOBILE_COMMENT)) $criteria->add(ApplicationTempPeer::MOBILE_COMMENT, $this->mobile_comment);
		if ($this->isColumnModified(ApplicationTempPeer::PAGER_PHONE)) $criteria->add(ApplicationTempPeer::PAGER_PHONE, $this->pager_phone);
		if ($this->isColumnModified(ApplicationTempPeer::PAGER_COMMENT)) $criteria->add(ApplicationTempPeer::PAGER_COMMENT, $this->pager_comment);
		if ($this->isColumnModified(ApplicationTempPeer::FAX_PHONE1)) $criteria->add(ApplicationTempPeer::FAX_PHONE1, $this->fax_phone1);
		if ($this->isColumnModified(ApplicationTempPeer::FAX_COMMENT1)) $criteria->add(ApplicationTempPeer::FAX_COMMENT1, $this->fax_comment1);
		if ($this->isColumnModified(ApplicationTempPeer::FAX_PHONE2)) $criteria->add(ApplicationTempPeer::FAX_PHONE2, $this->fax_phone2);
		if ($this->isColumnModified(ApplicationTempPeer::FAX_COMMENT2)) $criteria->add(ApplicationTempPeer::FAX_COMMENT2, $this->fax_comment2);
		if ($this->isColumnModified(ApplicationTempPeer::OTHER_PHONE)) $criteria->add(ApplicationTempPeer::OTHER_PHONE, $this->other_phone);
		if ($this->isColumnModified(ApplicationTempPeer::OTHER_COMMENT)) $criteria->add(ApplicationTempPeer::OTHER_COMMENT, $this->other_comment);
		if ($this->isColumnModified(ApplicationTempPeer::EMAIL)) $criteria->add(ApplicationTempPeer::EMAIL, $this->email);
		if ($this->isColumnModified(ApplicationTempPeer::SPOUSE_FIRST_NAME)) $criteria->add(ApplicationTempPeer::SPOUSE_FIRST_NAME, $this->spouse_first_name);
		if ($this->isColumnModified(ApplicationTempPeer::SPOUSE_LAST_NAME)) $criteria->add(ApplicationTempPeer::SPOUSE_LAST_NAME, $this->spouse_last_name);
		if ($this->isColumnModified(ApplicationTempPeer::APPLICANT_PILOT)) $criteria->add(ApplicationTempPeer::APPLICANT_PILOT, $this->applicant_pilot);
		if ($this->isColumnModified(ApplicationTempPeer::SPOUSE_PILOT)) $criteria->add(ApplicationTempPeer::SPOUSE_PILOT, $this->spouse_pilot);
		if ($this->isColumnModified(ApplicationTempPeer::APPLICANT_COPILOT)) $criteria->add(ApplicationTempPeer::APPLICANT_COPILOT, $this->applicant_copilot);
		if ($this->isColumnModified(ApplicationTempPeer::LANGUAGES_SPOKEN)) $criteria->add(ApplicationTempPeer::LANGUAGES_SPOKEN, $this->languages_spoken);
		if ($this->isColumnModified(ApplicationTempPeer::HOME_BASE)) $criteria->add(ApplicationTempPeer::HOME_BASE, $this->home_base);
		if ($this->isColumnModified(ApplicationTempPeer::FBO_NAME)) $criteria->add(ApplicationTempPeer::FBO_NAME, $this->fbo_name);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_PRIMARY_ID)) $criteria->add(ApplicationTempPeer::AIRCRAFT_PRIMARY_ID, $this->aircraft_primary_id);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_PRIMARY_OWN)) $criteria->add(ApplicationTempPeer::AIRCRAFT_PRIMARY_OWN, $this->aircraft_primary_own);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_PRIMARY_ICE)) $criteria->add(ApplicationTempPeer::AIRCRAFT_PRIMARY_ICE, $this->aircraft_primary_ice);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_PRIMARY_SEATS)) $criteria->add(ApplicationTempPeer::AIRCRAFT_PRIMARY_SEATS, $this->aircraft_primary_seats);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_PRIMARY_N_NUMBER)) $criteria->add(ApplicationTempPeer::AIRCRAFT_PRIMARY_N_NUMBER, $this->aircraft_primary_n_number);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_SECONDARY_ID)) $criteria->add(ApplicationTempPeer::AIRCRAFT_SECONDARY_ID, $this->aircraft_secondary_id);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_SECONDARY_OWN)) $criteria->add(ApplicationTempPeer::AIRCRAFT_SECONDARY_OWN, $this->aircraft_secondary_own);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_SECONDARY_ICE)) $criteria->add(ApplicationTempPeer::AIRCRAFT_SECONDARY_ICE, $this->aircraft_secondary_ice);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_SECONDARY_SEATS)) $criteria->add(ApplicationTempPeer::AIRCRAFT_SECONDARY_SEATS, $this->aircraft_secondary_seats);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_SECONDARY_N_NUMBER)) $criteria->add(ApplicationTempPeer::AIRCRAFT_SECONDARY_N_NUMBER, $this->aircraft_secondary_n_number);
		if ($this->isColumnModified(ApplicationTempPeer::PILOT_CERTIFICATE)) $criteria->add(ApplicationTempPeer::PILOT_CERTIFICATE, $this->pilot_certificate);
		if ($this->isColumnModified(ApplicationTempPeer::RATINGS)) $criteria->add(ApplicationTempPeer::RATINGS, $this->ratings);
		if ($this->isColumnModified(ApplicationTempPeer::MEDICAL_CLASS)) $criteria->add(ApplicationTempPeer::MEDICAL_CLASS, $this->medical_class);
		if ($this->isColumnModified(ApplicationTempPeer::LICENSE_TYPE)) $criteria->add(ApplicationTempPeer::LICENSE_TYPE, $this->license_type);
		if ($this->isColumnModified(ApplicationTempPeer::TOTAL_HOURS)) $criteria->add(ApplicationTempPeer::TOTAL_HOURS, $this->total_hours);
		if ($this->isColumnModified(ApplicationTempPeer::IFR_HOURS)) $criteria->add(ApplicationTempPeer::IFR_HOURS, $this->ifr_hours);
		if ($this->isColumnModified(ApplicationTempPeer::MULTI_HOURS)) $criteria->add(ApplicationTempPeer::MULTI_HOURS, $this->multi_hours);
		if ($this->isColumnModified(ApplicationTempPeer::OTHER_HOURS)) $criteria->add(ApplicationTempPeer::OTHER_HOURS, $this->other_hours);
		if ($this->isColumnModified(ApplicationTempPeer::DATE_OF_BIRTH)) $criteria->add(ApplicationTempPeer::DATE_OF_BIRTH, $this->date_of_birth);
		if ($this->isColumnModified(ApplicationTempPeer::HEIGHT)) $criteria->add(ApplicationTempPeer::HEIGHT, $this->height);
		if ($this->isColumnModified(ApplicationTempPeer::WEIGHT)) $criteria->add(ApplicationTempPeer::WEIGHT, $this->weight);
		if ($this->isColumnModified(ApplicationTempPeer::AVAILABILITY_WEEKDAYS)) $criteria->add(ApplicationTempPeer::AVAILABILITY_WEEKDAYS, $this->availability_weekdays);
		if ($this->isColumnModified(ApplicationTempPeer::AVAILABILITY_WEEKNIGHTS)) $criteria->add(ApplicationTempPeer::AVAILABILITY_WEEKNIGHTS, $this->availability_weeknights);
		if ($this->isColumnModified(ApplicationTempPeer::AVAILABILITY_WEEKENDS)) $criteria->add(ApplicationTempPeer::AVAILABILITY_WEEKENDS, $this->availability_weekends);
		if ($this->isColumnModified(ApplicationTempPeer::AVAILABILITY_NOTICE)) $criteria->add(ApplicationTempPeer::AVAILABILITY_NOTICE, $this->availability_notice);
		if ($this->isColumnModified(ApplicationTempPeer::AVAILABILITY_LAST_MINUTE)) $criteria->add(ApplicationTempPeer::AVAILABILITY_LAST_MINUTE, $this->availability_last_minute);
		if ($this->isColumnModified(ApplicationTempPeer::AVAILABILITY_COPILOT)) $criteria->add(ApplicationTempPeer::AVAILABILITY_COPILOT, $this->availability_copilot);
		if ($this->isColumnModified(ApplicationTempPeer::AFFIRMATION_AGREED)) $criteria->add(ApplicationTempPeer::AFFIRMATION_AGREED, $this->affirmation_agreed);
		if ($this->isColumnModified(ApplicationTempPeer::INSURANCE_AGREED)) $criteria->add(ApplicationTempPeer::INSURANCE_AGREED, $this->insurance_agreed);
		if ($this->isColumnModified(ApplicationTempPeer::VOLUNTEER_INTEREST)) $criteria->add(ApplicationTempPeer::VOLUNTEER_INTEREST, $this->volunteer_interest);
		if ($this->isColumnModified(ApplicationTempPeer::COMPANY_NAME)) $criteria->add(ApplicationTempPeer::COMPANY_NAME, $this->company_name);
		if ($this->isColumnModified(ApplicationTempPeer::COMPANY_POSITION)) $criteria->add(ApplicationTempPeer::COMPANY_POSITION, $this->company_position);
		if ($this->isColumnModified(ApplicationTempPeer::COMPANY_MATCH_FUNDS)) $criteria->add(ApplicationTempPeer::COMPANY_MATCH_FUNDS, $this->company_match_funds);
		if ($this->isColumnModified(ApplicationTempPeer::COMPANY_BUSINESS_CATEGORY_ID)) $criteria->add(ApplicationTempPeer::COMPANY_BUSINESS_CATEGORY_ID, $this->company_business_category_id);
		if ($this->isColumnModified(ApplicationTempPeer::REFERRAL_SOURCE)) $criteria->add(ApplicationTempPeer::REFERRAL_SOURCE, $this->referral_source);
		if ($this->isColumnModified(ApplicationTempPeer::PREMIUM_CHOICE)) $criteria->add(ApplicationTempPeer::PREMIUM_CHOICE, $this->premium_choice);
		if ($this->isColumnModified(ApplicationTempPeer::PREMIUM_SIZE)) $criteria->add(ApplicationTempPeer::PREMIUM_SIZE, $this->premium_size);
		if ($this->isColumnModified(ApplicationTempPeer::DUES_AMOUNT_PAID)) $criteria->add(ApplicationTempPeer::DUES_AMOUNT_PAID, $this->dues_amount_paid);
		if ($this->isColumnModified(ApplicationTempPeer::DONATION_AMOUNT_PAID)) $criteria->add(ApplicationTempPeer::DONATION_AMOUNT_PAID, $this->donation_amount_paid);
		if ($this->isColumnModified(ApplicationTempPeer::METHOD_OF_PAYMENT_ID)) $criteria->add(ApplicationTempPeer::METHOD_OF_PAYMENT_ID, $this->method_of_payment_id);
		if ($this->isColumnModified(ApplicationTempPeer::CCARD_APPROVAL_NUMBER)) $criteria->add(ApplicationTempPeer::CCARD_APPROVAL_NUMBER, $this->ccard_approval_number);
		if ($this->isColumnModified(ApplicationTempPeer::CCARD_ERROR_CODE)) $criteria->add(ApplicationTempPeer::CCARD_ERROR_CODE, $this->ccard_error_code);
		if ($this->isColumnModified(ApplicationTempPeer::CCARD_AVS_RESULT)) $criteria->add(ApplicationTempPeer::CCARD_AVS_RESULT, $this->ccard_avs_result);
		if ($this->isColumnModified(ApplicationTempPeer::PROCESSED_DATE)) $criteria->add(ApplicationTempPeer::PROCESSED_DATE, $this->processed_date);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_ID)) $criteria->add(ApplicationTempPeer::MEMBER_ID, $this->member_id);
		if ($this->isColumnModified(ApplicationTempPeer::MISSION_ORIENTATION)) $criteria->add(ApplicationTempPeer::MISSION_ORIENTATION, $this->mission_orientation);
		if ($this->isColumnModified(ApplicationTempPeer::MISSION_COORDINATION)) $criteria->add(ApplicationTempPeer::MISSION_COORDINATION, $this->mission_coordination);
		if ($this->isColumnModified(ApplicationTempPeer::PILOT_RECRUITMENT)) $criteria->add(ApplicationTempPeer::PILOT_RECRUITMENT, $this->pilot_recruitment);
		if ($this->isColumnModified(ApplicationTempPeer::FUND_RAISING)) $criteria->add(ApplicationTempPeer::FUND_RAISING, $this->fund_raising);
		if ($this->isColumnModified(ApplicationTempPeer::CELEBRITY_CONTACTS)) $criteria->add(ApplicationTempPeer::CELEBRITY_CONTACTS, $this->celebrity_contacts);
		if ($this->isColumnModified(ApplicationTempPeer::HOSPITAL_OUTREACH)) $criteria->add(ApplicationTempPeer::HOSPITAL_OUTREACH, $this->hospital_outreach);
		if ($this->isColumnModified(ApplicationTempPeer::MEDIA_RELATIONS)) $criteria->add(ApplicationTempPeer::MEDIA_RELATIONS, $this->media_relations);
		if ($this->isColumnModified(ApplicationTempPeer::TELEPHONE_WORK)) $criteria->add(ApplicationTempPeer::TELEPHONE_WORK, $this->telephone_work);
		if ($this->isColumnModified(ApplicationTempPeer::COMPUTERS)) $criteria->add(ApplicationTempPeer::COMPUTERS, $this->computers);
		if ($this->isColumnModified(ApplicationTempPeer::CLERICAL)) $criteria->add(ApplicationTempPeer::CLERICAL, $this->clerical);
		if ($this->isColumnModified(ApplicationTempPeer::PUBLICITY)) $criteria->add(ApplicationTempPeer::PUBLICITY, $this->publicity);
		if ($this->isColumnModified(ApplicationTempPeer::WRITING)) $criteria->add(ApplicationTempPeer::WRITING, $this->writing);
		if ($this->isColumnModified(ApplicationTempPeer::SPEAKERS_BUREAU)) $criteria->add(ApplicationTempPeer::SPEAKERS_BUREAU, $this->speakers_bureau);
		if ($this->isColumnModified(ApplicationTempPeer::WING_TEAM)) $criteria->add(ApplicationTempPeer::WING_TEAM, $this->wing_team);
		if ($this->isColumnModified(ApplicationTempPeer::GRAPHIC_ARTS)) $criteria->add(ApplicationTempPeer::GRAPHIC_ARTS, $this->graphic_arts);
		if ($this->isColumnModified(ApplicationTempPeer::EVENT_PLANNING)) $criteria->add(ApplicationTempPeer::EVENT_PLANNING, $this->event_planning);
		if ($this->isColumnModified(ApplicationTempPeer::WEB_INTERNET)) $criteria->add(ApplicationTempPeer::WEB_INTERNET, $this->web_internet);
		if ($this->isColumnModified(ApplicationTempPeer::FOUNDATION_CONTACTS)) $criteria->add(ApplicationTempPeer::FOUNDATION_CONTACTS, $this->foundation_contacts);
		if ($this->isColumnModified(ApplicationTempPeer::AVIATION_CONTACTS)) $criteria->add(ApplicationTempPeer::AVIATION_CONTACTS, $this->aviation_contacts);
		if ($this->isColumnModified(ApplicationTempPeer::PRINTING)) $criteria->add(ApplicationTempPeer::PRINTING, $this->printing);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_AOPA)) $criteria->add(ApplicationTempPeer::MEMBER_AOPA, $this->member_aopa);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_KIWANIS)) $criteria->add(ApplicationTempPeer::MEMBER_KIWANIS, $this->member_kiwanis);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_ROTARY)) $criteria->add(ApplicationTempPeer::MEMBER_ROTARY, $this->member_rotary);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_LIONS)) $criteria->add(ApplicationTempPeer::MEMBER_LIONS, $this->member_lions);
		if ($this->isColumnModified(ApplicationTempPeer::PERSON_ID)) $criteria->add(ApplicationTempPeer::PERSON_ID, $this->person_id);
		if ($this->isColumnModified(ApplicationTempPeer::NOVAPOINTE_ID)) $criteria->add(ApplicationTempPeer::NOVAPOINTE_ID, $this->novapointe_id);
		if ($this->isColumnModified(ApplicationTempPeer::PREMIUM_SHIP_DATE)) $criteria->add(ApplicationTempPeer::PREMIUM_SHIP_DATE, $this->premium_ship_date);
		if ($this->isColumnModified(ApplicationTempPeer::PREMIUM_SHIP_METHOD)) $criteria->add(ApplicationTempPeer::PREMIUM_SHIP_METHOD, $this->premium_ship_method);
		if ($this->isColumnModified(ApplicationTempPeer::PREMIUM_SHIP_COST)) $criteria->add(ApplicationTempPeer::PREMIUM_SHIP_COST, $this->premium_ship_cost);
		if ($this->isColumnModified(ApplicationTempPeer::PREMIUM_SHIP_TRACKING_NUMBER)) $criteria->add(ApplicationTempPeer::PREMIUM_SHIP_TRACKING_NUMBER, $this->premium_ship_tracking_number);
		if ($this->isColumnModified(ApplicationTempPeer::REFERER_NAME)) $criteria->add(ApplicationTempPeer::REFERER_NAME, $this->referer_name);
		if ($this->isColumnModified(ApplicationTempPeer::REFERRAL_SESSION_ID)) $criteria->add(ApplicationTempPeer::REFERRAL_SESSION_ID, $this->referral_session_id);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_THIRD_ID)) $criteria->add(ApplicationTempPeer::AIRCRAFT_THIRD_ID, $this->aircraft_third_id);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_THIRD_OWN)) $criteria->add(ApplicationTempPeer::AIRCRAFT_THIRD_OWN, $this->aircraft_third_own);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_THIRD_ICE)) $criteria->add(ApplicationTempPeer::AIRCRAFT_THIRD_ICE, $this->aircraft_third_ice);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_THIRD_SEATS)) $criteria->add(ApplicationTempPeer::AIRCRAFT_THIRD_SEATS, $this->aircraft_third_seats);
		if ($this->isColumnModified(ApplicationTempPeer::AIRCRAFT_THIRD_N_NUMBER)) $criteria->add(ApplicationTempPeer::AIRCRAFT_THIRD_N_NUMBER, $this->aircraft_third_n_number);
		if ($this->isColumnModified(ApplicationTempPeer::IP_ADDRESS)) $criteria->add(ApplicationTempPeer::IP_ADDRESS, $this->ip_address);
		if ($this->isColumnModified(ApplicationTempPeer::PAGER_EMAIL)) $criteria->add(ApplicationTempPeer::PAGER_EMAIL, $this->pager_email);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_99S)) $criteria->add(ApplicationTempPeer::MEMBER_99S, $this->member_99s);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_WIA)) $criteria->add(ApplicationTempPeer::MEMBER_WIA, $this->member_wia);
		if ($this->isColumnModified(ApplicationTempPeer::MISSION_EMAIL_OPTIN)) $criteria->add(ApplicationTempPeer::MISSION_EMAIL_OPTIN, $this->mission_email_optin);
		if ($this->isColumnModified(ApplicationTempPeer::HSEATS_INTEREST)) $criteria->add(ApplicationTempPeer::HSEATS_INTEREST, $this->hseats_interest);
		if ($this->isColumnModified(ApplicationTempPeer::MASTER_APPLICATION_ID)) $criteria->add(ApplicationTempPeer::MASTER_APPLICATION_ID, $this->master_application_id);
		if ($this->isColumnModified(ApplicationTempPeer::MASTER_MEMBER_ID)) $criteria->add(ApplicationTempPeer::MASTER_MEMBER_ID, $this->master_member_id);
		if ($this->isColumnModified(ApplicationTempPeer::REFERRAL_SOURCE_OTHER)) $criteria->add(ApplicationTempPeer::REFERRAL_SOURCE_OTHER, $this->referral_source_other);
		if ($this->isColumnModified(ApplicationTempPeer::SECONDARY_EMAIL)) $criteria->add(ApplicationTempPeer::SECONDARY_EMAIL, $this->secondary_email);
		if ($this->isColumnModified(ApplicationTempPeer::PAYMENT_TRANSACTION_ID)) $criteria->add(ApplicationTempPeer::PAYMENT_TRANSACTION_ID, $this->payment_transaction_id);
		if ($this->isColumnModified(ApplicationTempPeer::MIDDLE_NAME)) $criteria->add(ApplicationTempPeer::MIDDLE_NAME, $this->middle_name);
		if ($this->isColumnModified(ApplicationTempPeer::SUFFIX)) $criteria->add(ApplicationTempPeer::SUFFIX, $this->suffix);
		if ($this->isColumnModified(ApplicationTempPeer::NICKNAME)) $criteria->add(ApplicationTempPeer::NICKNAME, $this->nickname);
		if ($this->isColumnModified(ApplicationTempPeer::VETERAN)) $criteria->add(ApplicationTempPeer::VETERAN, $this->veteran);
		if ($this->isColumnModified(ApplicationTempPeer::GENDER)) $criteria->add(ApplicationTempPeer::GENDER, $this->gender);
		if ($this->isColumnModified(ApplicationTempPeer::EMERGENCY_CONTACT_NAME)) $criteria->add(ApplicationTempPeer::EMERGENCY_CONTACT_NAME, $this->emergency_contact_name);
		if ($this->isColumnModified(ApplicationTempPeer::EMERGENCY_CONTACT_PHONE)) $criteria->add(ApplicationTempPeer::EMERGENCY_CONTACT_PHONE, $this->emergency_contact_phone);
		if ($this->isColumnModified(ApplicationTempPeer::COUNTRY)) $criteria->add(ApplicationTempPeer::COUNTRY, $this->country);
		if ($this->isColumnModified(ApplicationTempPeer::DRIVERS_LICENSE_STATE)) $criteria->add(ApplicationTempPeer::DRIVERS_LICENSE_STATE, $this->drivers_license_state);
		if ($this->isColumnModified(ApplicationTempPeer::DRIVERS_LICENSE_NUMBER)) $criteria->add(ApplicationTempPeer::DRIVERS_LICENSE_NUMBER, $this->drivers_license_number);
		if ($this->isColumnModified(ApplicationTempPeer::CCARD_NUMBER)) $criteria->add(ApplicationTempPeer::CCARD_NUMBER, $this->ccard_number);
		if ($this->isColumnModified(ApplicationTempPeer::CCARD_CODE)) $criteria->add(ApplicationTempPeer::CCARD_CODE, $this->ccard_code);
		if ($this->isColumnModified(ApplicationTempPeer::CCARD_EXPIRE)) $criteria->add(ApplicationTempPeer::CCARD_EXPIRE, $this->ccard_expire);
		if ($this->isColumnModified(ApplicationTempPeer::IS_COMPLETE)) $criteria->add(ApplicationTempPeer::IS_COMPLETE, $this->is_complete);
		if ($this->isColumnModified(ApplicationTempPeer::MEMBER_CLASS_ID)) $criteria->add(ApplicationTempPeer::MEMBER_CLASS_ID, $this->member_class_id);
		if ($this->isColumnModified(ApplicationTempPeer::WING_ID)) $criteria->add(ApplicationTempPeer::WING_ID, $this->wing_id);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(ApplicationTempPeer::DATABASE_NAME);

		$criteria->add(ApplicationTempPeer::ID, $this->id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getId();
	}

	/**
	 * Generic method to set the primary key (id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of ApplicationTemp (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setApplicationDate($this->application_date);

		$copyObj->setRenewal($this->renewal);

		$copyObj->setTitle($this->title);

		$copyObj->setFirstName($this->first_name);

		$copyObj->setLastName($this->last_name);

		$copyObj->setAddress1($this->address1);

		$copyObj->setAddress2($this->address2);

		$copyObj->setCity($this->city);

		$copyObj->setState($this->state);

		$copyObj->setZipcode($this->zipcode);

		$copyObj->setDayPhone($this->day_phone);

		$copyObj->setDayComment($this->day_comment);

		$copyObj->setEvePhone($this->eve_phone);

		$copyObj->setEveComment($this->eve_comment);

		$copyObj->setMobilePhone($this->mobile_phone);

		$copyObj->setMobileComment($this->mobile_comment);

		$copyObj->setPagerPhone($this->pager_phone);

		$copyObj->setPagerComment($this->pager_comment);

		$copyObj->setFaxPhone1($this->fax_phone1);

		$copyObj->setFaxComment1($this->fax_comment1);

		$copyObj->setFaxPhone2($this->fax_phone2);

		$copyObj->setFaxComment2($this->fax_comment2);

		$copyObj->setOtherPhone($this->other_phone);

		$copyObj->setOtherComment($this->other_comment);

		$copyObj->setEmail($this->email);

		$copyObj->setSpouseFirstName($this->spouse_first_name);

		$copyObj->setSpouseLastName($this->spouse_last_name);

		$copyObj->setApplicantPilot($this->applicant_pilot);

		$copyObj->setSpousePilot($this->spouse_pilot);

		$copyObj->setApplicantCopilot($this->applicant_copilot);

		$copyObj->setLanguagesSpoken($this->languages_spoken);

		$copyObj->setHomeBase($this->home_base);

		$copyObj->setFboName($this->fbo_name);

		$copyObj->setAircraftPrimaryId($this->aircraft_primary_id);

		$copyObj->setAircraftPrimaryOwn($this->aircraft_primary_own);

		$copyObj->setAircraftPrimaryIce($this->aircraft_primary_ice);

		$copyObj->setAircraftPrimarySeats($this->aircraft_primary_seats);

		$copyObj->setAircraftPrimaryNNumber($this->aircraft_primary_n_number);

		$copyObj->setAircraftSecondaryId($this->aircraft_secondary_id);

		$copyObj->setAircraftSecondaryOwn($this->aircraft_secondary_own);

		$copyObj->setAircraftSecondaryIce($this->aircraft_secondary_ice);

		$copyObj->setAircraftSecondarySeats($this->aircraft_secondary_seats);

		$copyObj->setAircraftSecondaryNNumber($this->aircraft_secondary_n_number);

		$copyObj->setPilotCertificate($this->pilot_certificate);

		$copyObj->setRatings($this->ratings);

		$copyObj->setMedicalClass($this->medical_class);

		$copyObj->setLicenseType($this->license_type);

		$copyObj->setTotalHours($this->total_hours);

		$copyObj->setIfrHours($this->ifr_hours);

		$copyObj->setMultiHours($this->multi_hours);

		$copyObj->setOtherHours($this->other_hours);

		$copyObj->setDateOfBirth($this->date_of_birth);

		$copyObj->setHeight($this->height);

		$copyObj->setWeight($this->weight);

		$copyObj->setAvailabilityWeekdays($this->availability_weekdays);

		$copyObj->setAvailabilityWeeknights($this->availability_weeknights);

		$copyObj->setAvailabilityWeekends($this->availability_weekends);

		$copyObj->setAvailabilityNotice($this->availability_notice);

		$copyObj->setAvailabilityLastMinute($this->availability_last_minute);

		$copyObj->setAvailabilityCopilot($this->availability_copilot);

		$copyObj->setAffirmationAgreed($this->affirmation_agreed);

		$copyObj->setInsuranceAgreed($this->insurance_agreed);

		$copyObj->setVolunteerInterest($this->volunteer_interest);

		$copyObj->setCompanyName($this->company_name);

		$copyObj->setCompanyPosition($this->company_position);

		$copyObj->setCompanyMatchFunds($this->company_match_funds);

		$copyObj->setCompanyBusinessCategoryId($this->company_business_category_id);

		$copyObj->setReferralSource($this->referral_source);

		$copyObj->setPremiumChoice($this->premium_choice);

		$copyObj->setPremiumSize($this->premium_size);

		$copyObj->setDuesAmountPaid($this->dues_amount_paid);

		$copyObj->setDonationAmountPaid($this->donation_amount_paid);

		$copyObj->setMethodOfPaymentId($this->method_of_payment_id);

		$copyObj->setCcardApprovalNumber($this->ccard_approval_number);

		$copyObj->setCcardErrorCode($this->ccard_error_code);

		$copyObj->setCcardAvsResult($this->ccard_avs_result);

		$copyObj->setProcessedDate($this->processed_date);

		$copyObj->setMemberId($this->member_id);

		$copyObj->setMissionOrientation($this->mission_orientation);

		$copyObj->setMissionCoordination($this->mission_coordination);

		$copyObj->setPilotRecruitment($this->pilot_recruitment);

		$copyObj->setFundRaising($this->fund_raising);

		$copyObj->setCelebrityContacts($this->celebrity_contacts);

		$copyObj->setHospitalOutreach($this->hospital_outreach);

		$copyObj->setMediaRelations($this->media_relations);

		$copyObj->setTelephoneWork($this->telephone_work);

		$copyObj->setComputers($this->computers);

		$copyObj->setClerical($this->clerical);

		$copyObj->setPublicity($this->publicity);

		$copyObj->setWriting($this->writing);

		$copyObj->setSpeakersBureau($this->speakers_bureau);

		$copyObj->setWingTeam($this->wing_team);

		$copyObj->setGraphicArts($this->graphic_arts);

		$copyObj->setEventPlanning($this->event_planning);

		$copyObj->setWebInternet($this->web_internet);

		$copyObj->setFoundationContacts($this->foundation_contacts);

		$copyObj->setAviationContacts($this->aviation_contacts);

		$copyObj->setPrinting($this->printing);

		$copyObj->setMemberAopa($this->member_aopa);

		$copyObj->setMemberKiwanis($this->member_kiwanis);

		$copyObj->setMemberRotary($this->member_rotary);

		$copyObj->setMemberLions($this->member_lions);

		$copyObj->setPersonId($this->person_id);

		$copyObj->setNovapointeId($this->novapointe_id);

		$copyObj->setPremiumShipDate($this->premium_ship_date);

		$copyObj->setPremiumShipMethod($this->premium_ship_method);

		$copyObj->setPremiumShipCost($this->premium_ship_cost);

		$copyObj->setPremiumShipTrackingNumber($this->premium_ship_tracking_number);

		$copyObj->setRefererName($this->referer_name);

		$copyObj->setReferralSessionId($this->referral_session_id);

		$copyObj->setAircraftThirdId($this->aircraft_third_id);

		$copyObj->setAircraftThirdOwn($this->aircraft_third_own);

		$copyObj->setAircraftThirdIce($this->aircraft_third_ice);

		$copyObj->setAircraftThirdSeats($this->aircraft_third_seats);

		$copyObj->setAircraftThirdNNumber($this->aircraft_third_n_number);

		$copyObj->setIpAddress($this->ip_address);

		$copyObj->setPagerEmail($this->pager_email);

		$copyObj->setMember99s($this->member_99s);

		$copyObj->setMemberWia($this->member_wia);

		$copyObj->setMissionEmailOptin($this->mission_email_optin);

		$copyObj->setHseatsInterest($this->hseats_interest);

		$copyObj->setMasterApplicationId($this->master_application_id);

		$copyObj->setMasterMemberId($this->master_member_id);

		$copyObj->setReferralSourceOther($this->referral_source_other);

		$copyObj->setSecondaryEmail($this->secondary_email);

		$copyObj->setPaymentTransactionId($this->payment_transaction_id);

		$copyObj->setMiddleName($this->middle_name);

		$copyObj->setSuffix($this->suffix);

		$copyObj->setNickname($this->nickname);

		$copyObj->setVeteran($this->veteran);

		$copyObj->setGender($this->gender);

		$copyObj->setEmergencyContactName($this->emergency_contact_name);

		$copyObj->setEmergencyContactPhone($this->emergency_contact_phone);

		$copyObj->setCountry($this->country);

		$copyObj->setDriversLicenseState($this->drivers_license_state);

		$copyObj->setDriversLicenseNumber($this->drivers_license_number);

		$copyObj->setCcardNumber($this->ccard_number);

		$copyObj->setCcardCode($this->ccard_code);

		$copyObj->setCcardExpire($this->ccard_expire);

		$copyObj->setIsComplete($this->is_complete);

		$copyObj->setMemberClassId($this->member_class_id);

		$copyObj->setWingId($this->wing_id);


		$copyObj->setNew(true);

		$copyObj->setId(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     ApplicationTemp Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     ApplicationTempPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new ApplicationTempPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseApplicationTemp:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseApplicationTemp::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseApplicationTemp
