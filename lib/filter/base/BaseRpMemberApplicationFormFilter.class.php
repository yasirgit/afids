<?php

require_once(sfConfig::get('sf_lib_dir').'/filter/base/BaseFormFilterPropel.class.php');

/**
 * RpMemberApplication filter form base class.
 *
 * @package    angelflight
 * @subpackage filter
 * @author     Your name here
 * @version    SVN: $Id: sfPropelFormFilterGeneratedTemplate.php 16976 2009-04-04 12:47:44Z fabien $
 */
class BaseRpMemberApplicationFormFilter extends BaseFormFilterPropel
{
  public function setup()
  {
    $this->setWidgets(array(
      'applicationID'             => new sfWidgetFormFilterInput(),
      'applicationDate'           => new sfWidgetFormFilterInput(),
      'title'                     => new sfWidgetFormFilterInput(),
      'firstName'                 => new sfWidgetFormFilterInput(),
      'lastName'                  => new sfWidgetFormFilterInput(),
      'addressOne'                => new sfWidgetFormFilterInput(),
      'addressTwo'                => new sfWidgetFormFilterInput(),
      'city'                      => new sfWidgetFormFilterInput(),
      'state'                     => new sfWidgetFormFilterInput(),
      'zipcode'                   => new sfWidgetFormFilterInput(),
      'dayPhone'                  => new sfWidgetFormFilterInput(),
      'pilotDayComment'           => new sfWidgetFormFilterInput(),
      'evePhone'                  => new sfWidgetFormFilterInput(),
      'pilotEveComment'           => new sfWidgetFormFilterInput(),
      'faxPhone1'                 => new sfWidgetFormFilterInput(),
      'pilotFaxComment'           => new sfWidgetFormFilterInput(),
      'faxPhone2'                 => new sfWidgetFormFilterInput(),
      'pilotFaxComment2'          => new sfWidgetFormFilterInput(),
      'mobilePhone'               => new sfWidgetFormFilterInput(),
      'pilotMobileComment'        => new sfWidgetFormFilterInput(),
      'pagerPhone'                => new sfWidgetFormFilterInput(),
      'pilotPagerComment'         => new sfWidgetFormFilterInput(),
      'otherPhone'                => new sfWidgetFormFilterInput(),
      'pilotOtherComment'         => new sfWidgetFormFilterInput(),
      'email'                     => new sfWidgetFormFilterInput(),
      'pageEmail'                 => new sfWidgetFormFilterInput(),
      'secondaryEmail'            => new sfWidgetFormFilterInput(),
      'spouseFirstName'           => new sfWidgetFormFilterInput(),
      'spouseLastName'            => new sfWidgetFormFilterInput(),
      'applicantPilot'            => new sfWidgetFormFilterInput(),
      'spousePilot'               => new sfWidgetFormFilterInput(),
      'applicantCopilot'          => new sfWidgetFormFilterInput(),
      'languagesSpoken'           => new sfWidgetFormFilterInput(),
      'homeBase'                  => new sfWidgetFormFilterInput(),
      'fboName'                   => new sfWidgetFormFilterInput(),
      'apMake'                    => new sfWidgetFormFilterInput(),
      'apModel'                   => new sfWidgetFormFilterInput(),
      'aircraftPrimaryOwn'        => new sfWidgetFormFilterInput(),
      'aircraftPrimaryIce'        => new sfWidgetFormFilterInput(),
      'aircraftPrimarySeats'      => new sfWidgetFormFilterInput(),
      'aircraftPrimaryNNumber'    => new sfWidgetFormFilterInput(),
      'asMake'                    => new sfWidgetFormFilterInput(),
      'asModel'                   => new sfWidgetFormFilterInput(),
      'aircraftSecondaryOwn'      => new sfWidgetFormFilterInput(),
      'aircraftSecondaryIce'      => new sfWidgetFormFilterInput(),
      'aircraftSecondarySeats'    => new sfWidgetFormFilterInput(),
      'aircraftSecondaryNNumber'  => new sfWidgetFormFilterInput(),
      'pilotCertificate'          => new sfWidgetFormFilterInput(),
      'ratings'                   => new sfWidgetFormFilterInput(),
      'medicalClass'              => new sfWidgetFormFilterInput(),
      'licenseType'               => new sfWidgetFormFilterInput(),
      'totalHours'                => new sfWidgetFormFilterInput(),
      'ifrHours'                  => new sfWidgetFormFilterInput(),
      'multiHours'                => new sfWidgetFormFilterInput(),
      'otherHours'                => new sfWidgetFormFilterInput(),
      'dateOfBirth'               => new sfWidgetFormFilterInput(),
      'height'                    => new sfWidgetFormFilterInput(),
      'weight'                    => new sfWidgetFormFilterInput(),
      'availabilityWeekdays'      => new sfWidgetFormFilterInput(),
      'availabilityWeeknights'    => new sfWidgetFormFilterInput(),
      'availabilityWeekends'      => new sfWidgetFormFilterInput(),
      'availabilityNotice'        => new sfWidgetFormFilterInput(),
      'availabilityLastMinute'    => new sfWidgetFormFilterInput(),
      'availabilityCopilot'       => new sfWidgetFormFilterInput(),
      'affirmationAgreed'         => new sfWidgetFormFilterInput(),
      'insuranceAgreed'           => new sfWidgetFormFilterInput(),
      'hseatsInterest'            => new sfWidgetFormFilterInput(),
      'volunteerInterest'         => new sfWidgetFormFilterInput(),
      'companyPosition'           => new sfWidgetFormFilterInput(),
      'companyMatchFunds'         => new sfWidgetFormFilterInput(),
      'companyBusinessCategoryID' => new sfWidgetFormFilterInput(),
      'referralSource'            => new sfWidgetFormFilterInput(),
      'referralSourceOther'       => new sfWidgetFormFilterInput(),
      'premiumChoice'             => new sfWidgetFormFilterInput(),
      'premiumSize'               => new sfWidgetFormFilterInput(),
      'duesAmountPaid'            => new sfWidgetFormFilterInput(),
      'donationAmountPaid'        => new sfWidgetFormFilterInput(),
      'methodOfPaymentID'         => new sfWidgetFormFilterInput(),
      'ccardApprovalNumber'       => new sfWidgetFormFilterInput(),
      'processedDate'             => new sfWidgetFormFilterInput(),
      'missionOrientation'        => new sfWidgetFormFilterInput(),
      'missionCoordination'       => new sfWidgetFormFilterInput(),
      'pilotRecruitment'          => new sfWidgetFormFilterInput(),
      'fundRaising'               => new sfWidgetFormFilterInput(),
      'celebrityContacts'         => new sfWidgetFormFilterInput(),
      'hospitalOutreach'          => new sfWidgetFormFilterInput(),
      'mediaRelations'            => new sfWidgetFormFilterInput(),
      'telephoneWork'             => new sfWidgetFormFilterInput(),
      'computers'                 => new sfWidgetFormFilterInput(),
      'clerical'                  => new sfWidgetFormFilterInput(),
      'publicity'                 => new sfWidgetFormFilterInput(),
      'writing'                   => new sfWidgetFormFilterInput(),
      'speakersBureau'            => new sfWidgetFormFilterInput(),
      'wingTeam'                  => new sfWidgetFormFilterInput(),
      'graphicArts'               => new sfWidgetFormFilterInput(),
      'eventPlanning'             => new sfWidgetFormFilterInput(),
      'webInternet'               => new sfWidgetFormFilterInput(),
      'foundationContacts'        => new sfWidgetFormFilterInput(),
      'aviationContacts'          => new sfWidgetFormFilterInput(),
      'printing'                  => new sfWidgetFormFilterInput(),
      'memberAOPA'                => new sfWidgetFormFilterInput(),
      'memberKiwanis'             => new sfWidgetFormFilterInput(),
      'memberRotary'              => new sfWidgetFormFilterInput(),
      'memberLions'               => new sfWidgetFormFilterInput(),
      'memberNinetyNines'         => new sfWidgetFormFilterInput(),
      'memberWIA'                 => new sfWidgetFormFilterInput(),
      'EDNewMemberNotify'         => new sfWidgetFormFilterInput(),
      'WNewMemberNotify'          => new sfWidgetFormFilterInput(),
      'badgeMade'                 => new sfWidgetFormFilterInput(),
      'notebookSent'              => new sfWidgetFormFilterInput(),
      'externalID'                => new sfWidgetFormFilterInput(),
      'novapointeID'              => new sfWidgetFormFilterInput(),
      'premiumShipDate'           => new sfWidgetFormFilterInput(),
      'premiumShipMethod'         => new sfWidgetFormFilterInput(),
      'premiumShipTrackingNumber' => new sfWidgetFormFilterInput(),
    ));

    $this->setValidators(array(
      'applicationID'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'applicationDate'           => new sfValidatorPass(array('required' => false)),
      'title'                     => new sfValidatorPass(array('required' => false)),
      'firstName'                 => new sfValidatorPass(array('required' => false)),
      'lastName'                  => new sfValidatorPass(array('required' => false)),
      'addressOne'                => new sfValidatorPass(array('required' => false)),
      'addressTwo'                => new sfValidatorPass(array('required' => false)),
      'city'                      => new sfValidatorPass(array('required' => false)),
      'state'                     => new sfValidatorPass(array('required' => false)),
      'zipcode'                   => new sfValidatorPass(array('required' => false)),
      'dayPhone'                  => new sfValidatorPass(array('required' => false)),
      'pilotDayComment'           => new sfValidatorPass(array('required' => false)),
      'evePhone'                  => new sfValidatorPass(array('required' => false)),
      'pilotEveComment'           => new sfValidatorPass(array('required' => false)),
      'faxPhone1'                 => new sfValidatorPass(array('required' => false)),
      'pilotFaxComment'           => new sfValidatorPass(array('required' => false)),
      'faxPhone2'                 => new sfValidatorPass(array('required' => false)),
      'pilotFaxComment2'          => new sfValidatorPass(array('required' => false)),
      'mobilePhone'               => new sfValidatorPass(array('required' => false)),
      'pilotMobileComment'        => new sfValidatorPass(array('required' => false)),
      'pagerPhone'                => new sfValidatorPass(array('required' => false)),
      'pilotPagerComment'         => new sfValidatorPass(array('required' => false)),
      'otherPhone'                => new sfValidatorPass(array('required' => false)),
      'pilotOtherComment'         => new sfValidatorPass(array('required' => false)),
      'email'                     => new sfValidatorPass(array('required' => false)),
      'pageEmail'                 => new sfValidatorPass(array('required' => false)),
      'secondaryEmail'            => new sfValidatorPass(array('required' => false)),
      'spouseFirstName'           => new sfValidatorPass(array('required' => false)),
      'spouseLastName'            => new sfValidatorPass(array('required' => false)),
      'applicantPilot'            => new sfValidatorPass(array('required' => false)),
      'spousePilot'               => new sfValidatorPass(array('required' => false)),
      'applicantCopilot'          => new sfValidatorPass(array('required' => false)),
      'languagesSpoken'           => new sfValidatorPass(array('required' => false)),
      'homeBase'                  => new sfValidatorPass(array('required' => false)),
      'fboName'                   => new sfValidatorPass(array('required' => false)),
      'apMake'                    => new sfValidatorPass(array('required' => false)),
      'apModel'                   => new sfValidatorPass(array('required' => false)),
      'aircraftPrimaryOwn'        => new sfValidatorPass(array('required' => false)),
      'aircraftPrimaryIce'        => new sfValidatorPass(array('required' => false)),
      'aircraftPrimarySeats'      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraftPrimaryNNumber'    => new sfValidatorPass(array('required' => false)),
      'asMake'                    => new sfValidatorPass(array('required' => false)),
      'asModel'                   => new sfValidatorPass(array('required' => false)),
      'aircraftSecondaryOwn'      => new sfValidatorPass(array('required' => false)),
      'aircraftSecondaryIce'      => new sfValidatorPass(array('required' => false)),
      'aircraftSecondarySeats'    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraftSecondaryNNumber'  => new sfValidatorPass(array('required' => false)),
      'pilotCertificate'          => new sfValidatorPass(array('required' => false)),
      'ratings'                   => new sfValidatorPass(array('required' => false)),
      'medicalClass'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'licenseType'               => new sfValidatorPass(array('required' => false)),
      'totalHours'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'ifrHours'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'multiHours'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'otherHours'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'dateOfBirth'               => new sfValidatorPass(array('required' => false)),
      'height'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'weight'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availabilityWeekdays'      => new sfValidatorPass(array('required' => false)),
      'availabilityWeeknights'    => new sfValidatorPass(array('required' => false)),
      'availabilityWeekends'      => new sfValidatorPass(array('required' => false)),
      'availabilityNotice'        => new sfValidatorPass(array('required' => false)),
      'availabilityLastMinute'    => new sfValidatorPass(array('required' => false)),
      'availabilityCopilot'       => new sfValidatorPass(array('required' => false)),
      'affirmationAgreed'         => new sfValidatorPass(array('required' => false)),
      'insuranceAgreed'           => new sfValidatorPass(array('required' => false)),
      'hseatsInterest'            => new sfValidatorPass(array('required' => false)),
      'volunteerInterest'         => new sfValidatorPass(array('required' => false)),
      'companyPosition'           => new sfValidatorPass(array('required' => false)),
      'companyMatchFunds'         => new sfValidatorPass(array('required' => false)),
      'companyBusinessCategoryID' => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'referralSource'            => new sfValidatorPass(array('required' => false)),
      'referralSourceOther'       => new sfValidatorPass(array('required' => false)),
      'premiumChoice'             => new sfValidatorPass(array('required' => false)),
      'premiumSize'               => new sfValidatorPass(array('required' => false)),
      'duesAmountPaid'            => new sfValidatorSchemaFilter('text', new sfValidatorNumber(array('required' => false))),
      'donationAmountPaid'        => new sfValidatorSchemaFilter('text', new sfValidatorNumber(array('required' => false))),
      'methodOfPaymentID'         => new sfValidatorPass(array('required' => false)),
      'ccardApprovalNumber'       => new sfValidatorPass(array('required' => false)),
      'processedDate'             => new sfValidatorPass(array('required' => false)),
      'missionOrientation'        => new sfValidatorPass(array('required' => false)),
      'missionCoordination'       => new sfValidatorPass(array('required' => false)),
      'pilotRecruitment'          => new sfValidatorPass(array('required' => false)),
      'fundRaising'               => new sfValidatorPass(array('required' => false)),
      'celebrityContacts'         => new sfValidatorPass(array('required' => false)),
      'hospitalOutreach'          => new sfValidatorPass(array('required' => false)),
      'mediaRelations'            => new sfValidatorPass(array('required' => false)),
      'telephoneWork'             => new sfValidatorPass(array('required' => false)),
      'computers'                 => new sfValidatorPass(array('required' => false)),
      'clerical'                  => new sfValidatorPass(array('required' => false)),
      'publicity'                 => new sfValidatorPass(array('required' => false)),
      'writing'                   => new sfValidatorPass(array('required' => false)),
      'speakersBureau'            => new sfValidatorPass(array('required' => false)),
      'wingTeam'                  => new sfValidatorPass(array('required' => false)),
      'graphicArts'               => new sfValidatorPass(array('required' => false)),
      'eventPlanning'             => new sfValidatorPass(array('required' => false)),
      'webInternet'               => new sfValidatorPass(array('required' => false)),
      'foundationContacts'        => new sfValidatorPass(array('required' => false)),
      'aviationContacts'          => new sfValidatorPass(array('required' => false)),
      'printing'                  => new sfValidatorPass(array('required' => false)),
      'memberAOPA'                => new sfValidatorPass(array('required' => false)),
      'memberKiwanis'             => new sfValidatorPass(array('required' => false)),
      'memberRotary'              => new sfValidatorPass(array('required' => false)),
      'memberLions'               => new sfValidatorPass(array('required' => false)),
      'memberNinetyNines'         => new sfValidatorPass(array('required' => false)),
      'memberWIA'                 => new sfValidatorPass(array('required' => false)),
      'EDNewMemberNotify'         => new sfValidatorPass(array('required' => false)),
      'WNewMemberNotify'          => new sfValidatorPass(array('required' => false)),
      'badgeMade'                 => new sfValidatorPass(array('required' => false)),
      'notebookSent'              => new sfValidatorPass(array('required' => false)),
      'externalID'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'novapointeID'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'premiumShipDate'           => new sfValidatorPass(array('required' => false)),
      'premiumShipMethod'         => new sfValidatorPass(array('required' => false)),
      'premiumShipTrackingNumber' => new sfValidatorPass(array('required' => false)),
    ));

    $this->widgetSchema->setNameFormat('rp_member_application_filters[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    parent::setup();
  }

  public function getModelName()
  {
    return 'RpMemberApplication';
  }

  public function getFields()
  {
    return array(
      'applicationID'             => 'Number',
      'applicationDate'           => 'Text',
      'title'                     => 'Text',
      'firstName'                 => 'Text',
      'lastName'                  => 'Text',
      'addressOne'                => 'Text',
      'addressTwo'                => 'Text',
      'city'                      => 'Text',
      'state'                     => 'Text',
      'zipcode'                   => 'Text',
      'dayPhone'                  => 'Text',
      'pilotDayComment'           => 'Text',
      'evePhone'                  => 'Text',
      'pilotEveComment'           => 'Text',
      'faxPhone1'                 => 'Text',
      'pilotFaxComment'           => 'Text',
      'faxPhone2'                 => 'Text',
      'pilotFaxComment2'          => 'Text',
      'mobilePhone'               => 'Text',
      'pilotMobileComment'        => 'Text',
      'pagerPhone'                => 'Text',
      'pilotPagerComment'         => 'Text',
      'otherPhone'                => 'Text',
      'pilotOtherComment'         => 'Text',
      'email'                     => 'Text',
      'pageEmail'                 => 'Text',
      'secondaryEmail'            => 'Text',
      'spouseFirstName'           => 'Text',
      'spouseLastName'            => 'Text',
      'applicantPilot'            => 'Text',
      'spousePilot'               => 'Text',
      'applicantCopilot'          => 'Text',
      'languagesSpoken'           => 'Text',
      'homeBase'                  => 'Text',
      'fboName'                   => 'Text',
      'apMake'                    => 'Text',
      'apModel'                   => 'Text',
      'aircraftPrimaryOwn'        => 'Text',
      'aircraftPrimaryIce'        => 'Text',
      'aircraftPrimarySeats'      => 'Number',
      'aircraftPrimaryNNumber'    => 'Text',
      'asMake'                    => 'Text',
      'asModel'                   => 'Text',
      'aircraftSecondaryOwn'      => 'Text',
      'aircraftSecondaryIce'      => 'Text',
      'aircraftSecondarySeats'    => 'Number',
      'aircraftSecondaryNNumber'  => 'Text',
      'pilotCertificate'          => 'Text',
      'ratings'                   => 'Text',
      'medicalClass'              => 'Number',
      'licenseType'               => 'Text',
      'totalHours'                => 'Number',
      'ifrHours'                  => 'Number',
      'multiHours'                => 'Number',
      'otherHours'                => 'Number',
      'dateOfBirth'               => 'Text',
      'height'                    => 'Number',
      'weight'                    => 'Number',
      'availabilityWeekdays'      => 'Text',
      'availabilityWeeknights'    => 'Text',
      'availabilityWeekends'      => 'Text',
      'availabilityNotice'        => 'Text',
      'availabilityLastMinute'    => 'Text',
      'availabilityCopilot'       => 'Text',
      'affirmationAgreed'         => 'Text',
      'insuranceAgreed'           => 'Text',
      'hseatsInterest'            => 'Text',
      'volunteerInterest'         => 'Text',
      'companyPosition'           => 'Text',
      'companyMatchFunds'         => 'Text',
      'companyBusinessCategoryID' => 'Number',
      'referralSource'            => 'Text',
      'referralSourceOther'       => 'Text',
      'premiumChoice'             => 'Text',
      'premiumSize'               => 'Text',
      'duesAmountPaid'            => 'Number',
      'donationAmountPaid'        => 'Number',
      'methodOfPaymentID'         => 'Text',
      'ccardApprovalNumber'       => 'Text',
      'processedDate'             => 'Text',
      'missionOrientation'        => 'Text',
      'missionCoordination'       => 'Text',
      'pilotRecruitment'          => 'Text',
      'fundRaising'               => 'Text',
      'celebrityContacts'         => 'Text',
      'hospitalOutreach'          => 'Text',
      'mediaRelations'            => 'Text',
      'telephoneWork'             => 'Text',
      'computers'                 => 'Text',
      'clerical'                  => 'Text',
      'publicity'                 => 'Text',
      'writing'                   => 'Text',
      'speakersBureau'            => 'Text',
      'wingTeam'                  => 'Text',
      'graphicArts'               => 'Text',
      'eventPlanning'             => 'Text',
      'webInternet'               => 'Text',
      'foundationContacts'        => 'Text',
      'aviationContacts'          => 'Text',
      'printing'                  => 'Text',
      'memberAOPA'                => 'Text',
      'memberKiwanis'             => 'Text',
      'memberRotary'              => 'Text',
      'memberLions'               => 'Text',
      'memberNinetyNines'         => 'Text',
      'memberWIA'                 => 'Text',
      'EDNewMemberNotify'         => 'Text',
      'WNewMemberNotify'          => 'Text',
      'badgeMade'                 => 'Text',
      'notebookSent'              => 'Text',
      'externalID'                => 'Number',
      'novapointeID'              => 'Number',
      'premiumShipDate'           => 'Text',
      'premiumShipMethod'         => 'Text',
      'premiumShipTrackingNumber' => 'Text',
      'id'                        => 'Number',
    );
  }
}
