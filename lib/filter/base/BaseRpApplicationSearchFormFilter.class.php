<?php

require_once(sfConfig::get('sf_lib_dir').'/filter/base/BaseFormFilterPropel.class.php');

/**
 * RpApplicationSearch filter form base class.
 *
 * @package    angelflight
 * @subpackage filter
 * @author     Your name here
 * @version    SVN: $Id: sfPropelFormFilterGeneratedTemplate.php 16976 2009-04-04 12:47:44Z fabien $
 */
class BaseRpApplicationSearchFormFilter extends BaseFormFilterPropel
{
  public function setup()
  {
    $this->setWidgets(array(
      'applicationID'            => new sfWidgetFormFilterInput(),
      'applicationDate'          => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
      'personID'                 => new sfWidgetFormFilterInput(),
      'firstName'                => new sfWidgetFormFilterInput(),
      'lastName'                 => new sfWidgetFormFilterInput(),
      'address1'                 => new sfWidgetFormFilterInput(),
      'city'                     => new sfWidgetFormFilterInput(),
      'state'                    => new sfWidgetFormFilterInput(),
      'zipcode'                  => new sfWidgetFormFilterInput(),
      'county'                   => new sfWidgetFormFilterInput(),
      'areaCode'                 => new sfWidgetFormFilterInput(),
      'dayPhone'                 => new sfWidgetFormFilterInput(),
      'dayComment'               => new sfWidgetFormFilterInput(),
      'eveningPhone'             => new sfWidgetFormFilterInput(),
      'eveComment'               => new sfWidgetFormFilterInput(),
      'mobilePhone'              => new sfWidgetFormFilterInput(),
      'mobileComment'            => new sfWidgetFormFilterInput(),
      'otherPhone'               => new sfWidgetFormFilterInput(),
      'otherComment'             => new sfWidgetFormFilterInput(),
      'pagerPhone'               => new sfWidgetFormFilterInput(),
      'pagerComment'             => new sfWidgetFormFilterInput(),
      'email'                    => new sfWidgetFormFilterInput(),
      'spousePilot'              => new sfWidgetFormFilterInput(),
      'wingID'                   => new sfWidgetFormFilterInput(),
      'wingName'                 => new sfWidgetFormFilterInput(),
      'renewalDate'              => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'joinDate'                 => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
      'joinYear'                 => new sfWidgetFormFilterInput(),
      'refSourceID'              => new sfWidgetFormFilterInput(),
      'refSourceName'            => new sfWidgetFormFilterInput(),
      'companyMatchFunds'        => new sfWidgetFormFilterInput(),
      'companyName'              => new sfWidgetFormFilterInput(),
      'companyPosition'          => new sfWidgetFormFilterInput(),
      'vocationClassID'          => new sfWidgetFormFilterInput(),
      'vocationClassName'        => new sfWidgetFormFilterInput(),
      'memberAOPA'               => new sfWidgetFormFilterInput(),
      'memberKiwanis'            => new sfWidgetFormFilterInput(),
      'memberRotary'             => new sfWidgetFormFilterInput(),
      'memberLions'              => new sfWidgetFormFilterInput(),
      'member99s'                => new sfWidgetFormFilterInput(),
      'memberWIA'                => new sfWidgetFormFilterInput(),
      'missionOrientation'       => new sfWidgetFormFilterInput(),
      'missionCoordination'      => new sfWidgetFormFilterInput(),
      'pilotRecruitment'         => new sfWidgetFormFilterInput(),
      'fundRaising'              => new sfWidgetFormFilterInput(),
      'celebrityContacts'        => new sfWidgetFormFilterInput(),
      'graphicArts'              => new sfWidgetFormFilterInput(),
      'hospitalOutreach'         => new sfWidgetFormFilterInput(),
      'eventPlanning'            => new sfWidgetFormFilterInput(),
      'mediaRelations'           => new sfWidgetFormFilterInput(),
      'telephoneWork'            => new sfWidgetFormFilterInput(),
      'computers'                => new sfWidgetFormFilterInput(),
      'printing'                 => new sfWidgetFormFilterInput(),
      'writing'                  => new sfWidgetFormFilterInput(),
      'speakersBureau'           => new sfWidgetFormFilterInput(),
      'wingTeam'                 => new sfWidgetFormFilterInput(),
      'webInternet'              => new sfWidgetFormFilterInput(),
      'foundationContacts'       => new sfWidgetFormFilterInput(),
      'aviationContacts'         => new sfWidgetFormFilterInput(),
      'disasterResponseInterest' => new sfWidgetFormFilterInput(),
      'active'                   => new sfWidgetFormFilterInput(),
      'primary_airport_id'       => new sfWidgetFormFilterInput(),
      'homeBase'                 => new sfWidgetFormFilterInput(),
    ));

    $this->setValidators(array(
      'applicationID'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'applicationDate'          => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'personID'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'firstName'                => new sfValidatorPass(array('required' => false)),
      'lastName'                 => new sfValidatorPass(array('required' => false)),
      'address1'                 => new sfValidatorPass(array('required' => false)),
      'city'                     => new sfValidatorPass(array('required' => false)),
      'state'                    => new sfValidatorPass(array('required' => false)),
      'zipcode'                  => new sfValidatorPass(array('required' => false)),
      'county'                   => new sfValidatorPass(array('required' => false)),
      'areaCode'                 => new sfValidatorPass(array('required' => false)),
      'dayPhone'                 => new sfValidatorPass(array('required' => false)),
      'dayComment'               => new sfValidatorPass(array('required' => false)),
      'eveningPhone'             => new sfValidatorPass(array('required' => false)),
      'eveComment'               => new sfValidatorPass(array('required' => false)),
      'mobilePhone'              => new sfValidatorPass(array('required' => false)),
      'mobileComment'            => new sfValidatorPass(array('required' => false)),
      'otherPhone'               => new sfValidatorPass(array('required' => false)),
      'otherComment'             => new sfValidatorPass(array('required' => false)),
      'pagerPhone'               => new sfValidatorPass(array('required' => false)),
      'pagerComment'             => new sfValidatorPass(array('required' => false)),
      'email'                    => new sfValidatorPass(array('required' => false)),
      'spousePilot'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'wingID'                   => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'wingName'                 => new sfValidatorPass(array('required' => false)),
      'renewalDate'              => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'joinDate'                 => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'joinYear'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'refSourceID'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'refSourceName'            => new sfValidatorPass(array('required' => false)),
      'companyMatchFunds'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'companyName'              => new sfValidatorPass(array('required' => false)),
      'companyPosition'          => new sfValidatorPass(array('required' => false)),
      'vocationClassID'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'vocationClassName'        => new sfValidatorPass(array('required' => false)),
      'memberAOPA'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'memberKiwanis'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'memberRotary'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'memberLions'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member99s'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'memberWIA'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'missionOrientation'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'missionCoordination'      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'pilotRecruitment'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'fundRaising'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'celebrityContacts'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'graphicArts'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'hospitalOutreach'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'eventPlanning'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'mediaRelations'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'telephoneWork'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'computers'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'printing'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'writing'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'speakersBureau'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'wingTeam'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'webInternet'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'foundationContacts'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aviationContacts'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'disasterResponseInterest' => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'active'                   => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'primary_airport_id'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'homeBase'                 => new sfValidatorPass(array('required' => false)),
    ));

    $this->widgetSchema->setNameFormat('rp_application_search_filters[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    parent::setup();
  }

  public function getModelName()
  {
    return 'RpApplicationSearch';
  }

  public function getFields()
  {
    return array(
      'applicationID'            => 'Number',
      'applicationDate'          => 'Date',
      'personID'                 => 'Number',
      'firstName'                => 'Text',
      'lastName'                 => 'Text',
      'address1'                 => 'Text',
      'city'                     => 'Text',
      'state'                    => 'Text',
      'zipcode'                  => 'Text',
      'county'                   => 'Text',
      'areaCode'                 => 'Text',
      'dayPhone'                 => 'Text',
      'dayComment'               => 'Text',
      'eveningPhone'             => 'Text',
      'eveComment'               => 'Text',
      'mobilePhone'              => 'Text',
      'mobileComment'            => 'Text',
      'otherPhone'               => 'Text',
      'otherComment'             => 'Text',
      'pagerPhone'               => 'Text',
      'pagerComment'             => 'Text',
      'email'                    => 'Text',
      'spousePilot'              => 'Number',
      'wingID'                   => 'Number',
      'wingName'                 => 'Text',
      'renewalDate'              => 'Date',
      'joinDate'                 => 'Date',
      'joinYear'                 => 'Number',
      'refSourceID'              => 'Number',
      'refSourceName'            => 'Text',
      'companyMatchFunds'        => 'Number',
      'companyName'              => 'Text',
      'companyPosition'          => 'Text',
      'vocationClassID'          => 'Number',
      'vocationClassName'        => 'Text',
      'memberAOPA'               => 'Number',
      'memberKiwanis'            => 'Number',
      'memberRotary'             => 'Number',
      'memberLions'              => 'Number',
      'member99s'                => 'Number',
      'memberWIA'                => 'Number',
      'missionOrientation'       => 'Number',
      'missionCoordination'      => 'Number',
      'pilotRecruitment'         => 'Number',
      'fundRaising'              => 'Number',
      'celebrityContacts'        => 'Number',
      'graphicArts'              => 'Number',
      'hospitalOutreach'         => 'Number',
      'eventPlanning'            => 'Number',
      'mediaRelations'           => 'Number',
      'telephoneWork'            => 'Number',
      'computers'                => 'Number',
      'printing'                 => 'Number',
      'writing'                  => 'Number',
      'speakersBureau'           => 'Number',
      'wingTeam'                 => 'Number',
      'webInternet'              => 'Number',
      'foundationContacts'       => 'Number',
      'aviationContacts'         => 'Number',
      'disasterResponseInterest' => 'Number',
      'active'                   => 'Number',
      'primary_airport_id'       => 'Number',
      'homeBase'                 => 'Text',
      'id'                       => 'Number',
    );
  }
}
