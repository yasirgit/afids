<?php

require_once(sfConfig::get('sf_lib_dir').'/filter/base/BaseFormFilterPropel.class.php');

/**
 * RpMemberDirectory filter form base class.
 *
 * @package    angelflight
 * @subpackage filter
 * @author     Your name here
 * @version    SVN: $Id: sfPropelFormFilterGeneratedTemplate.php 16976 2009-04-04 12:47:44Z fabien $
 */
class BaseRpMemberDirectoryFormFilter extends BaseFormFilterPropel
{
  public function setup()
  {
    $this->setWidgets(array(
      'external_id'            => new sfWidgetFormFilterInput(),
      'personID'               => new sfWidgetFormFilterInput(),
      'firstName'              => new sfWidgetFormFilterInput(),
      'lastName'               => new sfWidgetFormFilterInput(),
      'address_one'            => new sfWidgetFormFilterInput(),
      'address_two'            => new sfWidgetFormFilterInput(),
      'city'                   => new sfWidgetFormFilterInput(),
      'state'                  => new sfWidgetFormFilterInput(),
      'zipcode'                => new sfWidgetFormFilterInput(),
      'deceased'               => new sfWidgetFormFilterInput(),
      'emailBlocked'           => new sfWidgetFormFilterInput(),
      'email'                  => new sfWidgetFormFilterInput(),
      'secondaryEmail'         => new sfWidgetFormFilterInput(),
      'pagerEmail'             => new sfWidgetFormFilterInput(),
      'countyName'             => new sfWidgetFormFilterInput(),
      'areaCode'               => new sfWidgetFormFilterInput(),
      'dayPhone'               => new sfWidgetFormFilterInput(),
      'day_comment'            => new sfWidgetFormFilterInput(),
      'evePhone'               => new sfWidgetFormFilterInput(),
      'evening_comment'        => new sfWidgetFormFilterInput(),
      'mobilePhone'            => new sfWidgetFormFilterInput(),
      'mobile_comment'         => new sfWidgetFormFilterInput(),
      'pagerPhone'             => new sfWidgetFormFilterInput(),
      'pager_comment'          => new sfWidgetFormFilterInput(),
      'faxPhone1'              => new sfWidgetFormFilterInput(),
      'fax_comment1'           => new sfWidgetFormFilterInput(),
      'faxPhone2'              => new sfWidgetFormFilterInput(),
      'fax_comment2'           => new sfWidgetFormFilterInput(),
      'otherPhone'             => new sfWidgetFormFilterInput(),
      'other_comment'          => new sfWidgetFormFilterInput(),
      'license_type'           => new sfWidgetFormFilterInput(),
      'ifr'                    => new sfWidgetFormFilterInput(),
      'multiEngine'            => new sfWidgetFormFilterInput(),
      'se_instructor'          => new sfWidgetFormFilterInput(),
      'hseats'                 => new sfWidgetFormFilterInput(),
      'transplant'             => new sfWidgetFormFilterInput(),
      'me_instructor'          => new sfWidgetFormFilterInput(),
      'mop_regions_served'     => new sfWidgetFormFilterInput(),
      'mop'                    => new sfWidgetFormFilterInput(),
      'insurance_received'     => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'cfi'                    => new sfWidgetFormFilterInput(),
      'insuranceExpired'       => new sfWidgetFormFilterInput(),
      'memberID'               => new sfWidgetFormFilterInput(),
      'flight_status'          => new sfWidgetFormFilterInput(),
      'renewal_date'           => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'date_of_birth'          => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'birthdayMonth'          => new sfWidgetFormFilterInput(),
      'disasterResponseStatus' => new sfWidgetFormFilterInput(),
      'coordinator_notes'      => new sfWidgetFormFilterInput(),
      'wingName'               => new sfWidgetFormFilterInput(),
      'wing_id'                => new sfWidgetFormFilterInput(),
      'active'                 => new sfWidgetFormFilterInput(),
      'member_class_id'        => new sfWidgetFormFilterInput(),
      'homeBase'               => new sfWidgetFormFilterInput(),
      'wingJobID'              => new sfWidgetFormFilterInput(),
      'wingJob'                => new sfWidgetFormFilterInput(),
      'coordinator'            => new sfWidgetFormFilterInput(),
      'coordinatorID'          => new sfWidgetFormFilterInput(),
      'boardMember'            => new sfWidgetFormFilterInput(),
      'boardMemberID'          => new sfWidgetFormFilterInput(),
      'notAvailable'           => new sfWidgetFormFilterInput(),
      'noWeekday'              => new sfWidgetFormFilterInput(),
      'noNight'                => new sfWidgetFormFilterInput(),
      'noWeekend'              => new sfWidgetFormFilterInput(),
      'lastMinute'             => new sfWidgetFormFilterInput(),
      'firstDate'              => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'lastDate'               => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'availabilityComment'    => new sfWidgetFormFilterInput(),
      'aircraftOwner'          => new sfWidgetFormFilterInput(),
      'fastestAircraft'        => new sfWidgetFormFilterInput(),
      'longestRangeAircraft'   => new sfWidgetFormFilterInput(),
      'mostSeatsAircraft'      => new sfWidgetFormFilterInput(),
      'maxLoadAircraft'        => new sfWidgetFormFilterInput(),
      'missionCountThisYear'   => new sfWidgetFormFilterInput(),
      'missionCountTotal'      => new sfWidgetFormFilterInput(),
      'lastMissionFlown'       => new sfWidgetFormFilterInput(),
      'nextPendingMission'     => new sfWidgetFormFilterInput(),
    ));

    $this->setValidators(array(
      'external_id'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'personID'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'firstName'              => new sfValidatorPass(array('required' => false)),
      'lastName'               => new sfValidatorPass(array('required' => false)),
      'address_one'            => new sfValidatorPass(array('required' => false)),
      'address_two'            => new sfValidatorPass(array('required' => false)),
      'city'                   => new sfValidatorPass(array('required' => false)),
      'state'                  => new sfValidatorPass(array('required' => false)),
      'zipcode'                => new sfValidatorPass(array('required' => false)),
      'deceased'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'emailBlocked'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'email'                  => new sfValidatorPass(array('required' => false)),
      'secondaryEmail'         => new sfValidatorPass(array('required' => false)),
      'pagerEmail'             => new sfValidatorPass(array('required' => false)),
      'countyName'             => new sfValidatorPass(array('required' => false)),
      'areaCode'               => new sfValidatorPass(array('required' => false)),
      'dayPhone'               => new sfValidatorPass(array('required' => false)),
      'day_comment'            => new sfValidatorPass(array('required' => false)),
      'evePhone'               => new sfValidatorPass(array('required' => false)),
      'evening_comment'        => new sfValidatorPass(array('required' => false)),
      'mobilePhone'            => new sfValidatorPass(array('required' => false)),
      'mobile_comment'         => new sfValidatorPass(array('required' => false)),
      'pagerPhone'             => new sfValidatorPass(array('required' => false)),
      'pager_comment'          => new sfValidatorPass(array('required' => false)),
      'faxPhone1'              => new sfValidatorPass(array('required' => false)),
      'fax_comment1'           => new sfValidatorPass(array('required' => false)),
      'faxPhone2'              => new sfValidatorPass(array('required' => false)),
      'fax_comment2'           => new sfValidatorPass(array('required' => false)),
      'otherPhone'             => new sfValidatorPass(array('required' => false)),
      'other_comment'          => new sfValidatorPass(array('required' => false)),
      'license_type'           => new sfValidatorPass(array('required' => false)),
      'ifr'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'multiEngine'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'se_instructor'          => new sfValidatorPass(array('required' => false)),
      'hseats'                 => new sfValidatorPass(array('required' => false)),
      'transplant'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'me_instructor'          => new sfValidatorPass(array('required' => false)),
      'mop_regions_served'     => new sfValidatorPass(array('required' => false)),
      'mop'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'insurance_received'     => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'cfi'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'insuranceExpired'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'memberID'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'flight_status'          => new sfValidatorPass(array('required' => false)),
      'renewal_date'           => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'date_of_birth'          => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'birthdayMonth'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'disasterResponseStatus' => new sfValidatorPass(array('required' => false)),
      'coordinator_notes'      => new sfValidatorPass(array('required' => false)),
      'wingName'               => new sfValidatorPass(array('required' => false)),
      'wing_id'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'active'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_class_id'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'homeBase'               => new sfValidatorPass(array('required' => false)),
      'wingJobID'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'wingJob'                => new sfValidatorPass(array('required' => false)),
      'coordinator'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'coordinatorID'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'boardMember'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'boardMemberID'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'notAvailable'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'noWeekday'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'noNight'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'noWeekend'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'lastMinute'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'firstDate'              => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'lastDate'               => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'availabilityComment'    => new sfValidatorPass(array('required' => false)),
      'aircraftOwner'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'fastestAircraft'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'longestRangeAircraft'   => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'mostSeatsAircraft'      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'maxLoadAircraft'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'missionCountThisYear'   => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'missionCountTotal'      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'lastMissionFlown'       => new sfValidatorPass(array('required' => false)),
      'nextPendingMission'     => new sfValidatorPass(array('required' => false)),
    ));

    $this->widgetSchema->setNameFormat('rp_member_directory_filters[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    parent::setup();
  }

  public function getModelName()
  {
    return 'RpMemberDirectory';
  }

  public function getFields()
  {
    return array(
      'external_id'            => 'Number',
      'personID'               => 'Number',
      'firstName'              => 'Text',
      'lastName'               => 'Text',
      'address_one'            => 'Text',
      'address_two'            => 'Text',
      'city'                   => 'Text',
      'state'                  => 'Text',
      'zipcode'                => 'Text',
      'deceased'               => 'Number',
      'emailBlocked'           => 'Number',
      'email'                  => 'Text',
      'secondaryEmail'         => 'Text',
      'pagerEmail'             => 'Text',
      'countyName'             => 'Text',
      'areaCode'               => 'Text',
      'dayPhone'               => 'Text',
      'day_comment'            => 'Text',
      'evePhone'               => 'Text',
      'evening_comment'        => 'Text',
      'mobilePhone'            => 'Text',
      'mobile_comment'         => 'Text',
      'pagerPhone'             => 'Text',
      'pager_comment'          => 'Text',
      'faxPhone1'              => 'Text',
      'fax_comment1'           => 'Text',
      'faxPhone2'              => 'Text',
      'fax_comment2'           => 'Text',
      'otherPhone'             => 'Text',
      'other_comment'          => 'Text',
      'license_type'           => 'Text',
      'ifr'                    => 'Number',
      'multiEngine'            => 'Number',
      'se_instructor'          => 'Text',
      'hseats'                 => 'Text',
      'transplant'             => 'Number',
      'me_instructor'          => 'Text',
      'mop_regions_served'     => 'Text',
      'mop'                    => 'Number',
      'insurance_received'     => 'Date',
      'cfi'                    => 'Number',
      'insuranceExpired'       => 'Number',
      'memberID'               => 'Number',
      'flight_status'          => 'Text',
      'renewal_date'           => 'Date',
      'date_of_birth'          => 'Date',
      'birthdayMonth'          => 'Number',
      'disasterResponseStatus' => 'Text',
      'coordinator_notes'      => 'Text',
      'wingName'               => 'Text',
      'wing_id'                => 'Number',
      'active'                 => 'Number',
      'member_class_id'        => 'Number',
      'homeBase'               => 'Text',
      'wingJobID'              => 'Number',
      'wingJob'                => 'Text',
      'coordinator'            => 'Number',
      'coordinatorID'          => 'Number',
      'boardMember'            => 'Number',
      'boardMemberID'          => 'Number',
      'notAvailable'           => 'Number',
      'noWeekday'              => 'Number',
      'noNight'                => 'Number',
      'noWeekend'              => 'Number',
      'lastMinute'             => 'Number',
      'firstDate'              => 'Date',
      'lastDate'               => 'Date',
      'availabilityComment'    => 'Text',
      'aircraftOwner'          => 'Number',
      'fastestAircraft'        => 'Number',
      'longestRangeAircraft'   => 'Number',
      'mostSeatsAircraft'      => 'Number',
      'maxLoadAircraft'        => 'Number',
      'missionCountThisYear'   => 'Number',
      'missionCountTotal'      => 'Number',
      'lastMissionFlown'       => 'Text',
      'nextPendingMission'     => 'Text',
      'id'                     => 'Number',
    );
  }
}
