<?php

require_once(sfConfig::get('sf_lib_dir').'/filter/base/BaseFormFilterPropel.class.php');

/**
 * ApplicationTemp filter form base class.
 *
 * @package    angelflight
 * @subpackage filter
 * @author     Your name here
 * @version    SVN: $Id: sfPropelFormFilterGeneratedTemplate.php 16976 2009-04-04 12:47:44Z fabien $
 */
class BaseApplicationTempFormFilter extends BaseFormFilterPropel
{
  public function setup()
  {
    $this->setWidgets(array(
      'application_date'             => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'renewal'                      => new sfWidgetFormFilterInput(),
      'title'                        => new sfWidgetFormFilterInput(),
      'first_name'                   => new sfWidgetFormFilterInput(),
      'last_name'                    => new sfWidgetFormFilterInput(),
      'address1'                     => new sfWidgetFormFilterInput(),
      'address2'                     => new sfWidgetFormFilterInput(),
      'city'                         => new sfWidgetFormFilterInput(),
      'state'                        => new sfWidgetFormFilterInput(),
      'zipcode'                      => new sfWidgetFormFilterInput(),
      'day_phone'                    => new sfWidgetFormFilterInput(),
      'day_comment'                  => new sfWidgetFormFilterInput(),
      'eve_phone'                    => new sfWidgetFormFilterInput(),
      'eve_comment'                  => new sfWidgetFormFilterInput(),
      'mobile_phone'                 => new sfWidgetFormFilterInput(),
      'mobile_comment'               => new sfWidgetFormFilterInput(),
      'pager_phone'                  => new sfWidgetFormFilterInput(),
      'pager_comment'                => new sfWidgetFormFilterInput(),
      'fax_phone1'                   => new sfWidgetFormFilterInput(),
      'fax_comment1'                 => new sfWidgetFormFilterInput(),
      'fax_phone2'                   => new sfWidgetFormFilterInput(),
      'fax_comment2'                 => new sfWidgetFormFilterInput(),
      'other_phone'                  => new sfWidgetFormFilterInput(),
      'other_comment'                => new sfWidgetFormFilterInput(),
      'email'                        => new sfWidgetFormFilterInput(),
      'spouse_first_name'            => new sfWidgetFormFilterInput(),
      'spouse_last_name'             => new sfWidgetFormFilterInput(),
      'applicant_pilot'              => new sfWidgetFormFilterInput(),
      'spouse_pilot'                 => new sfWidgetFormFilterInput(),
      'applicant_copilot'            => new sfWidgetFormFilterInput(),
      'languages_spoken'             => new sfWidgetFormFilterInput(),
      'home_base'                    => new sfWidgetFormFilterInput(),
      'fbo_name'                     => new sfWidgetFormFilterInput(),
      'aircraft_primary_id'          => new sfWidgetFormFilterInput(),
      'aircraft_primary_own'         => new sfWidgetFormFilterInput(),
      'aircraft_primary_ice'         => new sfWidgetFormFilterInput(),
      'aircraft_primary_seats'       => new sfWidgetFormFilterInput(),
      'aircraft_primary_n_number'    => new sfWidgetFormFilterInput(),
      'aircraft_secondary_id'        => new sfWidgetFormFilterInput(),
      'aircraft_secondary_own'       => new sfWidgetFormFilterInput(),
      'aircraft_secondary_ice'       => new sfWidgetFormFilterInput(),
      'aircraft_secondary_seats'     => new sfWidgetFormFilterInput(),
      'aircraft_secondary_n_number'  => new sfWidgetFormFilterInput(),
      'pilot_certificate'            => new sfWidgetFormFilterInput(),
      'ratings'                      => new sfWidgetFormFilterInput(),
      'medical_class'                => new sfWidgetFormFilterInput(),
      'license_type'                 => new sfWidgetFormFilterInput(),
      'total_hours'                  => new sfWidgetFormFilterInput(),
      'ifr_hours'                    => new sfWidgetFormFilterInput(),
      'multi_hours'                  => new sfWidgetFormFilterInput(),
      'other_hours'                  => new sfWidgetFormFilterInput(),
      'date_of_birth'                => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'height'                       => new sfWidgetFormFilterInput(),
      'weight'                       => new sfWidgetFormFilterInput(),
      'availability_weekdays'        => new sfWidgetFormFilterInput(),
      'availability_weeknights'      => new sfWidgetFormFilterInput(),
      'availability_weekends'        => new sfWidgetFormFilterInput(),
      'availability_notice'          => new sfWidgetFormFilterInput(),
      'availability_last_minute'     => new sfWidgetFormFilterInput(),
      'availability_copilot'         => new sfWidgetFormFilterInput(),
      'affirmation_agreed'           => new sfWidgetFormFilterInput(),
      'insurance_agreed'             => new sfWidgetFormFilterInput(),
      'volunteer_interest'           => new sfWidgetFormFilterInput(),
      'company_name'                 => new sfWidgetFormFilterInput(),
      'company_position'             => new sfWidgetFormFilterInput(),
      'company_match_funds'          => new sfWidgetFormFilterInput(),
      'company_business_category_id' => new sfWidgetFormFilterInput(),
      'referral_source'              => new sfWidgetFormFilterInput(),
      'premium_choice'               => new sfWidgetFormFilterInput(),
      'premium_size'                 => new sfWidgetFormFilterInput(),
      'dues_amount_paid'             => new sfWidgetFormFilterInput(),
      'donation_amount_paid'         => new sfWidgetFormFilterInput(),
      'method_of_payment_id'         => new sfWidgetFormFilterInput(),
      'ccard_approval_number'        => new sfWidgetFormFilterInput(),
      'ccard_error_code'             => new sfWidgetFormFilterInput(),
      'ccard_avs_result'             => new sfWidgetFormFilterInput(),
      'processed_date'               => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'member_id'                    => new sfWidgetFormFilterInput(),
      'mission_orientation'          => new sfWidgetFormFilterInput(),
      'mission_coordination'         => new sfWidgetFormFilterInput(),
      'pilot_recruitment'            => new sfWidgetFormFilterInput(),
      'fund_raising'                 => new sfWidgetFormFilterInput(),
      'celebrity_contacts'           => new sfWidgetFormFilterInput(),
      'hospital_outreach'            => new sfWidgetFormFilterInput(),
      'media_relations'              => new sfWidgetFormFilterInput(),
      'telephone_work'               => new sfWidgetFormFilterInput(),
      'computers'                    => new sfWidgetFormFilterInput(),
      'clerical'                     => new sfWidgetFormFilterInput(),
      'publicity'                    => new sfWidgetFormFilterInput(),
      'writing'                      => new sfWidgetFormFilterInput(),
      'speakers_bureau'              => new sfWidgetFormFilterInput(),
      'wing_team'                    => new sfWidgetFormFilterInput(),
      'graphic_arts'                 => new sfWidgetFormFilterInput(),
      'event_planning'               => new sfWidgetFormFilterInput(),
      'web_internet'                 => new sfWidgetFormFilterInput(),
      'foundation_contacts'          => new sfWidgetFormFilterInput(),
      'aviation_contacts'            => new sfWidgetFormFilterInput(),
      'printing'                     => new sfWidgetFormFilterInput(),
      'member_aopa'                  => new sfWidgetFormFilterInput(),
      'member_kiwanis'               => new sfWidgetFormFilterInput(),
      'member_rotary'                => new sfWidgetFormFilterInput(),
      'member_lions'                 => new sfWidgetFormFilterInput(),
      'person_id'                    => new sfWidgetFormFilterInput(),
      'novapointe_id'                => new sfWidgetFormFilterInput(),
      'premium_ship_date'            => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'premium_ship_method'          => new sfWidgetFormFilterInput(),
      'premium_ship_cost'            => new sfWidgetFormFilterInput(),
      'premium_ship_tracking_number' => new sfWidgetFormFilterInput(),
      'referer_name'                 => new sfWidgetFormFilterInput(),
      'referral_session_id'          => new sfWidgetFormFilterInput(),
      'aircraft_third_id'            => new sfWidgetFormFilterInput(),
      'aircraft_third_own'           => new sfWidgetFormFilterInput(),
      'aircraft_third_ice'           => new sfWidgetFormFilterInput(),
      'aircraft_third_seats'         => new sfWidgetFormFilterInput(),
      'aircraft_third_n_number'      => new sfWidgetFormFilterInput(),
      'ip_address'                   => new sfWidgetFormFilterInput(),
      'pager_email'                  => new sfWidgetFormFilterInput(),
      'member_99s'                   => new sfWidgetFormFilterInput(),
      'member_wia'                   => new sfWidgetFormFilterInput(),
      'mission_email_optin'          => new sfWidgetFormFilterInput(),
      'hseats_interest'              => new sfWidgetFormFilterInput(),
      'master_application_id'        => new sfWidgetFormFilterInput(),
      'master_member_id'             => new sfWidgetFormFilterInput(),
      'referral_source_other'        => new sfWidgetFormFilterInput(),
      'secondary_email'              => new sfWidgetFormFilterInput(),
      'payment_transaction_id'       => new sfWidgetFormFilterInput(),
      'middle_name'                  => new sfWidgetFormFilterInput(),
      'suffix'                       => new sfWidgetFormFilterInput(),
      'nickname'                     => new sfWidgetFormFilterInput(),
      'veteran'                      => new sfWidgetFormFilterInput(),
      'gender'                       => new sfWidgetFormFilterInput(),
      'emergency_contact_name'       => new sfWidgetFormFilterInput(),
      'emergency_contact_phone'      => new sfWidgetFormFilterInput(),
      'country'                      => new sfWidgetFormFilterInput(),
      'drivers_license_state'        => new sfWidgetFormFilterInput(),
      'drivers_license_number'       => new sfWidgetFormFilterInput(),
      'ccard_number'                 => new sfWidgetFormFilterInput(),
      'ccard_code'                   => new sfWidgetFormFilterInput(),
      'ccard_expire'                 => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => true)),
      'is_complete'                  => new sfWidgetFormFilterInput(),
      'member_class_id'              => new sfWidgetFormFilterInput(),
      'wing_id'                      => new sfWidgetFormFilterInput(),
    ));

    $this->setValidators(array(
      'application_date'             => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'renewal'                      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'title'                        => new sfValidatorPass(array('required' => false)),
      'first_name'                   => new sfValidatorPass(array('required' => false)),
      'last_name'                    => new sfValidatorPass(array('required' => false)),
      'address1'                     => new sfValidatorPass(array('required' => false)),
      'address2'                     => new sfValidatorPass(array('required' => false)),
      'city'                         => new sfValidatorPass(array('required' => false)),
      'state'                        => new sfValidatorPass(array('required' => false)),
      'zipcode'                      => new sfValidatorPass(array('required' => false)),
      'day_phone'                    => new sfValidatorPass(array('required' => false)),
      'day_comment'                  => new sfValidatorPass(array('required' => false)),
      'eve_phone'                    => new sfValidatorPass(array('required' => false)),
      'eve_comment'                  => new sfValidatorPass(array('required' => false)),
      'mobile_phone'                 => new sfValidatorPass(array('required' => false)),
      'mobile_comment'               => new sfValidatorPass(array('required' => false)),
      'pager_phone'                  => new sfValidatorPass(array('required' => false)),
      'pager_comment'                => new sfValidatorPass(array('required' => false)),
      'fax_phone1'                   => new sfValidatorPass(array('required' => false)),
      'fax_comment1'                 => new sfValidatorPass(array('required' => false)),
      'fax_phone2'                   => new sfValidatorPass(array('required' => false)),
      'fax_comment2'                 => new sfValidatorPass(array('required' => false)),
      'other_phone'                  => new sfValidatorPass(array('required' => false)),
      'other_comment'                => new sfValidatorPass(array('required' => false)),
      'email'                        => new sfValidatorPass(array('required' => false)),
      'spouse_first_name'            => new sfValidatorPass(array('required' => false)),
      'spouse_last_name'             => new sfValidatorPass(array('required' => false)),
      'applicant_pilot'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'spouse_pilot'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'applicant_copilot'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'languages_spoken'             => new sfValidatorPass(array('required' => false)),
      'home_base'                    => new sfValidatorPass(array('required' => false)),
      'fbo_name'                     => new sfValidatorPass(array('required' => false)),
      'aircraft_primary_id'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_primary_own'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_primary_ice'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_primary_seats'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_primary_n_number'    => new sfValidatorPass(array('required' => false)),
      'aircraft_secondary_id'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_secondary_own'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_secondary_ice'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_secondary_seats'     => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_secondary_n_number'  => new sfValidatorPass(array('required' => false)),
      'pilot_certificate'            => new sfValidatorPass(array('required' => false)),
      'ratings'                      => new sfValidatorPass(array('required' => false)),
      'medical_class'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'license_type'                 => new sfValidatorPass(array('required' => false)),
      'total_hours'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'ifr_hours'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'multi_hours'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'other_hours'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'date_of_birth'                => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'height'                       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'weight'                       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availability_weekdays'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availability_weeknights'      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availability_weekends'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availability_notice'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availability_last_minute'     => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'availability_copilot'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'affirmation_agreed'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'insurance_agreed'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'volunteer_interest'           => new sfValidatorPass(array('required' => false)),
      'company_name'                 => new sfValidatorPass(array('required' => false)),
      'company_position'             => new sfValidatorPass(array('required' => false)),
      'company_match_funds'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'company_business_category_id' => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'referral_source'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'premium_choice'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'premium_size'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'dues_amount_paid'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'donation_amount_paid'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'method_of_payment_id'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'ccard_approval_number'        => new sfValidatorPass(array('required' => false)),
      'ccard_error_code'             => new sfValidatorPass(array('required' => false)),
      'ccard_avs_result'             => new sfValidatorPass(array('required' => false)),
      'processed_date'               => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'member_id'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'mission_orientation'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'mission_coordination'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'pilot_recruitment'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'fund_raising'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'celebrity_contacts'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'hospital_outreach'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'media_relations'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'telephone_work'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'computers'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'clerical'                     => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'publicity'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'writing'                      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'speakers_bureau'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'wing_team'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'graphic_arts'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'event_planning'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'web_internet'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'foundation_contacts'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aviation_contacts'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'printing'                     => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_aopa'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_kiwanis'               => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_rotary'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_lions'                 => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'person_id'                    => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'novapointe_id'                => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'premium_ship_date'            => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'premium_ship_method'          => new sfValidatorPass(array('required' => false)),
      'premium_ship_cost'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'premium_ship_tracking_number' => new sfValidatorPass(array('required' => false)),
      'referer_name'                 => new sfValidatorPass(array('required' => false)),
      'referral_session_id'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_third_id'            => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_third_own'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_third_ice'           => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_third_seats'         => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'aircraft_third_n_number'      => new sfValidatorPass(array('required' => false)),
      'ip_address'                   => new sfValidatorPass(array('required' => false)),
      'pager_email'                  => new sfValidatorPass(array('required' => false)),
      'member_99s'                   => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_wia'                   => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'mission_email_optin'          => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'hseats_interest'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'master_application_id'        => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'master_member_id'             => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'referral_source_other'        => new sfValidatorPass(array('required' => false)),
      'secondary_email'              => new sfValidatorPass(array('required' => false)),
      'payment_transaction_id'       => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'middle_name'                  => new sfValidatorPass(array('required' => false)),
      'suffix'                       => new sfValidatorPass(array('required' => false)),
      'nickname'                     => new sfValidatorPass(array('required' => false)),
      'veteran'                      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'gender'                       => new sfValidatorPass(array('required' => false)),
      'emergency_contact_name'       => new sfValidatorPass(array('required' => false)),
      'emergency_contact_phone'      => new sfValidatorPass(array('required' => false)),
      'country'                      => new sfValidatorPass(array('required' => false)),
      'drivers_license_state'        => new sfValidatorPass(array('required' => false)),
      'drivers_license_number'       => new sfValidatorPass(array('required' => false)),
      'ccard_number'                 => new sfValidatorPass(array('required' => false)),
      'ccard_code'                   => new sfValidatorPass(array('required' => false)),
      'ccard_expire'                 => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDate(array('required' => false)), 'to_date' => new sfValidatorDate(array('required' => false)))),
      'is_complete'                  => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'member_class_id'              => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
      'wing_id'                      => new sfValidatorSchemaFilter('text', new sfValidatorInteger(array('required' => false))),
    ));

    $this->widgetSchema->setNameFormat('application_temp_filters[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    parent::setup();
  }

  public function getModelName()
  {
    return 'ApplicationTemp';
  }

  public function getFields()
  {
    return array(
      'id'                           => 'Number',
      'application_date'             => 'Date',
      'renewal'                      => 'Number',
      'title'                        => 'Text',
      'first_name'                   => 'Text',
      'last_name'                    => 'Text',
      'address1'                     => 'Text',
      'address2'                     => 'Text',
      'city'                         => 'Text',
      'state'                        => 'Text',
      'zipcode'                      => 'Text',
      'day_phone'                    => 'Text',
      'day_comment'                  => 'Text',
      'eve_phone'                    => 'Text',
      'eve_comment'                  => 'Text',
      'mobile_phone'                 => 'Text',
      'mobile_comment'               => 'Text',
      'pager_phone'                  => 'Text',
      'pager_comment'                => 'Text',
      'fax_phone1'                   => 'Text',
      'fax_comment1'                 => 'Text',
      'fax_phone2'                   => 'Text',
      'fax_comment2'                 => 'Text',
      'other_phone'                  => 'Text',
      'other_comment'                => 'Text',
      'email'                        => 'Text',
      'spouse_first_name'            => 'Text',
      'spouse_last_name'             => 'Text',
      'applicant_pilot'              => 'Number',
      'spouse_pilot'                 => 'Number',
      'applicant_copilot'            => 'Number',
      'languages_spoken'             => 'Text',
      'home_base'                    => 'Text',
      'fbo_name'                     => 'Text',
      'aircraft_primary_id'          => 'Number',
      'aircraft_primary_own'         => 'Number',
      'aircraft_primary_ice'         => 'Number',
      'aircraft_primary_seats'       => 'Number',
      'aircraft_primary_n_number'    => 'Text',
      'aircraft_secondary_id'        => 'Number',
      'aircraft_secondary_own'       => 'Number',
      'aircraft_secondary_ice'       => 'Number',
      'aircraft_secondary_seats'     => 'Number',
      'aircraft_secondary_n_number'  => 'Text',
      'pilot_certificate'            => 'Text',
      'ratings'                      => 'Text',
      'medical_class'                => 'Number',
      'license_type'                 => 'Text',
      'total_hours'                  => 'Number',
      'ifr_hours'                    => 'Number',
      'multi_hours'                  => 'Number',
      'other_hours'                  => 'Number',
      'date_of_birth'                => 'Date',
      'height'                       => 'Number',
      'weight'                       => 'Number',
      'availability_weekdays'        => 'Number',
      'availability_weeknights'      => 'Number',
      'availability_weekends'        => 'Number',
      'availability_notice'          => 'Number',
      'availability_last_minute'     => 'Number',
      'availability_copilot'         => 'Number',
      'affirmation_agreed'           => 'Number',
      'insurance_agreed'             => 'Number',
      'volunteer_interest'           => 'Text',
      'company_name'                 => 'Text',
      'company_position'             => 'Text',
      'company_match_funds'          => 'Number',
      'company_business_category_id' => 'Number',
      'referral_source'              => 'Number',
      'premium_choice'               => 'Number',
      'premium_size'                 => 'Number',
      'dues_amount_paid'             => 'Number',
      'donation_amount_paid'         => 'Number',
      'method_of_payment_id'         => 'Number',
      'ccard_approval_number'        => 'Text',
      'ccard_error_code'             => 'Text',
      'ccard_avs_result'             => 'Text',
      'processed_date'               => 'Date',
      'member_id'                    => 'Number',
      'mission_orientation'          => 'Number',
      'mission_coordination'         => 'Number',
      'pilot_recruitment'            => 'Number',
      'fund_raising'                 => 'Number',
      'celebrity_contacts'           => 'Number',
      'hospital_outreach'            => 'Number',
      'media_relations'              => 'Number',
      'telephone_work'               => 'Number',
      'computers'                    => 'Number',
      'clerical'                     => 'Number',
      'publicity'                    => 'Number',
      'writing'                      => 'Number',
      'speakers_bureau'              => 'Number',
      'wing_team'                    => 'Number',
      'graphic_arts'                 => 'Number',
      'event_planning'               => 'Number',
      'web_internet'                 => 'Number',
      'foundation_contacts'          => 'Number',
      'aviation_contacts'            => 'Number',
      'printing'                     => 'Number',
      'member_aopa'                  => 'Number',
      'member_kiwanis'               => 'Number',
      'member_rotary'                => 'Number',
      'member_lions'                 => 'Number',
      'person_id'                    => 'Number',
      'novapointe_id'                => 'Number',
      'premium_ship_date'            => 'Date',
      'premium_ship_method'          => 'Text',
      'premium_ship_cost'            => 'Number',
      'premium_ship_tracking_number' => 'Text',
      'referer_name'                 => 'Text',
      'referral_session_id'          => 'Number',
      'aircraft_third_id'            => 'Number',
      'aircraft_third_own'           => 'Number',
      'aircraft_third_ice'           => 'Number',
      'aircraft_third_seats'         => 'Number',
      'aircraft_third_n_number'      => 'Text',
      'ip_address'                   => 'Text',
      'pager_email'                  => 'Text',
      'member_99s'                   => 'Number',
      'member_wia'                   => 'Number',
      'mission_email_optin'          => 'Number',
      'hseats_interest'              => 'Number',
      'master_application_id'        => 'Number',
      'master_member_id'             => 'Number',
      'referral_source_other'        => 'Text',
      'secondary_email'              => 'Text',
      'payment_transaction_id'       => 'Number',
      'middle_name'                  => 'Text',
      'suffix'                       => 'Text',
      'nickname'                     => 'Text',
      'veteran'                      => 'Number',
      'gender'                       => 'Text',
      'emergency_contact_name'       => 'Text',
      'emergency_contact_phone'      => 'Text',
      'country'                      => 'Text',
      'drivers_license_state'        => 'Text',
      'drivers_license_number'       => 'Text',
      'ccard_number'                 => 'Text',
      'ccard_code'                   => 'Text',
      'ccard_expire'                 => 'Date',
      'is_complete'                  => 'Number',
      'member_class_id'              => 'Number',
      'wing_id'                      => 'Number',
    );
  }
}
